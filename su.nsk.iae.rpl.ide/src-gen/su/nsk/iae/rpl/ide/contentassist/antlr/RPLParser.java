/*
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import su.nsk.iae.rpl.ide.contentassist.antlr.internal.InternalRPLParser;
import su.nsk.iae.rpl.services.RPLGrammarAccess;

public class RPLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(RPLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, RPLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getBasicRequirementPatternAccess().getAlternatives(), "rule__BasicRequirementPattern__Alternatives");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getAlternatives_8(), "rule__DerivedRequirementPattern__Alternatives_8");
			builder.put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
			builder.put(grammarAccess.getFormulaParameterAccess().getAlternatives(), "rule__FormulaParameter__Alternatives");
			builder.put(grammarAccess.getPrimaryFormulaAccess().getAlternatives(), "rule__PrimaryFormula__Alternatives");
			builder.put(grammarAccess.getOuterRequirementPatternAccess().getAlternatives(), "rule__OuterRequirementPattern__Alternatives");
			builder.put(grammarAccess.getPrimaryInnerFormulaAccess().getAlternatives(), "rule__PrimaryInnerFormula__Alternatives");
			builder.put(grammarAccess.getAtomicFormulaAccess().getAlternatives(), "rule__AtomicFormula__Alternatives");
			builder.put(grammarAccess.getDirAccess().getAlternatives(), "rule__Dir__Alternatives");
			builder.put(grammarAccess.getNegationTermAccess().getAlternatives(), "rule__NegationTerm__Alternatives");
			builder.put(grammarAccess.getUnaryTermAccess().getAlternatives(), "rule__UnaryTerm__Alternatives");
			builder.put(grammarAccess.getPrimaryTermAccess().getAlternatives(), "rule__PrimaryTerm__Alternatives");
			builder.put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
			builder.put(grammarAccess.getNumericLiteralAccess().getAlternatives(), "rule__NumericLiteral__Alternatives");
			builder.put(grammarAccess.getPrimaryPatternFreeFormulaAccess().getAlternatives(), "rule__PrimaryPatternFreeFormula__Alternatives");
			builder.put(grammarAccess.getLemmaPremiseFormulaAccess().getAlternatives(), "rule__LemmaPremiseFormula__Alternatives");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getAlternatives(), "rule__PrimaryLemmaPremiseFormula__Alternatives");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getAlternatives_5(), "rule__PastExtraInvariantPatternInstance__Alternatives_5");
			builder.put(grammarAccess.getEqPredicateAccess().getAlternatives(), "rule__EqPredicate__Alternatives");
			builder.put(grammarAccess.getCompPredicateAccess().getAlternatives(), "rule__CompPredicate__Alternatives");
			builder.put(grammarAccess.getAddOperatorAccess().getAlternatives(), "rule__AddOperator__Alternatives");
			builder.put(grammarAccess.getMulOperatorAccess().getAlternatives(), "rule__MulOperator__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
			builder.put(grammarAccess.getImportAccess().getGroup_2(), "rule__Import__Group_2__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup(), "rule__DerivedRequirementPattern__Group__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_4(), "rule__DerivedRequirementPattern__Group_4__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_4_3(), "rule__DerivedRequirementPattern__Group_4_3__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_5(), "rule__DerivedRequirementPattern__Group_5__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_5_4(), "rule__DerivedRequirementPattern__Group_5_4__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_6(), "rule__DerivedRequirementPattern__Group_6__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_6_3(), "rule__DerivedRequirementPattern__Group_6_3__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_8_0(), "rule__DerivedRequirementPattern__Group_8_0__0");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getGroup_8_1(), "rule__DerivedRequirementPattern__Group_8_1__0");
			builder.put(grammarAccess.getVarDeclarationAccess().getGroup(), "rule__VarDeclaration__Group__0");
			builder.put(grammarAccess.getVarDeclarationAccess().getGroup_2(), "rule__VarDeclaration__Group_2__0");
			builder.put(grammarAccess.getSimpleFormulaParameterAccess().getGroup(), "rule__SimpleFormulaParameter__Group__0");
			builder.put(grammarAccess.getSimpleFormulaParameterAccess().getGroup_1(), "rule__SimpleFormulaParameter__Group_1__0");
			builder.put(grammarAccess.getFormulaAccess().getGroup(), "rule__Formula__Group__0");
			builder.put(grammarAccess.getFormulaAccess().getGroup_1(), "rule__Formula__Group_1__0");
			builder.put(grammarAccess.getConjunctionFormulaAccess().getGroup(), "rule__ConjunctionFormula__Group__0");
			builder.put(grammarAccess.getConjunctionFormulaAccess().getGroup_1(), "rule__ConjunctionFormula__Group_1__0");
			builder.put(grammarAccess.getPrimaryFormulaAccess().getGroup_1(), "rule__PrimaryFormula__Group_1__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup(), "rule__OuterRequirementPatternInstance__Group__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_2(), "rule__OuterRequirementPatternInstance__Group_2__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_2_3(), "rule__OuterRequirementPatternInstance__Group_2_3__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_3(), "rule__OuterRequirementPatternInstance__Group_3__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_3_4(), "rule__OuterRequirementPatternInstance__Group_3_4__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_4(), "rule__OuterRequirementPatternInstance__Group_4__0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getGroup_4_3(), "rule__OuterRequirementPatternInstance__Group_4_3__0");
			builder.put(grammarAccess.getFormulaParameterValueAccess().getGroup(), "rule__FormulaParameterValue__Group__0");
			builder.put(grammarAccess.getFormulaParameterValueAccess().getGroup_0(), "rule__FormulaParameterValue__Group_0__0");
			builder.put(grammarAccess.getInnerFormulaAccess().getGroup(), "rule__InnerFormula__Group__0");
			builder.put(grammarAccess.getInnerFormulaAccess().getGroup_1(), "rule__InnerFormula__Group_1__0");
			builder.put(grammarAccess.getConjunctionInnerFormulaAccess().getGroup(), "rule__ConjunctionInnerFormula__Group__0");
			builder.put(grammarAccess.getConjunctionInnerFormulaAccess().getGroup_1(), "rule__ConjunctionInnerFormula__Group_1__0");
			builder.put(grammarAccess.getPrimaryInnerFormulaAccess().getGroup_2(), "rule__PrimaryInnerFormula__Group_2__0");
			builder.put(grammarAccess.getNegationFormulaAccess().getGroup(), "rule__NegationFormula__Group__0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getGroup_1(), "rule__AtomicFormula__Group_1__0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getGroup_2(), "rule__AtomicFormula__Group_2__0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getGroup_2_1(), "rule__AtomicFormula__Group_2_1__0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getGroup_2_1_2(), "rule__AtomicFormula__Group_2_1_2__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup(), "rule__BasicRequirementPatternInstance__Group__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_2(), "rule__BasicRequirementPatternInstance__Group_2__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_2_3(), "rule__BasicRequirementPatternInstance__Group_2_3__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_3(), "rule__BasicRequirementPatternInstance__Group_3__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_3_3(), "rule__BasicRequirementPatternInstance__Group_3_3__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_4(), "rule__BasicRequirementPatternInstance__Group_4__0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getGroup_4_3(), "rule__BasicRequirementPatternInstance__Group_4_3__0");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getGroup(), "rule__FutureRequirementPattern__Group__0");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getGroup_4(), "rule__FutureRequirementPattern__Group_4__0");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getGroup_4_3(), "rule__FutureRequirementPattern__Group_4_3__0");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getGroup_5(), "rule__FutureRequirementPattern__Group_5__0");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getGroup_5_3(), "rule__FutureRequirementPattern__Group_5_3__0");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getGroup(), "rule__PastRequirementPattern__Group__0");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getGroup_4(), "rule__PastRequirementPattern__Group_4__0");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getGroup_4_3(), "rule__PastRequirementPattern__Group_4_3__0");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getGroup_5(), "rule__PastRequirementPattern__Group_5__0");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getGroup_5_3(), "rule__PastRequirementPattern__Group_5_3__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup(), "rule__FutureExtraInvariantPattern__Group__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_4(), "rule__FutureExtraInvariantPattern__Group_4__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_4_3(), "rule__FutureExtraInvariantPattern__Group_4_3__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_5(), "rule__FutureExtraInvariantPattern__Group_5__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_5_3(), "rule__FutureExtraInvariantPattern__Group_5_3__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_6(), "rule__FutureExtraInvariantPattern__Group_6__0");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getGroup_6_3(), "rule__FutureExtraInvariantPattern__Group_6_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup(), "rule__PastExtraInvariantPattern__Group__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_4(), "rule__PastExtraInvariantPattern__Group_4__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_4_3(), "rule__PastExtraInvariantPattern__Group_4_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_5(), "rule__PastExtraInvariantPattern__Group_5__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_5_3(), "rule__PastExtraInvariantPattern__Group_5_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_6(), "rule__PastExtraInvariantPattern__Group_6__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getGroup_6_3(), "rule__PastExtraInvariantPattern__Group_6_3__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup(), "rule__DerivedExtraInvariantPattern__Group__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_4(), "rule__DerivedExtraInvariantPattern__Group_4__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_4_3(), "rule__DerivedExtraInvariantPattern__Group_4_3__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_5(), "rule__DerivedExtraInvariantPattern__Group_5__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_5_3(), "rule__DerivedExtraInvariantPattern__Group_5_3__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_6(), "rule__DerivedExtraInvariantPattern__Group_6__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_6_4(), "rule__DerivedExtraInvariantPattern__Group_6_4__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_7(), "rule__DerivedExtraInvariantPattern__Group_7__0");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getGroup_7_3(), "rule__DerivedExtraInvariantPattern__Group_7_3__0");
			builder.put(grammarAccess.getFilePathAccess().getGroup(), "rule__FilePath__Group__0");
			builder.put(grammarAccess.getFilePathAccess().getGroup_1(), "rule__FilePath__Group_1__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getConjunctionTermAccess().getGroup(), "rule__ConjunctionTerm__Group__0");
			builder.put(grammarAccess.getConjunctionTermAccess().getGroup_1(), "rule__ConjunctionTerm__Group_1__0");
			builder.put(grammarAccess.getNegationTermAccess().getGroup_1(), "rule__NegationTerm__Group_1__0");
			builder.put(grammarAccess.getEqTermAccess().getGroup(), "rule__EqTerm__Group__0");
			builder.put(grammarAccess.getEqTermAccess().getGroup_1(), "rule__EqTerm__Group_1__0");
			builder.put(grammarAccess.getCompareTermAccess().getGroup(), "rule__CompareTerm__Group__0");
			builder.put(grammarAccess.getCompareTermAccess().getGroup_1(), "rule__CompareTerm__Group_1__0");
			builder.put(grammarAccess.getAddTermAccess().getGroup(), "rule__AddTerm__Group__0");
			builder.put(grammarAccess.getAddTermAccess().getGroup_1(), "rule__AddTerm__Group_1__0");
			builder.put(grammarAccess.getMulTermAccess().getGroup(), "rule__MulTerm__Group__0");
			builder.put(grammarAccess.getMulTermAccess().getGroup_1(), "rule__MulTerm__Group_1__0");
			builder.put(grammarAccess.getPowerTermAccess().getGroup(), "rule__PowerTerm__Group__0");
			builder.put(grammarAccess.getPowerTermAccess().getGroup_1(), "rule__PowerTerm__Group_1__0");
			builder.put(grammarAccess.getUnaryTermAccess().getGroup_1(), "rule__UnaryTerm__Group_1__0");
			builder.put(grammarAccess.getPrimaryTermAccess().getGroup_3(), "rule__PrimaryTerm__Group_3__0");
			builder.put(grammarAccess.getFunApplicationAccess().getGroup(), "rule__FunApplication__Group__0");
			builder.put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
			builder.put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
			builder.put(grammarAccess.getPatternFreeFormulaAccess().getGroup(), "rule__PatternFreeFormula__Group__0");
			builder.put(grammarAccess.getPatternFreeFormulaAccess().getGroup_1(), "rule__PatternFreeFormula__Group_1__0");
			builder.put(grammarAccess.getConjunctionPatternFreeFormulaAccess().getGroup(), "rule__ConjunctionPatternFreeFormula__Group__0");
			builder.put(grammarAccess.getConjunctionPatternFreeFormulaAccess().getGroup_1(), "rule__ConjunctionPatternFreeFormula__Group_1__0");
			builder.put(grammarAccess.getPrimaryPatternFreeFormulaAccess().getGroup_1(), "rule__PrimaryPatternFreeFormula__Group_1__0");
			builder.put(grammarAccess.getRequirementAccess().getGroup(), "rule__Requirement__Group__0");
			builder.put(grammarAccess.getExtraInvariantAccess().getGroup(), "rule__ExtraInvariant__Group__0");
			builder.put(grammarAccess.getPatternFreeFormulaParameterValueAccess().getGroup(), "rule__PatternFreeFormulaParameterValue__Group__0");
			builder.put(grammarAccess.getPatternFreeFormulaParameterValueAccess().getGroup_0(), "rule__PatternFreeFormulaParameterValue__Group_0__0");
			builder.put(grammarAccess.getFutureLemmasAccess().getGroup(), "rule__FutureLemmas__Group__0");
			builder.put(grammarAccess.getFutureLemmasAccess().getGroup_1(), "rule__FutureLemmas__Group_1__0");
			builder.put(grammarAccess.getFutureLemmasAccess().getGroup_1_2_0(), "rule__FutureLemmas__Group_1_2_0__0");
			builder.put(grammarAccess.getFutureLemmasAccess().getGroup_1_2_1(), "rule__FutureLemmas__Group_1_2_1__0");
			builder.put(grammarAccess.getFutureLemmasAccess().getGroup_1_2_2(), "rule__FutureLemmas__Group_1_2_2__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup(), "rule__PastLemmas__Group__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup_1(), "rule__PastLemmas__Group_1__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup_1_2_0(), "rule__PastLemmas__Group_1_2_0__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup_1_2_1(), "rule__PastLemmas__Group_1_2_1__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup_1_2_2(), "rule__PastLemmas__Group_1_2_2__0");
			builder.put(grammarAccess.getPastLemmasAccess().getGroup_1_2_3(), "rule__PastLemmas__Group_1_2_3__0");
			builder.put(grammarAccess.getDerivedLemmasAccess().getGroup(), "rule__DerivedLemmas__Group__0");
			builder.put(grammarAccess.getDerivedLemmasAccess().getGroup_1(), "rule__DerivedLemmas__Group_1__0");
			builder.put(grammarAccess.getDerivedLemmasAccess().getGroup_1_2_0(), "rule__DerivedLemmas__Group_1_2_0__0");
			builder.put(grammarAccess.getDerivedLemmasAccess().getGroup_1_2_1(), "rule__DerivedLemmas__Group_1_2_1__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup(), "rule__Lemma__Group__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_3(), "rule__Lemma__Group_3__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_3_3(), "rule__Lemma__Group_3_3__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_4(), "rule__Lemma__Group_4__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_4_3(), "rule__Lemma__Group_4_3__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_5(), "rule__Lemma__Group_5__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_5_4(), "rule__Lemma__Group_5_4__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_6(), "rule__Lemma__Group_6__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_6_5(), "rule__Lemma__Group_6_5__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_7(), "rule__Lemma__Group_7__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_7_4(), "rule__Lemma__Group_7_4__0");
			builder.put(grammarAccess.getLemmaAccess().getGroup_8(), "rule__Lemma__Group_8__0");
			builder.put(grammarAccess.getLemmaPremiseFormulaAccess().getGroup_1(), "rule__LemmaPremiseFormula__Group_1__0");
			builder.put(grammarAccess.getDisjunctionLemmaPremiseFormulaAccess().getGroup(), "rule__DisjunctionLemmaPremiseFormula__Group__0");
			builder.put(grammarAccess.getDisjunctionLemmaPremiseFormulaAccess().getGroup_1(), "rule__DisjunctionLemmaPremiseFormula__Group_1__0");
			builder.put(grammarAccess.getConjunctionLemmaPremiseFormulaAccess().getGroup(), "rule__ConjunctionLemmaPremiseFormula__Group__0");
			builder.put(grammarAccess.getConjunctionLemmaPremiseFormulaAccess().getGroup_1(), "rule__ConjunctionLemmaPremiseFormula__Group_1__0");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getGroup_3(), "rule__PrimaryLemmaPremiseFormula__Group_3__0");
			builder.put(grammarAccess.getAlwaysImplicationAccess().getGroup(), "rule__AlwaysImplication__Group__0");
			builder.put(grammarAccess.getAlwaysImplicationParameterValueAccess().getGroup(), "rule__AlwaysImplicationParameterValue__Group__0");
			builder.put(grammarAccess.getAlwaysImplicationParameterValueAccess().getGroup_0(), "rule__AlwaysImplicationParameterValue__Group_0__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup(), "rule__PastExtraInvariantPatternInstance__Group__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_2(), "rule__PastExtraInvariantPatternInstance__Group_2__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_2_3(), "rule__PastExtraInvariantPatternInstance__Group_2_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_3(), "rule__PastExtraInvariantPatternInstance__Group_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_3_3(), "rule__PastExtraInvariantPatternInstance__Group_3_3__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_4(), "rule__PastExtraInvariantPatternInstance__Group_4__0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getGroup_4_3(), "rule__PastExtraInvariantPatternInstance__Group_4_3__0");
			builder.put(grammarAccess.getModelAccess().getImportsAssignment_0(), "rule__Model__ImportsAssignment_0");
			builder.put(grammarAccess.getModelAccess().getElementsAssignment_1(), "rule__Model__ElementsAssignment_1");
			builder.put(grammarAccess.getImportAccess().getImportURIAssignment_1(), "rule__Import__ImportURIAssignment_1");
			builder.put(grammarAccess.getImportAccess().getSessionAssignment_2_1(), "rule__Import__SessionAssignment_2_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getNameAssignment_2(), "rule__DerivedRequirementPattern__NameAssignment_2");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getCParamsAssignment_4_2(), "rule__DerivedRequirementPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getCParamsAssignment_4_3_1(), "rule__DerivedRequirementPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getSimpleFmParamsAssignment_5_3(), "rule__DerivedRequirementPattern__SimpleFmParamsAssignment_5_3");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getSimpleFmParamsAssignment_5_4_1(), "rule__DerivedRequirementPattern__SimpleFmParamsAssignment_5_4_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getFmParamsAssignment_6_2(), "rule__DerivedRequirementPattern__FmParamsAssignment_6_2");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getFmParamsAssignment_6_3_1(), "rule__DerivedRequirementPattern__FmParamsAssignment_6_3_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getDefinitionAssignment_8_0_1(), "rule__DerivedRequirementPattern__DefinitionAssignment_8_0_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getExtraInvPatternAssignment_8_1_1(), "rule__DerivedRequirementPattern__ExtraInvPatternAssignment_8_1_1");
			builder.put(grammarAccess.getDerivedRequirementPatternAccess().getLemmasAssignment_9(), "rule__DerivedRequirementPattern__LemmasAssignment_9");
			builder.put(grammarAccess.getVarDeclarationAccess().getVarsAssignment_1(), "rule__VarDeclaration__VarsAssignment_1");
			builder.put(grammarAccess.getVarDeclarationAccess().getVarsAssignment_2_1(), "rule__VarDeclaration__VarsAssignment_2_1");
			builder.put(grammarAccess.getProgramVariableAccess().getNameAssignment(), "rule__ProgramVariable__NameAssignment");
			builder.put(grammarAccess.getUpdateStateVariableAccess().getNameAssignment(), "rule__UpdateStateVariable__NameAssignment");
			builder.put(grammarAccess.getConstantParameterAccess().getNameAssignment(), "rule__ConstantParameter__NameAssignment");
			builder.put(grammarAccess.getSimpleFormulaParameterAccess().getNameAssignment_0(), "rule__SimpleFormulaParameter__NameAssignment_0");
			builder.put(grammarAccess.getSimpleFormulaParameterAccess().getArityAssignment_1_1(), "rule__SimpleFormulaParameter__ArityAssignment_1_1");
			builder.put(grammarAccess.getRegularFormulaParameterAccess().getNameAssignment(), "rule__RegularFormulaParameter__NameAssignment");
			builder.put(grammarAccess.getFunctionalParameterAccess().getNameAssignment(), "rule__FunctionalParameter__NameAssignment");
			builder.put(grammarAccess.getFormulaAccess().getRightAssignment_1_2(), "rule__Formula__RightAssignment_1_2");
			builder.put(grammarAccess.getConjunctionFormulaAccess().getRightAssignment_1_2(), "rule__ConjunctionFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getPrimaryFormulaAccess().getPatternInstAssignment_0(), "rule__PrimaryFormula__PatternInstAssignment_0");
			builder.put(grammarAccess.getPrimaryFormulaAccess().getNestedFormulaAssignment_1_1(), "rule__PrimaryFormula__NestedFormulaAssignment_1_1");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getPatternAssignment_0(), "rule__OuterRequirementPatternInstance__PatternAssignment_0");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getCParamsAssignment_2_2(), "rule__OuterRequirementPatternInstance__CParamsAssignment_2_2");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getCParamsAssignment_2_3_1(), "rule__OuterRequirementPatternInstance__CParamsAssignment_2_3_1");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getSimpleFmParamsAssignment_3_3(), "rule__OuterRequirementPatternInstance__SimpleFmParamsAssignment_3_3");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getSimpleFmParamsAssignment_3_4_1(), "rule__OuterRequirementPatternInstance__SimpleFmParamsAssignment_3_4_1");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getFmParamsAssignment_4_2(), "rule__OuterRequirementPatternInstance__FmParamsAssignment_4_2");
			builder.put(grammarAccess.getOuterRequirementPatternInstanceAccess().getFmParamsAssignment_4_3_1(), "rule__OuterRequirementPatternInstance__FmParamsAssignment_4_3_1");
			builder.put(grammarAccess.getFormulaParameterValueAccess().getStatesAssignment_0_1(), "rule__FormulaParameterValue__StatesAssignment_0_1");
			builder.put(grammarAccess.getFormulaParameterValueAccess().getFormulaAssignment_1(), "rule__FormulaParameterValue__FormulaAssignment_1");
			builder.put(grammarAccess.getInnerFormulaAccess().getRightAssignment_1_2(), "rule__InnerFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getConjunctionInnerFormulaAccess().getRightAssignment_1_2(), "rule__ConjunctionInnerFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getPrimaryInnerFormulaAccess().getAtomicAssignment_0(), "rule__PrimaryInnerFormula__AtomicAssignment_0");
			builder.put(grammarAccess.getPrimaryInnerFormulaAccess().getPatternInstAssignment_1(), "rule__PrimaryInnerFormula__PatternInstAssignment_1");
			builder.put(grammarAccess.getPrimaryInnerFormulaAccess().getNestedFormulaAssignment_2_1(), "rule__PrimaryInnerFormula__NestedFormulaAssignment_2_1");
			builder.put(grammarAccess.getNegationFormulaAccess().getNegAssignment_0(), "rule__NegationFormula__NegAssignment_0");
			builder.put(grammarAccess.getNegationFormulaAccess().getRightAssignment_1(), "rule__NegationFormula__RightAssignment_1");
			builder.put(grammarAccess.getAtomicFormulaAccess().getBoolLiteralAssignment_0(), "rule__AtomicFormula__BoolLiteralAssignment_0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getBoolTermAssignment_1_2(), "rule__AtomicFormula__BoolTermAssignment_1_2");
			builder.put(grammarAccess.getAtomicFormulaAccess().getFmParamAssignment_2_0(), "rule__AtomicFormula__FmParamAssignment_2_0");
			builder.put(grammarAccess.getAtomicFormulaAccess().getStatesAssignment_2_1_1(), "rule__AtomicFormula__StatesAssignment_2_1_1");
			builder.put(grammarAccess.getAtomicFormulaAccess().getStatesAssignment_2_1_2_1(), "rule__AtomicFormula__StatesAssignment_2_1_2_1");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getPatternAssignment_0(), "rule__BasicRequirementPatternInstance__PatternAssignment_0");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getCParamsAssignment_2_2(), "rule__BasicRequirementPatternInstance__CParamsAssignment_2_2");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getCParamsAssignment_2_3_1(), "rule__BasicRequirementPatternInstance__CParamsAssignment_2_3_1");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getFmParamsAssignment_3_2(), "rule__BasicRequirementPatternInstance__FmParamsAssignment_3_2");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getFmParamsAssignment_3_3_1(), "rule__BasicRequirementPatternInstance__FmParamsAssignment_3_3_1");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getFinStateAssignment_4_2(), "rule__BasicRequirementPatternInstance__FinStateAssignment_4_2");
			builder.put(grammarAccess.getBasicRequirementPatternInstanceAccess().getCurStateAssignment_4_3_2(), "rule__BasicRequirementPatternInstance__CurStateAssignment_4_3_2");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getNameAssignment_2(), "rule__FutureRequirementPattern__NameAssignment_2");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getCParamsAssignment_4_2(), "rule__FutureRequirementPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getCParamsAssignment_4_3_1(), "rule__FutureRequirementPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getFmParamsAssignment_5_2(), "rule__FutureRequirementPattern__FmParamsAssignment_5_2");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getFmParamsAssignment_5_3_1(), "rule__FutureRequirementPattern__FmParamsAssignment_5_3_1");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getExtraInvPatternAssignment_8(), "rule__FutureRequirementPattern__ExtraInvPatternAssignment_8");
			builder.put(grammarAccess.getFutureRequirementPatternAccess().getLessasAssignment_9(), "rule__FutureRequirementPattern__LessasAssignment_9");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getNameAssignment_2(), "rule__PastRequirementPattern__NameAssignment_2");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getCParamsAssignment_4_2(), "rule__PastRequirementPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getCParamsAssignment_4_3_1(), "rule__PastRequirementPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getFmParamsAssignment_5_2(), "rule__PastRequirementPattern__FmParamsAssignment_5_2");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getFmParamsAssignment_5_3_1(), "rule__PastRequirementPattern__FmParamsAssignment_5_3_1");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getExtraInvPatternAssignment_8(), "rule__PastRequirementPattern__ExtraInvPatternAssignment_8");
			builder.put(grammarAccess.getPastRequirementPatternAccess().getLemmasAssignment_9(), "rule__PastRequirementPattern__LemmasAssignment_9");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getNameAssignment_2(), "rule__FutureExtraInvariantPattern__NameAssignment_2");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getCParamsAssignment_4_2(), "rule__FutureExtraInvariantPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getCParamsAssignment_4_3_1(), "rule__FutureExtraInvariantPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getFnParamsAssignment_5_2(), "rule__FutureExtraInvariantPattern__FnParamsAssignment_5_2");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getFnParamsAssignment_5_3_1(), "rule__FutureExtraInvariantPattern__FnParamsAssignment_5_3_1");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getFmParamsAssignment_6_2(), "rule__FutureExtraInvariantPattern__FmParamsAssignment_6_2");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getFmParamsAssignment_6_3_1(), "rule__FutureExtraInvariantPattern__FmParamsAssignment_6_3_1");
			builder.put(grammarAccess.getFutureExtraInvariantPatternAccess().getLemmasAssignment_8(), "rule__FutureExtraInvariantPattern__LemmasAssignment_8");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getNameAssignment_2(), "rule__PastExtraInvariantPattern__NameAssignment_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getCParamsAssignment_4_2(), "rule__PastExtraInvariantPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getCParamsAssignment_4_3_1(), "rule__PastExtraInvariantPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getFnParamsAssignment_5_2(), "rule__PastExtraInvariantPattern__FnParamsAssignment_5_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getFnParamsAssignment_5_3_1(), "rule__PastExtraInvariantPattern__FnParamsAssignment_5_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getFmParamsAssignment_6_2(), "rule__PastExtraInvariantPattern__FmParamsAssignment_6_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getFmParamsAssignment_6_3_1(), "rule__PastExtraInvariantPattern__FmParamsAssignment_6_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternAccess().getLemmasAssignment_8(), "rule__PastExtraInvariantPattern__LemmasAssignment_8");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getNameAssignment_2(), "rule__DerivedExtraInvariantPattern__NameAssignment_2");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getCParamsAssignment_4_2(), "rule__DerivedExtraInvariantPattern__CParamsAssignment_4_2");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getCParamsAssignment_4_3_1(), "rule__DerivedExtraInvariantPattern__CParamsAssignment_4_3_1");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getFnParamsAssignment_5_2(), "rule__DerivedExtraInvariantPattern__FnParamsAssignment_5_2");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getFnParamsAssignment_5_3_1(), "rule__DerivedExtraInvariantPattern__FnParamsAssignment_5_3_1");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getSimpleFmParamsAssignment_6_3(), "rule__DerivedExtraInvariantPattern__SimpleFmParamsAssignment_6_3");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getSimpleFmParamsAssignment_6_4_1(), "rule__DerivedExtraInvariantPattern__SimpleFmParamsAssignment_6_4_1");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getFmParamsAssignment_7_2(), "rule__DerivedExtraInvariantPattern__FmParamsAssignment_7_2");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getFmParamsAssignment_7_3_1(), "rule__DerivedExtraInvariantPattern__FmParamsAssignment_7_3_1");
			builder.put(grammarAccess.getDerivedExtraInvariantPatternAccess().getLemmasAssignment_9(), "rule__DerivedExtraInvariantPattern__LemmasAssignment_9");
			builder.put(grammarAccess.getTermAccess().getRightAssignment_1_2(), "rule__Term__RightAssignment_1_2");
			builder.put(grammarAccess.getConjunctionTermAccess().getRightAssignment_1_2(), "rule__ConjunctionTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getNegationTermAccess().getRightAssignment_1_1(), "rule__NegationTerm__RightAssignment_1_1");
			builder.put(grammarAccess.getEqTermAccess().getEqPredAssignment_1_1(), "rule__EqTerm__EqPredAssignment_1_1");
			builder.put(grammarAccess.getEqTermAccess().getRightAssignment_1_2(), "rule__EqTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getCompareTermAccess().getCompPredAssignment_1_1(), "rule__CompareTerm__CompPredAssignment_1_1");
			builder.put(grammarAccess.getCompareTermAccess().getRightAssignment_1_2(), "rule__CompareTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getAddTermAccess().getAddOpAssignment_1_1(), "rule__AddTerm__AddOpAssignment_1_1");
			builder.put(grammarAccess.getAddTermAccess().getRightAssignment_1_2(), "rule__AddTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getMulTermAccess().getMulOpAssignment_1_1(), "rule__MulTerm__MulOpAssignment_1_1");
			builder.put(grammarAccess.getMulTermAccess().getRightAssignment_1_2(), "rule__MulTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getPowerTermAccess().getRightAssignment_1_2(), "rule__PowerTerm__RightAssignment_1_2");
			builder.put(grammarAccess.getUnaryTermAccess().getUnOpAssignment_1_0(), "rule__UnaryTerm__UnOpAssignment_1_0");
			builder.put(grammarAccess.getUnaryTermAccess().getRightAssignment_1_1(), "rule__UnaryTerm__RightAssignment_1_1");
			builder.put(grammarAccess.getPrimaryTermAccess().getConstAssignment_0(), "rule__PrimaryTerm__ConstAssignment_0");
			builder.put(grammarAccess.getPrimaryTermAccess().getVariableAssignment_1(), "rule__PrimaryTerm__VariableAssignment_1");
			builder.put(grammarAccess.getPrimaryTermAccess().getFunAppAssignment_2(), "rule__PrimaryTerm__FunAppAssignment_2");
			builder.put(grammarAccess.getPrimaryTermAccess().getNestedTermAssignment_3_1(), "rule__PrimaryTerm__NestedTermAssignment_3_1");
			builder.put(grammarAccess.getFunApplicationAccess().getFnParamAssignment_0(), "rule__FunApplication__FnParamAssignment_0");
			builder.put(grammarAccess.getFunApplicationAccess().getStateAssignment_2(), "rule__FunApplication__StateAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getNumAssignment_0(), "rule__Constant__NumAssignment_0");
			builder.put(grammarAccess.getConstantAccess().getBoolAssignment_1(), "rule__Constant__BoolAssignment_1");
			builder.put(grammarAccess.getIntegerLiteralAccess().getSigAssignment_0(), "rule__IntegerLiteral__SigAssignment_0");
			builder.put(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1(), "rule__IntegerLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getRealLiteralAccess().getSigAssignment_0(), "rule__RealLiteral__SigAssignment_0");
			builder.put(grammarAccess.getRealLiteralAccess().getValueAssignment_1(), "rule__RealLiteral__ValueAssignment_1");
			builder.put(grammarAccess.getPatternFreeFormulaAccess().getRightAssignment_1_2(), "rule__PatternFreeFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getConjunctionPatternFreeFormulaAccess().getRightAssignment_1_2(), "rule__ConjunctionPatternFreeFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getPrimaryPatternFreeFormulaAccess().getAtomicAssignment_0(), "rule__PrimaryPatternFreeFormula__AtomicAssignment_0");
			builder.put(grammarAccess.getPrimaryPatternFreeFormulaAccess().getNestedFormulaAssignment_1_1(), "rule__PrimaryPatternFreeFormula__NestedFormulaAssignment_1_1");
			builder.put(grammarAccess.getRequirementAccess().getNameAssignment_1(), "rule__Requirement__NameAssignment_1");
			builder.put(grammarAccess.getRequirementAccess().getPatternAssignment_3(), "rule__Requirement__PatternAssignment_3");
			builder.put(grammarAccess.getRequirementAccess().getExtraInvAssignment_5(), "rule__Requirement__ExtraInvAssignment_5");
			builder.put(grammarAccess.getExtraInvariantAccess().getNameAssignment_2(), "rule__ExtraInvariant__NameAssignment_2");
			builder.put(grammarAccess.getExtraInvariantAccess().getPatternAssignment_4(), "rule__ExtraInvariant__PatternAssignment_4");
			builder.put(grammarAccess.getPatternFreeFormulaParameterValueAccess().getStatesAssignment_0_1(), "rule__PatternFreeFormulaParameterValue__StatesAssignment_0_1");
			builder.put(grammarAccess.getPatternFreeFormulaParameterValueAccess().getFormulaAssignment_1(), "rule__PatternFreeFormulaParameterValue__FormulaAssignment_1");
			builder.put(grammarAccess.getFutureLemmasAccess().getL1Assignment_1_2_0_1(), "rule__FutureLemmas__L1Assignment_1_2_0_1");
			builder.put(grammarAccess.getFutureLemmasAccess().getL2Assignment_1_2_1_1(), "rule__FutureLemmas__L2Assignment_1_2_1_1");
			builder.put(grammarAccess.getFutureLemmasAccess().getL3Assignment_1_2_2_1(), "rule__FutureLemmas__L3Assignment_1_2_2_1");
			builder.put(grammarAccess.getPastLemmasAccess().getL4Assignment_1_2_0_1(), "rule__PastLemmas__L4Assignment_1_2_0_1");
			builder.put(grammarAccess.getPastLemmasAccess().getL5Assignment_1_2_1_1(), "rule__PastLemmas__L5Assignment_1_2_1_1");
			builder.put(grammarAccess.getPastLemmasAccess().getL6Assignment_1_2_2_1(), "rule__PastLemmas__L6Assignment_1_2_2_1");
			builder.put(grammarAccess.getPastLemmasAccess().getL7Assignment_1_2_3_1(), "rule__PastLemmas__L7Assignment_1_2_3_1");
			builder.put(grammarAccess.getDerivedLemmasAccess().getL8Assignment_1_2_0_1(), "rule__DerivedLemmas__L8Assignment_1_2_0_1");
			builder.put(grammarAccess.getDerivedLemmasAccess().getL9Assignment_1_2_1_1(), "rule__DerivedLemmas__L9Assignment_1_2_1_1");
			builder.put(grammarAccess.getLemmaAccess().getNameAssignment_1(), "rule__Lemma__NameAssignment_1");
			builder.put(grammarAccess.getLemmaAccess().getCVarsAssignment_3_2(), "rule__Lemma__CVarsAssignment_3_2");
			builder.put(grammarAccess.getLemmaAccess().getCVarsAssignment_3_3_1(), "rule__Lemma__CVarsAssignment_3_3_1");
			builder.put(grammarAccess.getLemmaAccess().getFnVarsAssignment_4_2(), "rule__Lemma__FnVarsAssignment_4_2");
			builder.put(grammarAccess.getLemmaAccess().getFnVarsAssignment_4_3_1(), "rule__Lemma__FnVarsAssignment_4_3_1");
			builder.put(grammarAccess.getLemmaAccess().getSimpleFmVarsAssignment_5_3(), "rule__Lemma__SimpleFmVarsAssignment_5_3");
			builder.put(grammarAccess.getLemmaAccess().getSimpleFmVarsAssignment_5_4_1(), "rule__Lemma__SimpleFmVarsAssignment_5_4_1");
			builder.put(grammarAccess.getLemmaAccess().getIfmVarsAssignment_6_4(), "rule__Lemma__IfmVarsAssignment_6_4");
			builder.put(grammarAccess.getLemmaAccess().getIfmVarsAssignment_6_5_1(), "rule__Lemma__IfmVarsAssignment_6_5_1");
			builder.put(grammarAccess.getLemmaAccess().getRfmVarsAssignment_7_3(), "rule__Lemma__RfmVarsAssignment_7_3");
			builder.put(grammarAccess.getLemmaAccess().getRfmVarsAssignment_7_4_1(), "rule__Lemma__RfmVarsAssignment_7_4_1");
			builder.put(grammarAccess.getLemmaAccess().getInitStateAssignment_8_3(), "rule__Lemma__InitStateAssignment_8_3");
			builder.put(grammarAccess.getLemmaAccess().getFinalStateAssignment_12(), "rule__Lemma__FinalStateAssignment_12");
			builder.put(grammarAccess.getLemmaAccess().getPremAssignment_14(), "rule__Lemma__PremAssignment_14");
			builder.put(grammarAccess.getLemmaPremiseFormulaAccess().getLeftAssignment_1_0(), "rule__LemmaPremiseFormula__LeftAssignment_1_0");
			builder.put(grammarAccess.getLemmaPremiseFormulaAccess().getRightAssignment_1_2(), "rule__LemmaPremiseFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getDisjunctionLemmaPremiseFormulaAccess().getRightAssignment_1_2(), "rule__DisjunctionLemmaPremiseFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getConjunctionLemmaPremiseFormulaAccess().getRightAssignment_1_2(), "rule__ConjunctionLemmaPremiseFormula__RightAssignment_1_2");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getAtomicAssignment_0(), "rule__PrimaryLemmaPremiseFormula__AtomicAssignment_0");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getAlwaysImpAssignment_1(), "rule__PrimaryLemmaPremiseFormula__AlwaysImpAssignment_1");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getInstAssignment_2(), "rule__PrimaryLemmaPremiseFormula__InstAssignment_2");
			builder.put(grammarAccess.getPrimaryLemmaPremiseFormulaAccess().getNestedFormulaAssignment_3_1(), "rule__PrimaryLemmaPremiseFormula__NestedFormulaAssignment_3_1");
			builder.put(grammarAccess.getAlwaysImplicationAccess().getStateAssignment_2(), "rule__AlwaysImplication__StateAssignment_2");
			builder.put(grammarAccess.getAlwaysImplicationAccess().getLeftAssignment_4(), "rule__AlwaysImplication__LeftAssignment_4");
			builder.put(grammarAccess.getAlwaysImplicationAccess().getRightAssignment_6(), "rule__AlwaysImplication__RightAssignment_6");
			builder.put(grammarAccess.getAlwaysImplicationParameterValueAccess().getStateAssignment_0_1(), "rule__AlwaysImplicationParameterValue__StateAssignment_0_1");
			builder.put(grammarAccess.getAlwaysImplicationParameterValueAccess().getFormulaAssignment_1(), "rule__AlwaysImplicationParameterValue__FormulaAssignment_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getPatternAssignment_0(), "rule__PastExtraInvariantPatternInstance__PatternAssignment_0");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getCParamsAssignment_2_2(), "rule__PastExtraInvariantPatternInstance__CParamsAssignment_2_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getCParamsAssignment_2_3_1(), "rule__PastExtraInvariantPatternInstance__CParamsAssignment_2_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getFnParamsAssignment_3_2(), "rule__PastExtraInvariantPatternInstance__FnParamsAssignment_3_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getFnParamsAssignment_3_3_1(), "rule__PastExtraInvariantPatternInstance__FnParamsAssignment_3_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getFmParamsAssignment_4_2(), "rule__PastExtraInvariantPatternInstance__FmParamsAssignment_4_2");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getFmParamsAssignment_4_3_1(), "rule__PastExtraInvariantPatternInstance__FmParamsAssignment_4_3_1");
			builder.put(grammarAccess.getPastExtraInvariantPatternInstanceAccess().getStateAssignment_6(), "rule__PastExtraInvariantPatternInstance__StateAssignment_6");
			builder.put(grammarAccess.getFutureLemmasAccess().getUnorderedGroup_1_2(), "rule__FutureLemmas__UnorderedGroup_1_2");
			builder.put(grammarAccess.getPastLemmasAccess().getUnorderedGroup_1_2(), "rule__PastLemmas__UnorderedGroup_1_2");
			builder.put(grammarAccess.getDerivedLemmasAccess().getUnorderedGroup_1_2(), "rule__DerivedLemmas__UnorderedGroup_1_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private RPLGrammarAccess grammarAccess;

	@Override
	protected InternalRPLParser createParser() {
		InternalRPLParser result = new InternalRPLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public RPLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RPLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
