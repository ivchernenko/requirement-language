/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Lemma</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getCVars <em>CVars</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getFnVars <em>Fn Vars</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getIfmVars <em>Ifm Vars</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getRfmVars <em>Rfm Vars</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getInitState <em>Init State</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getFinalState <em>Final State</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.Lemma#getPrem <em>Prem</em>}</li>
 * </ul>
 *
 * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma()
 * @model
 * @generated
 */
public interface Lemma extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.Lemma#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>CVars</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.ConstantParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>CVars</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_CVars()
   * @model containment="true"
   * @generated
   */
  EList<ConstantParameter> getCVars();

  /**
   * Returns the value of the '<em><b>Fn Vars</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.FunctionalParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Fn Vars</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_FnVars()
   * @model containment="true"
   * @generated
   */
  EList<FunctionalParameter> getFnVars();

  /**
   * Returns the value of the '<em><b>Ifm Vars</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.FormulaParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Ifm Vars</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_IfmVars()
   * @model containment="true"
   * @generated
   */
  EList<FormulaParameter> getIfmVars();

  /**
   * Returns the value of the '<em><b>Rfm Vars</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.FormulaParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Rfm Vars</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_RfmVars()
   * @model containment="true"
   * @generated
   */
  EList<FormulaParameter> getRfmVars();

  /**
   * Returns the value of the '<em><b>Init State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Init State</em>' containment reference.
   * @see #setInitState(UpdateStateVariable)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_InitState()
   * @model containment="true"
   * @generated
   */
  UpdateStateVariable getInitState();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.Lemma#getInitState <em>Init State</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Init State</em>' containment reference.
   * @see #getInitState()
   * @generated
   */
  void setInitState(UpdateStateVariable value);

  /**
   * Returns the value of the '<em><b>Final State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Final State</em>' containment reference.
   * @see #setFinalState(UpdateStateVariable)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_FinalState()
   * @model containment="true"
   * @generated
   */
  UpdateStateVariable getFinalState();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.Lemma#getFinalState <em>Final State</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Final State</em>' containment reference.
   * @see #getFinalState()
   * @generated
   */
  void setFinalState(UpdateStateVariable value);

  /**
   * Returns the value of the '<em><b>Prem</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Prem</em>' containment reference.
   * @see #setPrem(LemmaPremiseFormula)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getLemma_Prem()
   * @model containment="true"
   * @generated
   */
  LemmaPremiseFormula getPrem();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.Lemma#getPrem <em>Prem</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Prem</em>' containment reference.
   * @see #getPrem()
   * @generated
   */
  void setPrem(LemmaPremiseFormula value);

} // Lemma
