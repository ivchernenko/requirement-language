/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL.impl;

import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import su.nsk.iae.rpl.invpatterngenerator.ExtraInvariantPatternGenerator;
import su.nsk.iae.rpl.invpatterngenerator.FormulaParameterValue;
import su.nsk.iae.rpl.rPL.ConstantParameter;
import su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern;
import su.nsk.iae.rpl.rPL.DerivedLemmas;
import su.nsk.iae.rpl.rPL.DerivedRequirementPattern;
import su.nsk.iae.rpl.rPL.Formula;
import su.nsk.iae.rpl.rPL.FormulaParameter;
import su.nsk.iae.rpl.rPL.RPLPackage;
import su.nsk.iae.rpl.rPL.Term;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Derived Requirement Pattern</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getCParams <em>CParams</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getFmParams <em>Fm Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getDefinition <em>Definition</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getFile <em>File</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getExtraInvPattern <em>Extra Inv Pattern</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl#getLemmas <em>Lemmas</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DerivedRequirementPatternImpl extends ElementImpl implements DerivedRequirementPattern
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCParams() <em>CParams</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCParams()
   * @generated
   * @ordered
   */
  protected EList<ConstantParameter> cParams;

  /**
   * The cached value of the '{@link #getFmParams() <em>Fm Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFmParams()
   * @generated
   * @ordered
   */
  protected EList<FormulaParameter> fmParams;

  /**
   * The cached value of the '{@link #getDefinition() <em>Definition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDefinition()
   * @generated
   * @ordered
   */
  protected Formula definition;

  /**
   * The default value of the '{@link #getFile() <em>File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile()
   * @generated
   * @ordered
   */
  protected static final String FILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFile() <em>File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile()
   * @generated
   * @ordered
   */
  protected String file = FILE_EDEFAULT;

  /**
   * The cached value of the '{@link #getExtraInvPattern() <em>Extra Inv Pattern</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtraInvPattern()
   * @generated
   * @ordered
   */
  protected DerivedExtraInvariantPattern extraInvPattern;

  /**
   * The cached value of the '{@link #getLemmas() <em>Lemmas</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLemmas()
   * @generated
   * @ordered
   */
  protected DerivedLemmas lemmas;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DerivedRequirementPatternImpl()
  {
    super();
  }
  
  @Override
  public su.nsk.iae.rpl.invpatterngenerator.Formula generateExtraInvariantPatternInstance(List<Term> cParams,
  		List<FormulaParameterValue> einvFmParams, ExtraInvariantPatternGenerator generator) {
  	// TODO Auto-generated method stub
  	return generator.generatePatternInstance(
  			getExtraInvPattern(),
  			cParams,
  			einvFmParams);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RPLPackage.Literals.DERIVED_REQUIREMENT_PATTERN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ConstantParameter> getCParams()
  {
    if (cParams == null)
    {
      cParams = new EObjectContainmentEList<ConstantParameter>(ConstantParameter.class, this, RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS);
    }
    return cParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FormulaParameter> getFmParams()
  {
    if (fmParams == null)
    {
      fmParams = new EObjectContainmentEList<FormulaParameter>(FormulaParameter.class, this, RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS);
    }
    return fmParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Formula getDefinition()
  {
    return definition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDefinition(Formula newDefinition, NotificationChain msgs)
  {
    Formula oldDefinition = definition;
    definition = newDefinition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION, oldDefinition, newDefinition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDefinition(Formula newDefinition)
  {
    if (newDefinition != definition)
    {
      NotificationChain msgs = null;
      if (definition != null)
        msgs = ((InternalEObject)definition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION, null, msgs);
      if (newDefinition != null)
        msgs = ((InternalEObject)newDefinition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION, null, msgs);
      msgs = basicSetDefinition(newDefinition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION, newDefinition, newDefinition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFile()
  {
    return file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFile(String newFile)
  {
    String oldFile = file;
    file = newFile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__FILE, oldFile, file));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DerivedExtraInvariantPattern getExtraInvPattern()
  {
    if (extraInvPattern != null && extraInvPattern.eIsProxy())
    {
      InternalEObject oldExtraInvPattern = (InternalEObject)extraInvPattern;
      extraInvPattern = (DerivedExtraInvariantPattern)eResolveProxy(oldExtraInvPattern);
      if (extraInvPattern != oldExtraInvPattern)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN, oldExtraInvPattern, extraInvPattern));
      }
    }
    return extraInvPattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DerivedExtraInvariantPattern basicGetExtraInvPattern()
  {
    return extraInvPattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExtraInvPattern(DerivedExtraInvariantPattern newExtraInvPattern)
  {
    DerivedExtraInvariantPattern oldExtraInvPattern = extraInvPattern;
    extraInvPattern = newExtraInvPattern;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN, oldExtraInvPattern, extraInvPattern));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DerivedLemmas getLemmas()
  {
    return lemmas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLemmas(DerivedLemmas newLemmas, NotificationChain msgs)
  {
    DerivedLemmas oldLemmas = lemmas;
    lemmas = newLemmas;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS, oldLemmas, newLemmas);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLemmas(DerivedLemmas newLemmas)
  {
    if (newLemmas != lemmas)
    {
      NotificationChain msgs = null;
      if (lemmas != null)
        msgs = ((InternalEObject)lemmas).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS, null, msgs);
      if (newLemmas != null)
        msgs = ((InternalEObject)newLemmas).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS, null, msgs);
      msgs = basicSetLemmas(newLemmas, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS, newLemmas, newLemmas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS:
        return ((InternalEList<?>)getCParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS:
        return ((InternalEList<?>)getFmParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION:
        return basicSetDefinition(null, msgs);
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS:
        return basicSetLemmas(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__NAME:
        return getName();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS:
        return getCParams();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS:
        return getFmParams();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION:
        return getDefinition();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FILE:
        return getFile();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN:
        if (resolve) return getExtraInvPattern();
        return basicGetExtraInvPattern();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS:
        return getLemmas();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__NAME:
        setName((String)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS:
        getCParams().clear();
        getCParams().addAll((Collection<? extends ConstantParameter>)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS:
        getFmParams().clear();
        getFmParams().addAll((Collection<? extends FormulaParameter>)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION:
        setDefinition((Formula)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FILE:
        setFile((String)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN:
        setExtraInvPattern((DerivedExtraInvariantPattern)newValue);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS:
        setLemmas((DerivedLemmas)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS:
        getCParams().clear();
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS:
        getFmParams().clear();
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION:
        setDefinition((Formula)null);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FILE:
        setFile(FILE_EDEFAULT);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN:
        setExtraInvPattern((DerivedExtraInvariantPattern)null);
        return;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS:
        setLemmas((DerivedLemmas)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__CPARAMS:
        return cParams != null && !cParams.isEmpty();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FM_PARAMS:
        return fmParams != null && !fmParams.isEmpty();
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__DEFINITION:
        return definition != null;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__FILE:
        return FILE_EDEFAULT == null ? file != null : !FILE_EDEFAULT.equals(file);
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN:
        return extraInvPattern != null;
      case RPLPackage.DERIVED_REQUIREMENT_PATTERN__LEMMAS:
        return lemmas != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", file: ");
    result.append(file);
    result.append(')');
    return result.toString();
  }

} //DerivedRequirementPatternImpl
