/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import su.nsk.iae.rpl.rPL.ConstantParameter;
import su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern;
import su.nsk.iae.rpl.rPL.DerivedLemmas;
import su.nsk.iae.rpl.rPL.FunctionalParameter;
import su.nsk.iae.rpl.rPL.RPLPackage;
import su.nsk.iae.rpl.rPL.RegularFormulaParameter;
import su.nsk.iae.rpl.rPL.SimpleFormulaParameter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Derived Extra Invariant Pattern</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getName <em>Name</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getCParams <em>CParams</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getFnParams <em>Fn Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getSimpleFmParams <em>Simple Fm Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getSimpleFmParam <em>Simple Fm Param</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getFmParams <em>Fm Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getFile <em>File</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl#getLemmas <em>Lemmas</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DerivedExtraInvariantPatternImpl extends ElementImpl implements DerivedExtraInvariantPattern
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getCParams() <em>CParams</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCParams()
   * @generated
   * @ordered
   */
  protected EList<ConstantParameter> cParams;

  /**
   * The cached value of the '{@link #getFnParams() <em>Fn Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFnParams()
   * @generated
   * @ordered
   */
  protected EList<FunctionalParameter> fnParams;

  /**
   * The cached value of the '{@link #getSimpleFmParams() <em>Simple Fm Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleFmParams()
   * @generated
   * @ordered
   */
  protected EList<SimpleFormulaParameter> simpleFmParams;

  /**
   * The cached value of the '{@link #getSimpleFmParam() <em>Simple Fm Param</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSimpleFmParam()
   * @generated
   * @ordered
   */
  protected EList<SimpleFormulaParameter> simpleFmParam;

  /**
   * The cached value of the '{@link #getFmParams() <em>Fm Params</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFmParams()
   * @generated
   * @ordered
   */
  protected EList<RegularFormulaParameter> fmParams;

  /**
   * The default value of the '{@link #getFile() <em>File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile()
   * @generated
   * @ordered
   */
  protected static final String FILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFile() <em>File</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile()
   * @generated
   * @ordered
   */
  protected String file = FILE_EDEFAULT;

  /**
   * The cached value of the '{@link #getLemmas() <em>Lemmas</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLemmas()
   * @generated
   * @ordered
   */
  protected DerivedLemmas lemmas;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DerivedExtraInvariantPatternImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RPLPackage.Literals.DERIVED_EXTRA_INVARIANT_PATTERN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ConstantParameter> getCParams()
  {
    if (cParams == null)
    {
      cParams = new EObjectContainmentEList<ConstantParameter>(ConstantParameter.class, this, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS);
    }
    return cParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FunctionalParameter> getFnParams()
  {
    if (fnParams == null)
    {
      fnParams = new EObjectContainmentEList<FunctionalParameter>(FunctionalParameter.class, this, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS);
    }
    return fnParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SimpleFormulaParameter> getSimpleFmParams()
  {
    if (simpleFmParams == null)
    {
      simpleFmParams = new EObjectContainmentEList<SimpleFormulaParameter>(SimpleFormulaParameter.class, this, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS);
    }
    return simpleFmParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SimpleFormulaParameter> getSimpleFmParam()
  {
    if (simpleFmParam == null)
    {
      simpleFmParam = new EObjectContainmentEList<SimpleFormulaParameter>(SimpleFormulaParameter.class, this, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM);
    }
    return simpleFmParam;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RegularFormulaParameter> getFmParams()
  {
    if (fmParams == null)
    {
      fmParams = new EObjectContainmentEList<RegularFormulaParameter>(RegularFormulaParameter.class, this, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS);
    }
    return fmParams;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFile()
  {
    return file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFile(String newFile)
  {
    String oldFile = file;
    file = newFile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FILE, oldFile, file));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DerivedLemmas getLemmas()
  {
    return lemmas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLemmas(DerivedLemmas newLemmas, NotificationChain msgs)
  {
    DerivedLemmas oldLemmas = lemmas;
    lemmas = newLemmas;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS, oldLemmas, newLemmas);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLemmas(DerivedLemmas newLemmas)
  {
    if (newLemmas != lemmas)
    {
      NotificationChain msgs = null;
      if (lemmas != null)
        msgs = ((InternalEObject)lemmas).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS, null, msgs);
      if (newLemmas != null)
        msgs = ((InternalEObject)newLemmas).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS, null, msgs);
      msgs = basicSetLemmas(newLemmas, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS, newLemmas, newLemmas));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS:
        return ((InternalEList<?>)getCParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS:
        return ((InternalEList<?>)getFnParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS:
        return ((InternalEList<?>)getSimpleFmParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM:
        return ((InternalEList<?>)getSimpleFmParam()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS:
        return ((InternalEList<?>)getFmParams()).basicRemove(otherEnd, msgs);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS:
        return basicSetLemmas(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__NAME:
        return getName();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS:
        return getCParams();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS:
        return getFnParams();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS:
        return getSimpleFmParams();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM:
        return getSimpleFmParam();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS:
        return getFmParams();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FILE:
        return getFile();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS:
        return getLemmas();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__NAME:
        setName((String)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS:
        getCParams().clear();
        getCParams().addAll((Collection<? extends ConstantParameter>)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS:
        getFnParams().clear();
        getFnParams().addAll((Collection<? extends FunctionalParameter>)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS:
        getSimpleFmParams().clear();
        getSimpleFmParams().addAll((Collection<? extends SimpleFormulaParameter>)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM:
        getSimpleFmParam().clear();
        getSimpleFmParam().addAll((Collection<? extends SimpleFormulaParameter>)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS:
        getFmParams().clear();
        getFmParams().addAll((Collection<? extends RegularFormulaParameter>)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FILE:
        setFile((String)newValue);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS:
        setLemmas((DerivedLemmas)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS:
        getCParams().clear();
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS:
        getFnParams().clear();
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS:
        getSimpleFmParams().clear();
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM:
        getSimpleFmParam().clear();
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS:
        getFmParams().clear();
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FILE:
        setFile(FILE_EDEFAULT);
        return;
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS:
        setLemmas((DerivedLemmas)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS:
        return cParams != null && !cParams.isEmpty();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS:
        return fnParams != null && !fnParams.isEmpty();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS:
        return simpleFmParams != null && !simpleFmParams.isEmpty();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAM:
        return simpleFmParam != null && !simpleFmParam.isEmpty();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS:
        return fmParams != null && !fmParams.isEmpty();
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__FILE:
        return FILE_EDEFAULT == null ? file != null : !FILE_EDEFAULT.equals(file);
      case RPLPackage.DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS:
        return lemmas != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", file: ");
    result.append(file);
    result.append(')');
    return result.toString();
  }

} //DerivedExtraInvariantPatternImpl
