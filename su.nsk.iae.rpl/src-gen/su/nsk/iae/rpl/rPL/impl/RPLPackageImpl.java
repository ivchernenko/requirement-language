/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import su.nsk.iae.rpl.rPL.AddOperator;
import su.nsk.iae.rpl.rPL.AddTerm;
import su.nsk.iae.rpl.rPL.AlwaysImplication;
import su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue;
import su.nsk.iae.rpl.rPL.AtomicFormula;
import su.nsk.iae.rpl.rPL.BasicRequirementPattern;
import su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance;
import su.nsk.iae.rpl.rPL.CompPredicate;
import su.nsk.iae.rpl.rPL.CompareTerm;
import su.nsk.iae.rpl.rPL.Conjunction;
import su.nsk.iae.rpl.rPL.ConjunctionFormula;
import su.nsk.iae.rpl.rPL.ConjunctionInnerFormula;
import su.nsk.iae.rpl.rPL.ConjunctionLemmaPremiseFormula;
import su.nsk.iae.rpl.rPL.ConjunctionPatternFreeFormula;
import su.nsk.iae.rpl.rPL.ConjunctionTerm;
import su.nsk.iae.rpl.rPL.ConnunctionInnerFormula;
import su.nsk.iae.rpl.rPL.Constant;
import su.nsk.iae.rpl.rPL.ConstantParameter;
import su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern;
import su.nsk.iae.rpl.rPL.DerivedLemmas;
import su.nsk.iae.rpl.rPL.DerivedRequirementPattern;
import su.nsk.iae.rpl.rPL.DisjunctionLemmaPremiseFormula;
import su.nsk.iae.rpl.rPL.Element;
import su.nsk.iae.rpl.rPL.EqPredicate;
import su.nsk.iae.rpl.rPL.EqTerm;
import su.nsk.iae.rpl.rPL.ExtraInvariant;
import su.nsk.iae.rpl.rPL.Formula;
import su.nsk.iae.rpl.rPL.FormulaParameter;
import su.nsk.iae.rpl.rPL.FormulaParameterValue;
import su.nsk.iae.rpl.rPL.FunApplication;
import su.nsk.iae.rpl.rPL.FunctionalParameter;
import su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern;
import su.nsk.iae.rpl.rPL.FutureLemmas;
import su.nsk.iae.rpl.rPL.FutureRequirementPattern;
import su.nsk.iae.rpl.rPL.Import;
import su.nsk.iae.rpl.rPL.InnerFormula;
import su.nsk.iae.rpl.rPL.IntegerLiteral;
import su.nsk.iae.rpl.rPL.Lemma;
import su.nsk.iae.rpl.rPL.LemmaPremiseFormula;
import su.nsk.iae.rpl.rPL.Model;
import su.nsk.iae.rpl.rPL.MulOperator;
import su.nsk.iae.rpl.rPL.MulTerm;
import su.nsk.iae.rpl.rPL.NegationFormula;
import su.nsk.iae.rpl.rPL.NegationTerm;
import su.nsk.iae.rpl.rPL.NumericLiteral;
import su.nsk.iae.rpl.rPL.OuterRequirementPattern;
import su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance;
import su.nsk.iae.rpl.rPL.PastExtraInvariantPattern;
import su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance;
import su.nsk.iae.rpl.rPL.PastLemmas;
import su.nsk.iae.rpl.rPL.PastRequirementPattern;
import su.nsk.iae.rpl.rPL.PatternFreeFormula;
import su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue;
import su.nsk.iae.rpl.rPL.PowerTerm;
import su.nsk.iae.rpl.rPL.PrimaryFormula;
import su.nsk.iae.rpl.rPL.PrimaryInnerFormula;
import su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula;
import su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula;
import su.nsk.iae.rpl.rPL.PrimaryTerm;
import su.nsk.iae.rpl.rPL.ProgramVariable;
import su.nsk.iae.rpl.rPL.RPLFactory;
import su.nsk.iae.rpl.rPL.RPLPackage;
import su.nsk.iae.rpl.rPL.RealLiteral;
import su.nsk.iae.rpl.rPL.Requirement;
import su.nsk.iae.rpl.rPL.Term;
import su.nsk.iae.rpl.rPL.UnMinus;
import su.nsk.iae.rpl.rPL.UnaryTerm;
import su.nsk.iae.rpl.rPL.UpdateStateVariable;
import su.nsk.iae.rpl.rPL.VarDeclaration;
import su.nsk.iae.rpl.rPL.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class RPLPackageImpl extends EPackageImpl implements RPLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basicRequirementPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedRequirementPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass varDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass programVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass updateStateVariableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constantParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass formulaParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass functionalParameterEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass formulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outerRequirementPatternInstanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass outerRequirementPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass formulaParameterValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass innerFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionInnerFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryInnerFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass negationFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass atomicFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass basicRequirementPatternInstanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass futureRequirementPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pastRequirementPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass futureExtraInvariantPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pastExtraInvariantPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedExtraInvariantPatternEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass termEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass negationTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eqTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compareTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass addTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mulTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass powerTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unaryTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryTermEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass funApplicationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numericLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass integerLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass realLiteralEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternFreeFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionPatternFreeFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryPatternFreeFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass requirementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass extraInvariantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass patternFreeFormulaParameterValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass futureLemmasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pastLemmasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass derivedLemmasEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lemmaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass lemmaPremiseFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass disjunctionLemmaPremiseFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionLemmaPremiseFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryLemmaPremiseFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alwaysImplicationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass alwaysImplicationParameterValueEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pastExtraInvariantPatternInstanceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conjunctionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass connunctionInnerFormulaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum eqPredicateEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum compPredicateEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum addOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum mulOperatorEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum unMinusEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see su.nsk.iae.rpl.rPL.RPLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private RPLPackageImpl()
  {
    super(eNS_URI, RPLFactory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link RPLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static RPLPackage init()
  {
    if (isInited) return (RPLPackage)EPackage.Registry.INSTANCE.getEPackage(RPLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredRPLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    RPLPackageImpl theRPLPackage = registeredRPLPackage instanceof RPLPackageImpl ? (RPLPackageImpl)registeredRPLPackage : new RPLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theRPLPackage.createPackageContents();

    // Initialize created meta-data
    theRPLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theRPLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(RPLPackage.eNS_URI, theRPLPackage);
    return theRPLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Imports()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Elements()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getImport_ImportURI()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElement()
  {
    return elementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBasicRequirementPattern()
  {
    return basicRequirementPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedRequirementPattern()
  {
    return derivedRequirementPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedRequirementPattern_Name()
  {
    return (EAttribute)derivedRequirementPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedRequirementPattern_CParams()
  {
    return (EReference)derivedRequirementPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedRequirementPattern_FmParams()
  {
    return (EReference)derivedRequirementPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedRequirementPattern_Definition()
  {
    return (EReference)derivedRequirementPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedRequirementPattern_File()
  {
    return (EAttribute)derivedRequirementPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedRequirementPattern_ExtraInvPattern()
  {
    return (EReference)derivedRequirementPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedRequirementPattern_Lemmas()
  {
    return (EReference)derivedRequirementPatternEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariable()
  {
    return variableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariable_Name()
  {
    return (EAttribute)variableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVarDeclaration()
  {
    return varDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVarDeclaration_Vars()
  {
    return (EReference)varDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProgramVariable()
  {
    return programVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUpdateStateVariable()
  {
    return updateStateVariableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUpdateStateVariable_Name()
  {
    return (EAttribute)updateStateVariableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstantParameter()
  {
    return constantParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFormulaParameter()
  {
    return formulaParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFormulaParameter_Name()
  {
    return (EAttribute)formulaParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFunctionalParameter()
  {
    return functionalParameterEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFunctionalParameter_Name()
  {
    return (EAttribute)functionalParameterEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFormula()
  {
    return formulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFormula_Left()
  {
    return (EReference)formulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFormula_Right()
  {
    return (EReference)formulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunctionFormula()
  {
    return conjunctionFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryFormula()
  {
    return primaryFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryFormula_PatternInst()
  {
    return (EReference)primaryFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryFormula_NestedFormula()
  {
    return (EReference)primaryFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOuterRequirementPatternInstance()
  {
    return outerRequirementPatternInstanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOuterRequirementPatternInstance_Pattern()
  {
    return (EReference)outerRequirementPatternInstanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOuterRequirementPatternInstance_CParams()
  {
    return (EReference)outerRequirementPatternInstanceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOuterRequirementPatternInstance_FmParams()
  {
    return (EReference)outerRequirementPatternInstanceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOuterRequirementPatternInstance_FinState()
  {
    return (EReference)outerRequirementPatternInstanceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOuterRequirementPatternInstance_CurState()
  {
    return (EReference)outerRequirementPatternInstanceEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOuterRequirementPattern()
  {
    return outerRequirementPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFormulaParameterValue()
  {
    return formulaParameterValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFormulaParameterValue_States()
  {
    return (EReference)formulaParameterValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFormulaParameterValue_Formula()
  {
    return (EReference)formulaParameterValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInnerFormula()
  {
    return innerFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInnerFormula_Left()
  {
    return (EReference)innerFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getInnerFormula_Right()
  {
    return (EReference)innerFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunctionInnerFormula()
  {
    return conjunctionInnerFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryInnerFormula()
  {
    return primaryInnerFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryInnerFormula_Atomic()
  {
    return (EReference)primaryInnerFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryInnerFormula_PatternInst()
  {
    return (EReference)primaryInnerFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryInnerFormula_NestedFormula()
  {
    return (EReference)primaryInnerFormulaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNegationFormula()
  {
    return negationFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNegationFormula_Neg()
  {
    return (EAttribute)negationFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNegationFormula_Right()
  {
    return (EReference)negationFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAtomicFormula()
  {
    return atomicFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAtomicFormula_BoolLiteral()
  {
    return (EAttribute)atomicFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAtomicFormula_BoolTerm()
  {
    return (EReference)atomicFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAtomicFormula_FmParam()
  {
    return (EReference)atomicFormulaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAtomicFormula_States()
  {
    return (EReference)atomicFormulaEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBasicRequirementPatternInstance()
  {
    return basicRequirementPatternInstanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBasicRequirementPatternInstance_Pattern()
  {
    return (EReference)basicRequirementPatternInstanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBasicRequirementPatternInstance_CParams()
  {
    return (EReference)basicRequirementPatternInstanceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBasicRequirementPatternInstance_FmParams()
  {
    return (EReference)basicRequirementPatternInstanceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBasicRequirementPatternInstance_FinState()
  {
    return (EReference)basicRequirementPatternInstanceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBasicRequirementPatternInstance_CurState()
  {
    return (EReference)basicRequirementPatternInstanceEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFutureRequirementPattern()
  {
    return futureRequirementPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFutureRequirementPattern_Name()
  {
    return (EAttribute)futureRequirementPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureRequirementPattern_CParams()
  {
    return (EReference)futureRequirementPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureRequirementPattern_FmParams()
  {
    return (EReference)futureRequirementPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFutureRequirementPattern_File()
  {
    return (EAttribute)futureRequirementPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureRequirementPattern_ExtraInvPattern()
  {
    return (EReference)futureRequirementPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureRequirementPattern_Lessas()
  {
    return (EReference)futureRequirementPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPastRequirementPattern()
  {
    return pastRequirementPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPastRequirementPattern_Name()
  {
    return (EAttribute)pastRequirementPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastRequirementPattern_CParams()
  {
    return (EReference)pastRequirementPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastRequirementPattern_FmParams()
  {
    return (EReference)pastRequirementPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPastRequirementPattern_File()
  {
    return (EAttribute)pastRequirementPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastRequirementPattern_ExtraInvPattern()
  {
    return (EReference)pastRequirementPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastRequirementPattern_Lemmas()
  {
    return (EReference)pastRequirementPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFutureExtraInvariantPattern()
  {
    return futureExtraInvariantPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFutureExtraInvariantPattern_Name()
  {
    return (EAttribute)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureExtraInvariantPattern_CParams()
  {
    return (EReference)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureExtraInvariantPattern_FnParams()
  {
    return (EReference)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureExtraInvariantPattern_FmParams()
  {
    return (EReference)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFutureExtraInvariantPattern_File()
  {
    return (EAttribute)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureExtraInvariantPattern_Lemmas()
  {
    return (EReference)futureExtraInvariantPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPastExtraInvariantPattern()
  {
    return pastExtraInvariantPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPastExtraInvariantPattern_Name()
  {
    return (EAttribute)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPattern_CParams()
  {
    return (EReference)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPattern_FnParams()
  {
    return (EReference)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPattern_FmParams()
  {
    return (EReference)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPastExtraInvariantPattern_File()
  {
    return (EAttribute)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPattern_Lemmas()
  {
    return (EReference)pastExtraInvariantPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedExtraInvariantPattern()
  {
    return derivedExtraInvariantPatternEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedExtraInvariantPattern_Name()
  {
    return (EAttribute)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedExtraInvariantPattern_CParams()
  {
    return (EReference)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedExtraInvariantPattern_FnParams()
  {
    return (EReference)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedExtraInvariantPattern_FmParams()
  {
    return (EReference)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDerivedExtraInvariantPattern_File()
  {
    return (EAttribute)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedExtraInvariantPattern_Lemmas()
  {
    return (EReference)derivedExtraInvariantPatternEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTerm()
  {
    return termEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTerm_Left()
  {
    return (EReference)termEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTerm_Right()
  {
    return (EReference)termEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunctionTerm()
  {
    return conjunctionTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNegationTerm()
  {
    return negationTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEqTerm()
  {
    return eqTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEqTerm_EqPred()
  {
    return (EAttribute)eqTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCompareTerm()
  {
    return compareTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCompareTerm_CompPred()
  {
    return (EAttribute)compareTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAddTerm()
  {
    return addTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAddTerm_AddOp()
  {
    return (EAttribute)addTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMulTerm()
  {
    return mulTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMulTerm_MulOp()
  {
    return (EAttribute)mulTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPowerTerm()
  {
    return powerTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnaryTerm()
  {
    return unaryTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUnaryTerm_UnOp()
  {
    return (EAttribute)unaryTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryTerm()
  {
    return primaryTermEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryTerm_Variable()
  {
    return (EReference)primaryTermEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryTerm_State()
  {
    return (EReference)primaryTermEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryTerm_NestedTerm()
  {
    return (EReference)primaryTermEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFunApplication()
  {
    return funApplicationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFunApplication_FnParam()
  {
    return (EReference)funApplicationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstant()
  {
    return constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getConstant_Num()
  {
    return (EReference)constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getConstant_Bool()
  {
    return (EAttribute)constantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumericLiteral()
  {
    return numericLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumericLiteral_Sig()
  {
    return (EAttribute)numericLiteralEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNumericLiteral_Value()
  {
    return (EAttribute)numericLiteralEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getIntegerLiteral()
  {
    return integerLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRealLiteral()
  {
    return realLiteralEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPatternFreeFormula()
  {
    return patternFreeFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPatternFreeFormula_Left()
  {
    return (EReference)patternFreeFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPatternFreeFormula_Right()
  {
    return (EReference)patternFreeFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunctionPatternFreeFormula()
  {
    return conjunctionPatternFreeFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryPatternFreeFormula()
  {
    return primaryPatternFreeFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryPatternFreeFormula_Atomic()
  {
    return (EReference)primaryPatternFreeFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryPatternFreeFormula_NestedFormula()
  {
    return (EReference)primaryPatternFreeFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRequirement()
  {
    return requirementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRequirement_Name()
  {
    return (EAttribute)requirementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRequirement_Pattern()
  {
    return (EReference)requirementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRequirement_CParams()
  {
    return (EReference)requirementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRequirement_FmParams()
  {
    return (EReference)requirementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRequirement_ExtraIn()
  {
    return (EAttribute)requirementEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExtraInvariant()
  {
    return extraInvariantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExtraInvariant_Name()
  {
    return (EAttribute)extraInvariantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExtraInvariant_Pattern()
  {
    return (EReference)extraInvariantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getExtraInvariant_ReqName()
  {
    return (EAttribute)extraInvariantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getExtraInvariant_Req()
  {
    return (EReference)extraInvariantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPatternFreeFormulaParameterValue()
  {
    return patternFreeFormulaParameterValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPatternFreeFormulaParameterValue_States()
  {
    return (EReference)patternFreeFormulaParameterValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPatternFreeFormulaParameterValue_Formula()
  {
    return (EReference)patternFreeFormulaParameterValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFutureLemmas()
  {
    return futureLemmasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureLemmas_L1()
  {
    return (EReference)futureLemmasEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureLemmas_L2()
  {
    return (EReference)futureLemmasEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFutureLemmas_L3()
  {
    return (EReference)futureLemmasEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPastLemmas()
  {
    return pastLemmasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastLemmas_L4()
  {
    return (EReference)pastLemmasEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastLemmas_L5()
  {
    return (EReference)pastLemmasEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastLemmas_L6()
  {
    return (EReference)pastLemmasEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastLemmas_L7()
  {
    return (EReference)pastLemmasEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDerivedLemmas()
  {
    return derivedLemmasEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedLemmas_L8()
  {
    return (EReference)derivedLemmasEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDerivedLemmas_L9()
  {
    return (EReference)derivedLemmasEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLemma()
  {
    return lemmaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLemma_Name()
  {
    return (EAttribute)lemmaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_CVars()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_FnVars()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_IfmVars()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_RfmVars()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_InitState()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_FinalState()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(6);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemma_Prem()
  {
    return (EReference)lemmaEClass.getEStructuralFeatures().get(7);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLemmaPremiseFormula()
  {
    return lemmaPremiseFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemmaPremiseFormula_Left()
  {
    return (EReference)lemmaPremiseFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLemmaPremiseFormula_Right()
  {
    return (EReference)lemmaPremiseFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDisjunctionLemmaPremiseFormula()
  {
    return disjunctionLemmaPremiseFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunctionLemmaPremiseFormula()
  {
    return conjunctionLemmaPremiseFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryLemmaPremiseFormula()
  {
    return primaryLemmaPremiseFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryLemmaPremiseFormula_Atomic()
  {
    return (EReference)primaryLemmaPremiseFormulaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryLemmaPremiseFormula_AlwaysImp()
  {
    return (EReference)primaryLemmaPremiseFormulaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryLemmaPremiseFormula_Inst()
  {
    return (EReference)primaryLemmaPremiseFormulaEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPrimaryLemmaPremiseFormula_NestedFormula()
  {
    return (EReference)primaryLemmaPremiseFormulaEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlwaysImplication()
  {
    return alwaysImplicationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlwaysImplication_State()
  {
    return (EReference)alwaysImplicationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlwaysImplication_Left()
  {
    return (EReference)alwaysImplicationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlwaysImplication_Right()
  {
    return (EReference)alwaysImplicationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlwaysImplicationParameterValue()
  {
    return alwaysImplicationParameterValueEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlwaysImplicationParameterValue_State()
  {
    return (EReference)alwaysImplicationParameterValueEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlwaysImplicationParameterValue_Formula()
  {
    return (EReference)alwaysImplicationParameterValueEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPastExtraInvariantPatternInstance()
  {
    return pastExtraInvariantPatternInstanceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPatternInstance_Pattern()
  {
    return (EReference)pastExtraInvariantPatternInstanceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPatternInstance_CParams()
  {
    return (EReference)pastExtraInvariantPatternInstanceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPatternInstance_FnParams()
  {
    return (EReference)pastExtraInvariantPatternInstanceEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPatternInstance_FmParams()
  {
    return (EReference)pastExtraInvariantPatternInstanceEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPastExtraInvariantPatternInstance_State()
  {
    return (EReference)pastExtraInvariantPatternInstanceEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConjunction()
  {
    return conjunctionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConnunctionInnerFormula()
  {
    return connunctionInnerFormulaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getEqPredicate()
  {
    return eqPredicateEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getCompPredicate()
  {
    return compPredicateEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getAddOperator()
  {
    return addOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMulOperator()
  {
    return mulOperatorEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getUnMinus()
  {
    return unMinusEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RPLFactory getRPLFactory()
  {
    return (RPLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__IMPORTS);
    createEReference(modelEClass, MODEL__ELEMENTS);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORT_URI);

    elementEClass = createEClass(ELEMENT);

    basicRequirementPatternEClass = createEClass(BASIC_REQUIREMENT_PATTERN);

    derivedRequirementPatternEClass = createEClass(DERIVED_REQUIREMENT_PATTERN);
    createEAttribute(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__NAME);
    createEReference(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__CPARAMS);
    createEReference(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__FM_PARAMS);
    createEReference(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__DEFINITION);
    createEAttribute(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__FILE);
    createEReference(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN);
    createEReference(derivedRequirementPatternEClass, DERIVED_REQUIREMENT_PATTERN__LEMMAS);

    variableEClass = createEClass(VARIABLE);
    createEAttribute(variableEClass, VARIABLE__NAME);

    varDeclarationEClass = createEClass(VAR_DECLARATION);
    createEReference(varDeclarationEClass, VAR_DECLARATION__VARS);

    programVariableEClass = createEClass(PROGRAM_VARIABLE);

    updateStateVariableEClass = createEClass(UPDATE_STATE_VARIABLE);
    createEAttribute(updateStateVariableEClass, UPDATE_STATE_VARIABLE__NAME);

    constantParameterEClass = createEClass(CONSTANT_PARAMETER);

    formulaParameterEClass = createEClass(FORMULA_PARAMETER);
    createEAttribute(formulaParameterEClass, FORMULA_PARAMETER__NAME);

    functionalParameterEClass = createEClass(FUNCTIONAL_PARAMETER);
    createEAttribute(functionalParameterEClass, FUNCTIONAL_PARAMETER__NAME);

    formulaEClass = createEClass(FORMULA);
    createEReference(formulaEClass, FORMULA__LEFT);
    createEReference(formulaEClass, FORMULA__RIGHT);

    conjunctionFormulaEClass = createEClass(CONJUNCTION_FORMULA);

    primaryFormulaEClass = createEClass(PRIMARY_FORMULA);
    createEReference(primaryFormulaEClass, PRIMARY_FORMULA__PATTERN_INST);
    createEReference(primaryFormulaEClass, PRIMARY_FORMULA__NESTED_FORMULA);

    outerRequirementPatternInstanceEClass = createEClass(OUTER_REQUIREMENT_PATTERN_INSTANCE);
    createEReference(outerRequirementPatternInstanceEClass, OUTER_REQUIREMENT_PATTERN_INSTANCE__PATTERN);
    createEReference(outerRequirementPatternInstanceEClass, OUTER_REQUIREMENT_PATTERN_INSTANCE__CPARAMS);
    createEReference(outerRequirementPatternInstanceEClass, OUTER_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS);
    createEReference(outerRequirementPatternInstanceEClass, OUTER_REQUIREMENT_PATTERN_INSTANCE__FIN_STATE);
    createEReference(outerRequirementPatternInstanceEClass, OUTER_REQUIREMENT_PATTERN_INSTANCE__CUR_STATE);

    outerRequirementPatternEClass = createEClass(OUTER_REQUIREMENT_PATTERN);

    formulaParameterValueEClass = createEClass(FORMULA_PARAMETER_VALUE);
    createEReference(formulaParameterValueEClass, FORMULA_PARAMETER_VALUE__STATES);
    createEReference(formulaParameterValueEClass, FORMULA_PARAMETER_VALUE__FORMULA);

    innerFormulaEClass = createEClass(INNER_FORMULA);
    createEReference(innerFormulaEClass, INNER_FORMULA__LEFT);
    createEReference(innerFormulaEClass, INNER_FORMULA__RIGHT);

    conjunctionInnerFormulaEClass = createEClass(CONJUNCTION_INNER_FORMULA);

    primaryInnerFormulaEClass = createEClass(PRIMARY_INNER_FORMULA);
    createEReference(primaryInnerFormulaEClass, PRIMARY_INNER_FORMULA__ATOMIC);
    createEReference(primaryInnerFormulaEClass, PRIMARY_INNER_FORMULA__PATTERN_INST);
    createEReference(primaryInnerFormulaEClass, PRIMARY_INNER_FORMULA__NESTED_FORMULA);

    negationFormulaEClass = createEClass(NEGATION_FORMULA);
    createEAttribute(negationFormulaEClass, NEGATION_FORMULA__NEG);
    createEReference(negationFormulaEClass, NEGATION_FORMULA__RIGHT);

    atomicFormulaEClass = createEClass(ATOMIC_FORMULA);
    createEAttribute(atomicFormulaEClass, ATOMIC_FORMULA__BOOL_LITERAL);
    createEReference(atomicFormulaEClass, ATOMIC_FORMULA__BOOL_TERM);
    createEReference(atomicFormulaEClass, ATOMIC_FORMULA__FM_PARAM);
    createEReference(atomicFormulaEClass, ATOMIC_FORMULA__STATES);

    basicRequirementPatternInstanceEClass = createEClass(BASIC_REQUIREMENT_PATTERN_INSTANCE);
    createEReference(basicRequirementPatternInstanceEClass, BASIC_REQUIREMENT_PATTERN_INSTANCE__PATTERN);
    createEReference(basicRequirementPatternInstanceEClass, BASIC_REQUIREMENT_PATTERN_INSTANCE__CPARAMS);
    createEReference(basicRequirementPatternInstanceEClass, BASIC_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS);
    createEReference(basicRequirementPatternInstanceEClass, BASIC_REQUIREMENT_PATTERN_INSTANCE__FIN_STATE);
    createEReference(basicRequirementPatternInstanceEClass, BASIC_REQUIREMENT_PATTERN_INSTANCE__CUR_STATE);

    futureRequirementPatternEClass = createEClass(FUTURE_REQUIREMENT_PATTERN);
    createEAttribute(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__NAME);
    createEReference(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__CPARAMS);
    createEReference(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__FM_PARAMS);
    createEAttribute(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__FILE);
    createEReference(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN);
    createEReference(futureRequirementPatternEClass, FUTURE_REQUIREMENT_PATTERN__LESSAS);

    pastRequirementPatternEClass = createEClass(PAST_REQUIREMENT_PATTERN);
    createEAttribute(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__NAME);
    createEReference(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__CPARAMS);
    createEReference(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__FM_PARAMS);
    createEAttribute(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__FILE);
    createEReference(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN);
    createEReference(pastRequirementPatternEClass, PAST_REQUIREMENT_PATTERN__LEMMAS);

    futureExtraInvariantPatternEClass = createEClass(FUTURE_EXTRA_INVARIANT_PATTERN);
    createEAttribute(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__NAME);
    createEReference(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__CPARAMS);
    createEReference(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__FN_PARAMS);
    createEReference(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__FM_PARAMS);
    createEAttribute(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__FILE);
    createEReference(futureExtraInvariantPatternEClass, FUTURE_EXTRA_INVARIANT_PATTERN__LEMMAS);

    pastExtraInvariantPatternEClass = createEClass(PAST_EXTRA_INVARIANT_PATTERN);
    createEAttribute(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__NAME);
    createEReference(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__CPARAMS);
    createEReference(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__FN_PARAMS);
    createEReference(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__FM_PARAMS);
    createEAttribute(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__FILE);
    createEReference(pastExtraInvariantPatternEClass, PAST_EXTRA_INVARIANT_PATTERN__LEMMAS);

    derivedExtraInvariantPatternEClass = createEClass(DERIVED_EXTRA_INVARIANT_PATTERN);
    createEAttribute(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__NAME);
    createEReference(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS);
    createEReference(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS);
    createEReference(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS);
    createEAttribute(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__FILE);
    createEReference(derivedExtraInvariantPatternEClass, DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS);

    termEClass = createEClass(TERM);
    createEReference(termEClass, TERM__LEFT);
    createEReference(termEClass, TERM__RIGHT);

    conjunctionTermEClass = createEClass(CONJUNCTION_TERM);

    negationTermEClass = createEClass(NEGATION_TERM);

    eqTermEClass = createEClass(EQ_TERM);
    createEAttribute(eqTermEClass, EQ_TERM__EQ_PRED);

    compareTermEClass = createEClass(COMPARE_TERM);
    createEAttribute(compareTermEClass, COMPARE_TERM__COMP_PRED);

    addTermEClass = createEClass(ADD_TERM);
    createEAttribute(addTermEClass, ADD_TERM__ADD_OP);

    mulTermEClass = createEClass(MUL_TERM);
    createEAttribute(mulTermEClass, MUL_TERM__MUL_OP);

    powerTermEClass = createEClass(POWER_TERM);

    unaryTermEClass = createEClass(UNARY_TERM);
    createEAttribute(unaryTermEClass, UNARY_TERM__UN_OP);

    primaryTermEClass = createEClass(PRIMARY_TERM);
    createEReference(primaryTermEClass, PRIMARY_TERM__VARIABLE);
    createEReference(primaryTermEClass, PRIMARY_TERM__STATE);
    createEReference(primaryTermEClass, PRIMARY_TERM__NESTED_TERM);

    funApplicationEClass = createEClass(FUN_APPLICATION);
    createEReference(funApplicationEClass, FUN_APPLICATION__FN_PARAM);

    constantEClass = createEClass(CONSTANT);
    createEReference(constantEClass, CONSTANT__NUM);
    createEAttribute(constantEClass, CONSTANT__BOOL);

    numericLiteralEClass = createEClass(NUMERIC_LITERAL);
    createEAttribute(numericLiteralEClass, NUMERIC_LITERAL__SIG);
    createEAttribute(numericLiteralEClass, NUMERIC_LITERAL__VALUE);

    integerLiteralEClass = createEClass(INTEGER_LITERAL);

    realLiteralEClass = createEClass(REAL_LITERAL);

    patternFreeFormulaEClass = createEClass(PATTERN_FREE_FORMULA);
    createEReference(patternFreeFormulaEClass, PATTERN_FREE_FORMULA__LEFT);
    createEReference(patternFreeFormulaEClass, PATTERN_FREE_FORMULA__RIGHT);

    conjunctionPatternFreeFormulaEClass = createEClass(CONJUNCTION_PATTERN_FREE_FORMULA);

    primaryPatternFreeFormulaEClass = createEClass(PRIMARY_PATTERN_FREE_FORMULA);
    createEReference(primaryPatternFreeFormulaEClass, PRIMARY_PATTERN_FREE_FORMULA__ATOMIC);
    createEReference(primaryPatternFreeFormulaEClass, PRIMARY_PATTERN_FREE_FORMULA__NESTED_FORMULA);

    requirementEClass = createEClass(REQUIREMENT);
    createEAttribute(requirementEClass, REQUIREMENT__NAME);
    createEReference(requirementEClass, REQUIREMENT__PATTERN);
    createEReference(requirementEClass, REQUIREMENT__CPARAMS);
    createEReference(requirementEClass, REQUIREMENT__FM_PARAMS);
    createEAttribute(requirementEClass, REQUIREMENT__EXTRA_IN);

    extraInvariantEClass = createEClass(EXTRA_INVARIANT);
    createEAttribute(extraInvariantEClass, EXTRA_INVARIANT__NAME);
    createEReference(extraInvariantEClass, EXTRA_INVARIANT__PATTERN);
    createEAttribute(extraInvariantEClass, EXTRA_INVARIANT__REQ_NAME);
    createEReference(extraInvariantEClass, EXTRA_INVARIANT__REQ);

    patternFreeFormulaParameterValueEClass = createEClass(PATTERN_FREE_FORMULA_PARAMETER_VALUE);
    createEReference(patternFreeFormulaParameterValueEClass, PATTERN_FREE_FORMULA_PARAMETER_VALUE__STATES);
    createEReference(patternFreeFormulaParameterValueEClass, PATTERN_FREE_FORMULA_PARAMETER_VALUE__FORMULA);

    futureLemmasEClass = createEClass(FUTURE_LEMMAS);
    createEReference(futureLemmasEClass, FUTURE_LEMMAS__L1);
    createEReference(futureLemmasEClass, FUTURE_LEMMAS__L2);
    createEReference(futureLemmasEClass, FUTURE_LEMMAS__L3);

    pastLemmasEClass = createEClass(PAST_LEMMAS);
    createEReference(pastLemmasEClass, PAST_LEMMAS__L4);
    createEReference(pastLemmasEClass, PAST_LEMMAS__L5);
    createEReference(pastLemmasEClass, PAST_LEMMAS__L6);
    createEReference(pastLemmasEClass, PAST_LEMMAS__L7);

    derivedLemmasEClass = createEClass(DERIVED_LEMMAS);
    createEReference(derivedLemmasEClass, DERIVED_LEMMAS__L8);
    createEReference(derivedLemmasEClass, DERIVED_LEMMAS__L9);

    lemmaEClass = createEClass(LEMMA);
    createEAttribute(lemmaEClass, LEMMA__NAME);
    createEReference(lemmaEClass, LEMMA__CVARS);
    createEReference(lemmaEClass, LEMMA__FN_VARS);
    createEReference(lemmaEClass, LEMMA__IFM_VARS);
    createEReference(lemmaEClass, LEMMA__RFM_VARS);
    createEReference(lemmaEClass, LEMMA__INIT_STATE);
    createEReference(lemmaEClass, LEMMA__FINAL_STATE);
    createEReference(lemmaEClass, LEMMA__PREM);

    lemmaPremiseFormulaEClass = createEClass(LEMMA_PREMISE_FORMULA);
    createEReference(lemmaPremiseFormulaEClass, LEMMA_PREMISE_FORMULA__LEFT);
    createEReference(lemmaPremiseFormulaEClass, LEMMA_PREMISE_FORMULA__RIGHT);

    disjunctionLemmaPremiseFormulaEClass = createEClass(DISJUNCTION_LEMMA_PREMISE_FORMULA);

    conjunctionLemmaPremiseFormulaEClass = createEClass(CONJUNCTION_LEMMA_PREMISE_FORMULA);

    primaryLemmaPremiseFormulaEClass = createEClass(PRIMARY_LEMMA_PREMISE_FORMULA);
    createEReference(primaryLemmaPremiseFormulaEClass, PRIMARY_LEMMA_PREMISE_FORMULA__ATOMIC);
    createEReference(primaryLemmaPremiseFormulaEClass, PRIMARY_LEMMA_PREMISE_FORMULA__ALWAYS_IMP);
    createEReference(primaryLemmaPremiseFormulaEClass, PRIMARY_LEMMA_PREMISE_FORMULA__INST);
    createEReference(primaryLemmaPremiseFormulaEClass, PRIMARY_LEMMA_PREMISE_FORMULA__NESTED_FORMULA);

    alwaysImplicationEClass = createEClass(ALWAYS_IMPLICATION);
    createEReference(alwaysImplicationEClass, ALWAYS_IMPLICATION__STATE);
    createEReference(alwaysImplicationEClass, ALWAYS_IMPLICATION__LEFT);
    createEReference(alwaysImplicationEClass, ALWAYS_IMPLICATION__RIGHT);

    alwaysImplicationParameterValueEClass = createEClass(ALWAYS_IMPLICATION_PARAMETER_VALUE);
    createEReference(alwaysImplicationParameterValueEClass, ALWAYS_IMPLICATION_PARAMETER_VALUE__STATE);
    createEReference(alwaysImplicationParameterValueEClass, ALWAYS_IMPLICATION_PARAMETER_VALUE__FORMULA);

    pastExtraInvariantPatternInstanceEClass = createEClass(PAST_EXTRA_INVARIANT_PATTERN_INSTANCE);
    createEReference(pastExtraInvariantPatternInstanceEClass, PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__PATTERN);
    createEReference(pastExtraInvariantPatternInstanceEClass, PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__CPARAMS);
    createEReference(pastExtraInvariantPatternInstanceEClass, PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FN_PARAMS);
    createEReference(pastExtraInvariantPatternInstanceEClass, PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FM_PARAMS);
    createEReference(pastExtraInvariantPatternInstanceEClass, PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__STATE);

    conjunctionEClass = createEClass(CONJUNCTION);

    connunctionInnerFormulaEClass = createEClass(CONNUNCTION_INNER_FORMULA);

    // Create enums
    eqPredicateEEnum = createEEnum(EQ_PREDICATE);
    compPredicateEEnum = createEEnum(COMP_PREDICATE);
    addOperatorEEnum = createEEnum(ADD_OPERATOR);
    mulOperatorEEnum = createEEnum(MUL_OPERATOR);
    unMinusEEnum = createEEnum(UN_MINUS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    derivedRequirementPatternEClass.getESuperTypes().add(this.getElement());
    derivedRequirementPatternEClass.getESuperTypes().add(this.getBasicRequirementPattern());
    derivedRequirementPatternEClass.getESuperTypes().add(this.getOuterRequirementPattern());
    varDeclarationEClass.getESuperTypes().add(this.getElement());
    programVariableEClass.getESuperTypes().add(this.getVariable());
    constantParameterEClass.getESuperTypes().add(this.getVariable());
    conjunctionFormulaEClass.getESuperTypes().add(this.getFormula());
    primaryFormulaEClass.getESuperTypes().add(this.getConjunctionFormula());
    conjunctionInnerFormulaEClass.getESuperTypes().add(this.getInnerFormula());
    primaryInnerFormulaEClass.getESuperTypes().add(this.getConjunctionInnerFormula());
    futureRequirementPatternEClass.getESuperTypes().add(this.getElement());
    futureRequirementPatternEClass.getESuperTypes().add(this.getBasicRequirementPattern());
    pastRequirementPatternEClass.getESuperTypes().add(this.getElement());
    pastRequirementPatternEClass.getESuperTypes().add(this.getBasicRequirementPattern());
    pastRequirementPatternEClass.getESuperTypes().add(this.getOuterRequirementPattern());
    futureExtraInvariantPatternEClass.getESuperTypes().add(this.getElement());
    pastExtraInvariantPatternEClass.getESuperTypes().add(this.getElement());
    derivedExtraInvariantPatternEClass.getESuperTypes().add(this.getElement());
    conjunctionTermEClass.getESuperTypes().add(this.getTerm());
    negationTermEClass.getESuperTypes().add(this.getConjunctionTerm());
    eqTermEClass.getESuperTypes().add(this.getNegationTerm());
    compareTermEClass.getESuperTypes().add(this.getEqTerm());
    addTermEClass.getESuperTypes().add(this.getCompareTerm());
    mulTermEClass.getESuperTypes().add(this.getAddTerm());
    powerTermEClass.getESuperTypes().add(this.getMulTerm());
    unaryTermEClass.getESuperTypes().add(this.getPowerTerm());
    primaryTermEClass.getESuperTypes().add(this.getUnaryTerm());
    funApplicationEClass.getESuperTypes().add(this.getPrimaryTerm());
    constantEClass.getESuperTypes().add(this.getPrimaryTerm());
    integerLiteralEClass.getESuperTypes().add(this.getNumericLiteral());
    realLiteralEClass.getESuperTypes().add(this.getNumericLiteral());
    conjunctionPatternFreeFormulaEClass.getESuperTypes().add(this.getPatternFreeFormula());
    primaryPatternFreeFormulaEClass.getESuperTypes().add(this.getConjunctionPatternFreeFormula());
    requirementEClass.getESuperTypes().add(this.getElement());
    extraInvariantEClass.getESuperTypes().add(this.getElement());
    disjunctionLemmaPremiseFormulaEClass.getESuperTypes().add(this.getLemmaPremiseFormula());
    conjunctionLemmaPremiseFormulaEClass.getESuperTypes().add(this.getDisjunctionLemmaPremiseFormula());
    primaryLemmaPremiseFormulaEClass.getESuperTypes().add(this.getConjunctionLemmaPremiseFormula());
    conjunctionEClass.getESuperTypes().add(this.getConjunctionFormula());
    connunctionInnerFormulaEClass.getESuperTypes().add(this.getConjunctionInnerFormula());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Imports(), this.getImport(), null, "imports", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Elements(), this.getElement(), null, "elements", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportURI(), ecorePackage.getEString(), "importURI", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementEClass, Element.class, "Element", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(basicRequirementPatternEClass, BasicRequirementPattern.class, "BasicRequirementPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(derivedRequirementPatternEClass, DerivedRequirementPattern.class, "DerivedRequirementPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDerivedRequirementPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedRequirementPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedRequirementPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedRequirementPattern_Definition(), this.getFormula(), null, "definition", null, 0, 1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedRequirementPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedRequirementPattern_ExtraInvPattern(), this.getDerivedExtraInvariantPattern(), null, "extraInvPattern", null, 0, 1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedRequirementPattern_Lemmas(), this.getDerivedLemmas(), null, "lemmas", null, 0, 1, DerivedRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableEClass, Variable.class, "Variable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, Variable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(varDeclarationEClass, VarDeclaration.class, "VarDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVarDeclaration_Vars(), this.getProgramVariable(), null, "vars", null, 0, -1, VarDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(programVariableEClass, ProgramVariable.class, "ProgramVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(updateStateVariableEClass, UpdateStateVariable.class, "UpdateStateVariable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUpdateStateVariable_Name(), ecorePackage.getEString(), "name", null, 0, 1, UpdateStateVariable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constantParameterEClass, ConstantParameter.class, "ConstantParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(formulaParameterEClass, FormulaParameter.class, "FormulaParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFormulaParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, FormulaParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(functionalParameterEClass, FunctionalParameter.class, "FunctionalParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFunctionalParameter_Name(), ecorePackage.getEString(), "name", null, 0, 1, FunctionalParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(formulaEClass, Formula.class, "Formula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFormula_Left(), this.getFormula(), null, "left", null, 0, 1, Formula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFormula_Right(), this.getFormula(), null, "right", null, 0, 1, Formula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conjunctionFormulaEClass, ConjunctionFormula.class, "ConjunctionFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryFormulaEClass, PrimaryFormula.class, "PrimaryFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimaryFormula_PatternInst(), this.getOuterRequirementPatternInstance(), null, "patternInst", null, 0, 1, PrimaryFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryFormula_NestedFormula(), this.getFormula(), null, "nestedFormula", null, 0, 1, PrimaryFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(outerRequirementPatternInstanceEClass, OuterRequirementPatternInstance.class, "OuterRequirementPatternInstance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOuterRequirementPatternInstance_Pattern(), this.getOuterRequirementPattern(), null, "pattern", null, 0, 1, OuterRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOuterRequirementPatternInstance_CParams(), this.getTerm(), null, "cParams", null, 0, -1, OuterRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOuterRequirementPatternInstance_FmParams(), this.getFormulaParameterValue(), null, "fmParams", null, 0, -1, OuterRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOuterRequirementPatternInstance_FinState(), this.getUpdateStateVariable(), null, "finState", null, 0, 1, OuterRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOuterRequirementPatternInstance_CurState(), this.getUpdateStateVariable(), null, "curState", null, 0, 1, OuterRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(outerRequirementPatternEClass, OuterRequirementPattern.class, "OuterRequirementPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(formulaParameterValueEClass, FormulaParameterValue.class, "FormulaParameterValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFormulaParameterValue_States(), this.getUpdateStateVariable(), null, "states", null, 0, -1, FormulaParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFormulaParameterValue_Formula(), this.getInnerFormula(), null, "formula", null, 0, 1, FormulaParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(innerFormulaEClass, InnerFormula.class, "InnerFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getInnerFormula_Left(), this.getInnerFormula(), null, "left", null, 0, 1, InnerFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getInnerFormula_Right(), this.getInnerFormula(), null, "right", null, 0, 1, InnerFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conjunctionInnerFormulaEClass, ConjunctionInnerFormula.class, "ConjunctionInnerFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryInnerFormulaEClass, PrimaryInnerFormula.class, "PrimaryInnerFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimaryInnerFormula_Atomic(), this.getNegationFormula(), null, "atomic", null, 0, 1, PrimaryInnerFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryInnerFormula_PatternInst(), this.getBasicRequirementPatternInstance(), null, "patternInst", null, 0, 1, PrimaryInnerFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryInnerFormula_NestedFormula(), this.getInnerFormula(), null, "nestedFormula", null, 0, 1, PrimaryInnerFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(negationFormulaEClass, NegationFormula.class, "NegationFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNegationFormula_Neg(), ecorePackage.getEBoolean(), "neg", null, 0, 1, NegationFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNegationFormula_Right(), this.getAtomicFormula(), null, "right", null, 0, 1, NegationFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(atomicFormulaEClass, AtomicFormula.class, "AtomicFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAtomicFormula_BoolLiteral(), ecorePackage.getEString(), "boolLiteral", null, 0, 1, AtomicFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAtomicFormula_BoolTerm(), this.getTerm(), null, "boolTerm", null, 0, 1, AtomicFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAtomicFormula_FmParam(), this.getFormulaParameter(), null, "fmParam", null, 0, 1, AtomicFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAtomicFormula_States(), this.getUpdateStateVariable(), null, "states", null, 0, -1, AtomicFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(basicRequirementPatternInstanceEClass, BasicRequirementPatternInstance.class, "BasicRequirementPatternInstance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBasicRequirementPatternInstance_Pattern(), this.getBasicRequirementPattern(), null, "pattern", null, 0, 1, BasicRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBasicRequirementPatternInstance_CParams(), this.getTerm(), null, "cParams", null, 0, -1, BasicRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBasicRequirementPatternInstance_FmParams(), this.getFormulaParameterValue(), null, "fmParams", null, 0, -1, BasicRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBasicRequirementPatternInstance_FinState(), this.getUpdateStateVariable(), null, "finState", null, 0, 1, BasicRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBasicRequirementPatternInstance_CurState(), this.getUpdateStateVariable(), null, "curState", null, 0, 1, BasicRequirementPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(futureRequirementPatternEClass, FutureRequirementPattern.class, "FutureRequirementPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFutureRequirementPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureRequirementPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureRequirementPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFutureRequirementPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureRequirementPattern_ExtraInvPattern(), this.getFutureExtraInvariantPattern(), null, "extraInvPattern", null, 0, 1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureRequirementPattern_Lessas(), this.getFutureLemmas(), null, "lessas", null, 0, 1, FutureRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pastRequirementPatternEClass, PastRequirementPattern.class, "PastRequirementPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPastRequirementPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastRequirementPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastRequirementPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPastRequirementPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastRequirementPattern_ExtraInvPattern(), this.getPastExtraInvariantPattern(), null, "extraInvPattern", null, 0, 1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastRequirementPattern_Lemmas(), this.getPastLemmas(), null, "lemmas", null, 0, 1, PastRequirementPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(futureExtraInvariantPatternEClass, FutureExtraInvariantPattern.class, "FutureExtraInvariantPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFutureExtraInvariantPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureExtraInvariantPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureExtraInvariantPattern_FnParams(), this.getFunctionalParameter(), null, "fnParams", null, 0, -1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureExtraInvariantPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFutureExtraInvariantPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureExtraInvariantPattern_Lemmas(), this.getFutureLemmas(), null, "lemmas", null, 0, 1, FutureExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pastExtraInvariantPatternEClass, PastExtraInvariantPattern.class, "PastExtraInvariantPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPastExtraInvariantPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPattern_FnParams(), this.getFunctionalParameter(), null, "fnParams", null, 0, -1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPastExtraInvariantPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPattern_Lemmas(), this.getPastLemmas(), null, "lemmas", null, 0, 1, PastExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(derivedExtraInvariantPatternEClass, DerivedExtraInvariantPattern.class, "DerivedExtraInvariantPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDerivedExtraInvariantPattern_Name(), ecorePackage.getEString(), "name", null, 0, 1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedExtraInvariantPattern_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedExtraInvariantPattern_FnParams(), this.getFunctionalParameter(), null, "fnParams", null, 0, -1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedExtraInvariantPattern_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDerivedExtraInvariantPattern_File(), ecorePackage.getEString(), "file", null, 0, 1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedExtraInvariantPattern_Lemmas(), this.getDerivedLemmas(), null, "lemmas", null, 0, 1, DerivedExtraInvariantPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(termEClass, Term.class, "Term", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTerm_Left(), this.getTerm(), null, "left", null, 0, 1, Term.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTerm_Right(), this.getTerm(), null, "right", null, 0, 1, Term.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conjunctionTermEClass, ConjunctionTerm.class, "ConjunctionTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(negationTermEClass, NegationTerm.class, "NegationTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(eqTermEClass, EqTerm.class, "EqTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEqTerm_EqPred(), this.getEqPredicate(), "eqPred", null, 0, 1, EqTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compareTermEClass, CompareTerm.class, "CompareTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCompareTerm_CompPred(), this.getCompPredicate(), "compPred", null, 0, 1, CompareTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(addTermEClass, AddTerm.class, "AddTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAddTerm_AddOp(), this.getAddOperator(), "addOp", null, 0, 1, AddTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mulTermEClass, MulTerm.class, "MulTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMulTerm_MulOp(), this.getMulOperator(), "mulOp", null, 0, 1, MulTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(powerTermEClass, PowerTerm.class, "PowerTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(unaryTermEClass, UnaryTerm.class, "UnaryTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnaryTerm_UnOp(), this.getUnMinus(), "unOp", null, 0, 1, UnaryTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(primaryTermEClass, PrimaryTerm.class, "PrimaryTerm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimaryTerm_Variable(), this.getVariable(), null, "variable", null, 0, 1, PrimaryTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryTerm_State(), this.getUpdateStateVariable(), null, "state", null, 0, 1, PrimaryTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryTerm_NestedTerm(), this.getTerm(), null, "nestedTerm", null, 0, 1, PrimaryTerm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(funApplicationEClass, FunApplication.class, "FunApplication", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFunApplication_FnParam(), this.getFunctionalParameter(), null, "fnParam", null, 0, 1, FunApplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(constantEClass, Constant.class, "Constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConstant_Num(), this.getNumericLiteral(), null, "num", null, 0, 1, Constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getConstant_Bool(), ecorePackage.getEString(), "bool", null, 0, 1, Constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numericLiteralEClass, NumericLiteral.class, "NumericLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNumericLiteral_Sig(), ecorePackage.getEBoolean(), "sig", null, 0, 1, NumericLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getNumericLiteral_Value(), ecorePackage.getEString(), "value", null, 0, 1, NumericLiteral.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(integerLiteralEClass, IntegerLiteral.class, "IntegerLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(realLiteralEClass, RealLiteral.class, "RealLiteral", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(patternFreeFormulaEClass, PatternFreeFormula.class, "PatternFreeFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPatternFreeFormula_Left(), this.getPatternFreeFormula(), null, "left", null, 0, 1, PatternFreeFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternFreeFormula_Right(), this.getPatternFreeFormula(), null, "right", null, 0, 1, PatternFreeFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conjunctionPatternFreeFormulaEClass, ConjunctionPatternFreeFormula.class, "ConjunctionPatternFreeFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryPatternFreeFormulaEClass, PrimaryPatternFreeFormula.class, "PrimaryPatternFreeFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimaryPatternFreeFormula_Atomic(), this.getNegationFormula(), null, "atomic", null, 0, 1, PrimaryPatternFreeFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryPatternFreeFormula_NestedFormula(), this.getPatternFreeFormula(), null, "nestedFormula", null, 0, 1, PrimaryPatternFreeFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(requirementEClass, Requirement.class, "Requirement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRequirement_Name(), ecorePackage.getEString(), "name", null, 0, 1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRequirement_Pattern(), this.getDerivedRequirementPattern(), null, "pattern", null, 0, 1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRequirement_CParams(), this.getTerm(), null, "cParams", null, 0, -1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRequirement_FmParams(), this.getPatternFreeFormulaParameterValue(), null, "fmParams", null, 0, -1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRequirement_ExtraIn(), ecorePackage.getEString(), "extraIn", null, 0, 1, Requirement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(extraInvariantEClass, ExtraInvariant.class, "ExtraInvariant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getExtraInvariant_Name(), ecorePackage.getEString(), "name", null, 0, 1, ExtraInvariant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExtraInvariant_Pattern(), this.getDerivedExtraInvariantPattern(), null, "pattern", null, 0, 1, ExtraInvariant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getExtraInvariant_ReqName(), ecorePackage.getEString(), "reqName", null, 0, 1, ExtraInvariant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExtraInvariant_Req(), this.getRequirement(), null, "req", null, 0, 1, ExtraInvariant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(patternFreeFormulaParameterValueEClass, PatternFreeFormulaParameterValue.class, "PatternFreeFormulaParameterValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPatternFreeFormulaParameterValue_States(), this.getUpdateStateVariable(), null, "states", null, 0, -1, PatternFreeFormulaParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPatternFreeFormulaParameterValue_Formula(), this.getPatternFreeFormula(), null, "formula", null, 0, 1, PatternFreeFormulaParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(futureLemmasEClass, FutureLemmas.class, "FutureLemmas", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFutureLemmas_L1(), this.getLemma(), null, "L1", null, 0, 1, FutureLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureLemmas_L2(), this.getLemma(), null, "L2", null, 0, 1, FutureLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFutureLemmas_L3(), this.getLemma(), null, "L3", null, 0, 1, FutureLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pastLemmasEClass, PastLemmas.class, "PastLemmas", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPastLemmas_L4(), this.getLemma(), null, "L4", null, 0, 1, PastLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastLemmas_L5(), this.getLemma(), null, "L5", null, 0, 1, PastLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastLemmas_L6(), this.getLemma(), null, "L6", null, 0, 1, PastLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastLemmas_L7(), this.getLemma(), null, "L7", null, 0, 1, PastLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(derivedLemmasEClass, DerivedLemmas.class, "DerivedLemmas", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDerivedLemmas_L8(), this.getLemma(), null, "L8", null, 0, 1, DerivedLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDerivedLemmas_L9(), this.getLemma(), null, "L9", null, 0, 1, DerivedLemmas.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lemmaEClass, Lemma.class, "Lemma", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLemma_Name(), ecorePackage.getEString(), "name", null, 0, 1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_CVars(), this.getConstantParameter(), null, "cVars", null, 0, -1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_FnVars(), this.getFunctionalParameter(), null, "fnVars", null, 0, -1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_IfmVars(), this.getFormulaParameter(), null, "ifmVars", null, 0, -1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_RfmVars(), this.getFormulaParameter(), null, "rfmVars", null, 0, -1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_InitState(), this.getUpdateStateVariable(), null, "initState", null, 0, 1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_FinalState(), this.getUpdateStateVariable(), null, "finalState", null, 0, 1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemma_Prem(), this.getLemmaPremiseFormula(), null, "prem", null, 0, 1, Lemma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(lemmaPremiseFormulaEClass, LemmaPremiseFormula.class, "LemmaPremiseFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLemmaPremiseFormula_Left(), ecorePackage.getEObject(), null, "left", null, 0, 1, LemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLemmaPremiseFormula_Right(), this.getLemmaPremiseFormula(), null, "right", null, 0, 1, LemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(disjunctionLemmaPremiseFormulaEClass, DisjunctionLemmaPremiseFormula.class, "DisjunctionLemmaPremiseFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conjunctionLemmaPremiseFormulaEClass, ConjunctionLemmaPremiseFormula.class, "ConjunctionLemmaPremiseFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryLemmaPremiseFormulaEClass, PrimaryLemmaPremiseFormula.class, "PrimaryLemmaPremiseFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPrimaryLemmaPremiseFormula_Atomic(), this.getNegationFormula(), null, "atomic", null, 0, 1, PrimaryLemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryLemmaPremiseFormula_AlwaysImp(), this.getAlwaysImplication(), null, "alwaysImp", null, 0, 1, PrimaryLemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryLemmaPremiseFormula_Inst(), this.getPastExtraInvariantPatternInstance(), null, "inst", null, 0, 1, PrimaryLemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPrimaryLemmaPremiseFormula_NestedFormula(), this.getLemmaPremiseFormula(), null, "nestedFormula", null, 0, 1, PrimaryLemmaPremiseFormula.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(alwaysImplicationEClass, AlwaysImplication.class, "AlwaysImplication", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAlwaysImplication_State(), this.getUpdateStateVariable(), null, "state", null, 0, 1, AlwaysImplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlwaysImplication_Left(), this.getAlwaysImplicationParameterValue(), null, "left", null, 0, 1, AlwaysImplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlwaysImplication_Right(), this.getAlwaysImplicationParameterValue(), null, "right", null, 0, 1, AlwaysImplication.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(alwaysImplicationParameterValueEClass, AlwaysImplicationParameterValue.class, "AlwaysImplicationParameterValue", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAlwaysImplicationParameterValue_State(), this.getUpdateStateVariable(), null, "state", null, 0, 1, AlwaysImplicationParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlwaysImplicationParameterValue_Formula(), this.getNegationFormula(), null, "formula", null, 0, 1, AlwaysImplicationParameterValue.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pastExtraInvariantPatternInstanceEClass, PastExtraInvariantPatternInstance.class, "PastExtraInvariantPatternInstance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPastExtraInvariantPatternInstance_Pattern(), this.getPastExtraInvariantPattern(), null, "pattern", null, 0, 1, PastExtraInvariantPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPatternInstance_CParams(), this.getConstantParameter(), null, "cParams", null, 0, -1, PastExtraInvariantPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPatternInstance_FnParams(), this.getFunctionalParameter(), null, "fnParams", null, 0, -1, PastExtraInvariantPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPatternInstance_FmParams(), this.getFormulaParameter(), null, "fmParams", null, 0, -1, PastExtraInvariantPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPastExtraInvariantPatternInstance_State(), this.getUpdateStateVariable(), null, "state", null, 0, 1, PastExtraInvariantPatternInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conjunctionEClass, Conjunction.class, "Conjunction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(connunctionInnerFormulaEClass, ConnunctionInnerFormula.class, "ConnunctionInnerFormula", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    // Initialize enums and add enum literals
    initEEnum(eqPredicateEEnum, EqPredicate.class, "EqPredicate");
    addEEnumLiteral(eqPredicateEEnum, EqPredicate.EQ);
    addEEnumLiteral(eqPredicateEEnum, EqPredicate.NOT_EQ);

    initEEnum(compPredicateEEnum, CompPredicate.class, "CompPredicate");
    addEEnumLiteral(compPredicateEEnum, CompPredicate.LESS);
    addEEnumLiteral(compPredicateEEnum, CompPredicate.GREATER);
    addEEnumLiteral(compPredicateEEnum, CompPredicate.LESS_EQ);
    addEEnumLiteral(compPredicateEEnum, CompPredicate.GREATER_EQ);

    initEEnum(addOperatorEEnum, AddOperator.class, "AddOperator");
    addEEnumLiteral(addOperatorEEnum, AddOperator.PLUS);
    addEEnumLiteral(addOperatorEEnum, AddOperator.BMINUS);

    initEEnum(mulOperatorEEnum, MulOperator.class, "MulOperator");
    addEEnumLiteral(mulOperatorEEnum, MulOperator.MUL);
    addEEnumLiteral(mulOperatorEEnum, MulOperator.DIV);
    addEEnumLiteral(mulOperatorEEnum, MulOperator.MOD);

    initEEnum(unMinusEEnum, UnMinus.class, "UnMinus");
    addEEnumLiteral(unMinusEEnum, UnMinus.UNMINUS);

    // Create resource
    createResource(eNS_URI);
  }

} //RPLPackageImpl
