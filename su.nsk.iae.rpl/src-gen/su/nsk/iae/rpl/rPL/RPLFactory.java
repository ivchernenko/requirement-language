/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see su.nsk.iae.rpl.rPL.RPLPackage
 * @generated
 */
public interface RPLFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  RPLFactory eINSTANCE = su.nsk.iae.rpl.rPL.impl.RPLFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Import</em>'.
   * @generated
   */
  Import createImport();

  /**
   * Returns a new object of class '<em>Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Element</em>'.
   * @generated
   */
  Element createElement();

  /**
   * Returns a new object of class '<em>Basic Requirement Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Basic Requirement Pattern</em>'.
   * @generated
   */
  BasicRequirementPattern createBasicRequirementPattern();

  /**
   * Returns a new object of class '<em>Derived Requirement Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Derived Requirement Pattern</em>'.
   * @generated
   */
  DerivedRequirementPattern createDerivedRequirementPattern();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns a new object of class '<em>Var Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var Declaration</em>'.
   * @generated
   */
  VarDeclaration createVarDeclaration();

  /**
   * Returns a new object of class '<em>Program Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Program Variable</em>'.
   * @generated
   */
  ProgramVariable createProgramVariable();

  /**
   * Returns a new object of class '<em>Update State Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Update State Variable</em>'.
   * @generated
   */
  UpdateStateVariable createUpdateStateVariable();

  /**
   * Returns a new object of class '<em>Constant Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Constant Parameter</em>'.
   * @generated
   */
  ConstantParameter createConstantParameter();

  /**
   * Returns a new object of class '<em>Formula Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Formula Parameter</em>'.
   * @generated
   */
  FormulaParameter createFormulaParameter();

  /**
   * Returns a new object of class '<em>Functional Parameter</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Functional Parameter</em>'.
   * @generated
   */
  FunctionalParameter createFunctionalParameter();

  /**
   * Returns a new object of class '<em>Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Formula</em>'.
   * @generated
   */
  Formula createFormula();

  /**
   * Returns a new object of class '<em>Conjunction Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction Formula</em>'.
   * @generated
   */
  ConjunctionFormula createConjunctionFormula();

  /**
   * Returns a new object of class '<em>Primary Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Formula</em>'.
   * @generated
   */
  PrimaryFormula createPrimaryFormula();

  /**
   * Returns a new object of class '<em>Outer Requirement Pattern Instance</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Outer Requirement Pattern Instance</em>'.
   * @generated
   */
  OuterRequirementPatternInstance createOuterRequirementPatternInstance();

  /**
   * Returns a new object of class '<em>Outer Requirement Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Outer Requirement Pattern</em>'.
   * @generated
   */
  OuterRequirementPattern createOuterRequirementPattern();

  /**
   * Returns a new object of class '<em>Formula Parameter Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Formula Parameter Value</em>'.
   * @generated
   */
  FormulaParameterValue createFormulaParameterValue();

  /**
   * Returns a new object of class '<em>Inner Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Inner Formula</em>'.
   * @generated
   */
  InnerFormula createInnerFormula();

  /**
   * Returns a new object of class '<em>Conjunction Inner Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction Inner Formula</em>'.
   * @generated
   */
  ConjunctionInnerFormula createConjunctionInnerFormula();

  /**
   * Returns a new object of class '<em>Primary Inner Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Inner Formula</em>'.
   * @generated
   */
  PrimaryInnerFormula createPrimaryInnerFormula();

  /**
   * Returns a new object of class '<em>Negation Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Negation Formula</em>'.
   * @generated
   */
  NegationFormula createNegationFormula();

  /**
   * Returns a new object of class '<em>Atomic Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Atomic Formula</em>'.
   * @generated
   */
  AtomicFormula createAtomicFormula();

  /**
   * Returns a new object of class '<em>Basic Requirement Pattern Instance</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Basic Requirement Pattern Instance</em>'.
   * @generated
   */
  BasicRequirementPatternInstance createBasicRequirementPatternInstance();

  /**
   * Returns a new object of class '<em>Future Requirement Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Future Requirement Pattern</em>'.
   * @generated
   */
  FutureRequirementPattern createFutureRequirementPattern();

  /**
   * Returns a new object of class '<em>Past Requirement Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Past Requirement Pattern</em>'.
   * @generated
   */
  PastRequirementPattern createPastRequirementPattern();

  /**
   * Returns a new object of class '<em>Future Extra Invariant Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Future Extra Invariant Pattern</em>'.
   * @generated
   */
  FutureExtraInvariantPattern createFutureExtraInvariantPattern();

  /**
   * Returns a new object of class '<em>Past Extra Invariant Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Past Extra Invariant Pattern</em>'.
   * @generated
   */
  PastExtraInvariantPattern createPastExtraInvariantPattern();

  /**
   * Returns a new object of class '<em>Derived Extra Invariant Pattern</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Derived Extra Invariant Pattern</em>'.
   * @generated
   */
  DerivedExtraInvariantPattern createDerivedExtraInvariantPattern();

  /**
   * Returns a new object of class '<em>Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Term</em>'.
   * @generated
   */
  Term createTerm();

  /**
   * Returns a new object of class '<em>Conjunction Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction Term</em>'.
   * @generated
   */
  ConjunctionTerm createConjunctionTerm();

  /**
   * Returns a new object of class '<em>Negation Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Negation Term</em>'.
   * @generated
   */
  NegationTerm createNegationTerm();

  /**
   * Returns a new object of class '<em>Eq Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Eq Term</em>'.
   * @generated
   */
  EqTerm createEqTerm();

  /**
   * Returns a new object of class '<em>Compare Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Compare Term</em>'.
   * @generated
   */
  CompareTerm createCompareTerm();

  /**
   * Returns a new object of class '<em>Add Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Add Term</em>'.
   * @generated
   */
  AddTerm createAddTerm();

  /**
   * Returns a new object of class '<em>Mul Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Mul Term</em>'.
   * @generated
   */
  MulTerm createMulTerm();

  /**
   * Returns a new object of class '<em>Power Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Power Term</em>'.
   * @generated
   */
  PowerTerm createPowerTerm();

  /**
   * Returns a new object of class '<em>Unary Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Unary Term</em>'.
   * @generated
   */
  UnaryTerm createUnaryTerm();

  /**
   * Returns a new object of class '<em>Primary Term</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Term</em>'.
   * @generated
   */
  PrimaryTerm createPrimaryTerm();

  /**
   * Returns a new object of class '<em>Fun Application</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fun Application</em>'.
   * @generated
   */
  FunApplication createFunApplication();

  /**
   * Returns a new object of class '<em>Constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Constant</em>'.
   * @generated
   */
  Constant createConstant();

  /**
   * Returns a new object of class '<em>Numeric Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Numeric Literal</em>'.
   * @generated
   */
  NumericLiteral createNumericLiteral();

  /**
   * Returns a new object of class '<em>Integer Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Integer Literal</em>'.
   * @generated
   */
  IntegerLiteral createIntegerLiteral();

  /**
   * Returns a new object of class '<em>Real Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Real Literal</em>'.
   * @generated
   */
  RealLiteral createRealLiteral();

  /**
   * Returns a new object of class '<em>Pattern Free Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pattern Free Formula</em>'.
   * @generated
   */
  PatternFreeFormula createPatternFreeFormula();

  /**
   * Returns a new object of class '<em>Conjunction Pattern Free Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction Pattern Free Formula</em>'.
   * @generated
   */
  ConjunctionPatternFreeFormula createConjunctionPatternFreeFormula();

  /**
   * Returns a new object of class '<em>Primary Pattern Free Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Pattern Free Formula</em>'.
   * @generated
   */
  PrimaryPatternFreeFormula createPrimaryPatternFreeFormula();

  /**
   * Returns a new object of class '<em>Requirement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Requirement</em>'.
   * @generated
   */
  Requirement createRequirement();

  /**
   * Returns a new object of class '<em>Extra Invariant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Extra Invariant</em>'.
   * @generated
   */
  ExtraInvariant createExtraInvariant();

  /**
   * Returns a new object of class '<em>Pattern Free Formula Parameter Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pattern Free Formula Parameter Value</em>'.
   * @generated
   */
  PatternFreeFormulaParameterValue createPatternFreeFormulaParameterValue();

  /**
   * Returns a new object of class '<em>Future Lemmas</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Future Lemmas</em>'.
   * @generated
   */
  FutureLemmas createFutureLemmas();

  /**
   * Returns a new object of class '<em>Past Lemmas</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Past Lemmas</em>'.
   * @generated
   */
  PastLemmas createPastLemmas();

  /**
   * Returns a new object of class '<em>Derived Lemmas</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Derived Lemmas</em>'.
   * @generated
   */
  DerivedLemmas createDerivedLemmas();

  /**
   * Returns a new object of class '<em>Lemma</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Lemma</em>'.
   * @generated
   */
  Lemma createLemma();

  /**
   * Returns a new object of class '<em>Lemma Premise Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Lemma Premise Formula</em>'.
   * @generated
   */
  LemmaPremiseFormula createLemmaPremiseFormula();

  /**
   * Returns a new object of class '<em>Disjunction Lemma Premise Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Disjunction Lemma Premise Formula</em>'.
   * @generated
   */
  DisjunctionLemmaPremiseFormula createDisjunctionLemmaPremiseFormula();

  /**
   * Returns a new object of class '<em>Conjunction Lemma Premise Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction Lemma Premise Formula</em>'.
   * @generated
   */
  ConjunctionLemmaPremiseFormula createConjunctionLemmaPremiseFormula();

  /**
   * Returns a new object of class '<em>Primary Lemma Premise Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Primary Lemma Premise Formula</em>'.
   * @generated
   */
  PrimaryLemmaPremiseFormula createPrimaryLemmaPremiseFormula();

  /**
   * Returns a new object of class '<em>Always Implication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Always Implication</em>'.
   * @generated
   */
  AlwaysImplication createAlwaysImplication();

  /**
   * Returns a new object of class '<em>Always Implication Parameter Value</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Always Implication Parameter Value</em>'.
   * @generated
   */
  AlwaysImplicationParameterValue createAlwaysImplicationParameterValue();

  /**
   * Returns a new object of class '<em>Past Extra Invariant Pattern Instance</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Past Extra Invariant Pattern Instance</em>'.
   * @generated
   */
  PastExtraInvariantPatternInstance createPastExtraInvariantPatternInstance();

  /**
   * Returns a new object of class '<em>Conjunction</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conjunction</em>'.
   * @generated
   */
  Conjunction createConjunction();

  /**
   * Returns a new object of class '<em>Connunction Inner Formula</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Connunction Inner Formula</em>'.
   * @generated
   */
  ConnunctionInnerFormula createConnunctionInnerFormula();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  RPLPackage getRPLPackage();

} //RPLFactory
