/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see su.nsk.iae.rpl.rPL.RPLFactory
 * @model kind="package"
 * @generated
 */
public interface RPLPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "rPL";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.nsk.su/iae/rpl/RPL";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "rPL";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  RPLPackage eINSTANCE = su.nsk.iae.rpl.rPL.impl.RPLPackageImpl.init();

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ModelImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Imports</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__IMPORTS = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ELEMENTS = 1;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ImportImpl <em>Import</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ImportImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getImport()
   * @generated
   */
  int IMPORT = 1;

  /**
   * The feature id for the '<em><b>Import URI</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT__IMPORT_URI = 0;

  /**
   * The number of structural features of the '<em>Import</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IMPORT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ElementImpl <em>Element</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ElementImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getElement()
   * @generated
   */
  int ELEMENT = 2;

  /**
   * The number of structural features of the '<em>Element</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ELEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternImpl <em>Basic Requirement Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getBasicRequirementPattern()
   * @generated
   */
  int BASIC_REQUIREMENT_PATTERN = 3;

  /**
   * The number of structural features of the '<em>Basic Requirement Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl <em>Derived Requirement Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedRequirementPattern()
   * @generated
   */
  int DERIVED_REQUIREMENT_PATTERN = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Simple Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__SIMPLE_FM_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Definition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__DEFINITION = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Extra Inv Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Lemmas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN__LEMMAS = ELEMENT_FEATURE_COUNT + 6;

  /**
   * The number of structural features of the '<em>Derived Requirement Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_REQUIREMENT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 7;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.VariableImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.VarDeclarationImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 6;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VARS = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ProgramVariableImpl <em>Program Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ProgramVariableImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getProgramVariable()
   * @generated
   */
  int PROGRAM_VARIABLE = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_VARIABLE__NAME = VARIABLE__NAME;

  /**
   * The number of structural features of the '<em>Program Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_VARIABLE_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.UpdateStateVariableImpl <em>Update State Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.UpdateStateVariableImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUpdateStateVariable()
   * @generated
   */
  int UPDATE_STATE_VARIABLE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATE_VARIABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Update State Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UPDATE_STATE_VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConstantParameterImpl <em>Constant Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConstantParameterImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConstantParameter()
   * @generated
   */
  int CONSTANT_PARAMETER = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_PARAMETER__NAME = VARIABLE__NAME;

  /**
   * The number of structural features of the '<em>Constant Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_PARAMETER_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaParameterImpl <em>Formula Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FormulaParameterImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormulaParameter()
   * @generated
   */
  int FORMULA_PARAMETER = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_PARAMETER__NAME = 0;

  /**
   * The number of structural features of the '<em>Formula Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.SimpleFormulaParameterImpl <em>Simple Formula Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.SimpleFormulaParameterImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getSimpleFormulaParameter()
   * @generated
   */
  int SIMPLE_FORMULA_PARAMETER = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_FORMULA_PARAMETER__NAME = FORMULA_PARAMETER__NAME;

  /**
   * The feature id for the '<em><b>Arity</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_FORMULA_PARAMETER__ARITY = FORMULA_PARAMETER_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Simple Formula Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_FORMULA_PARAMETER_FEATURE_COUNT = FORMULA_PARAMETER_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.RegularFormulaParameterImpl <em>Regular Formula Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.RegularFormulaParameterImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRegularFormulaParameter()
   * @generated
   */
  int REGULAR_FORMULA_PARAMETER = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_FORMULA_PARAMETER__NAME = FORMULA_PARAMETER__NAME;

  /**
   * The number of structural features of the '<em>Regular Formula Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REGULAR_FORMULA_PARAMETER_FEATURE_COUNT = FORMULA_PARAMETER_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FunctionalParameterImpl <em>Functional Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FunctionalParameterImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFunctionalParameter()
   * @generated
   */
  int FUNCTIONAL_PARAMETER = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONAL_PARAMETER__NAME = 0;

  /**
   * The number of structural features of the '<em>Functional Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTIONAL_PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaImpl <em>Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormula()
   * @generated
   */
  int FORMULA = 14;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionFormulaImpl <em>Conjunction Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionFormula()
   * @generated
   */
  int CONJUNCTION_FORMULA = 15;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_FORMULA__LEFT = FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_FORMULA__RIGHT = FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_FORMULA_FEATURE_COUNT = FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryFormulaImpl <em>Primary Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PrimaryFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryFormula()
   * @generated
   */
  int PRIMARY_FORMULA = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FORMULA__LEFT = CONJUNCTION_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FORMULA__RIGHT = CONJUNCTION_FORMULA__RIGHT;

  /**
   * The feature id for the '<em><b>Pattern Inst</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FORMULA__PATTERN_INST = CONJUNCTION_FORMULA_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Nested Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FORMULA__NESTED_FORMULA = CONJUNCTION_FORMULA_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Primary Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_FORMULA_FEATURE_COUNT = CONJUNCTION_FORMULA_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternInstanceImpl <em>Outer Requirement Pattern Instance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternInstanceImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getOuterRequirementPatternInstance()
   * @generated
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE = 17;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE__PATTERN = 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE__CPARAMS = 1;

  /**
   * The feature id for the '<em><b>Simple Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE__SIMPLE_FM_PARAMS = 2;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS = 3;

  /**
   * The number of structural features of the '<em>Outer Requirement Pattern Instance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_INSTANCE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternImpl <em>Outer Requirement Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getOuterRequirementPattern()
   * @generated
   */
  int OUTER_REQUIREMENT_PATTERN = 18;

  /**
   * The number of structural features of the '<em>Outer Requirement Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OUTER_REQUIREMENT_PATTERN_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaParameterValueImpl <em>Formula Parameter Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FormulaParameterValueImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormulaParameterValue()
   * @generated
   */
  int FORMULA_PARAMETER_VALUE = 19;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_PARAMETER_VALUE__STATES = 0;

  /**
   * The feature id for the '<em><b>Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_PARAMETER_VALUE__FORMULA = 1;

  /**
   * The number of structural features of the '<em>Formula Parameter Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMULA_PARAMETER_VALUE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.InnerFormulaImpl <em>Inner Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.InnerFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getInnerFormula()
   * @generated
   */
  int INNER_FORMULA = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INNER_FORMULA__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INNER_FORMULA__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Inner Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INNER_FORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionInnerFormulaImpl <em>Conjunction Inner Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionInnerFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionInnerFormula()
   * @generated
   */
  int CONJUNCTION_INNER_FORMULA = 21;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_INNER_FORMULA__LEFT = INNER_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_INNER_FORMULA__RIGHT = INNER_FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction Inner Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_INNER_FORMULA_FEATURE_COUNT = INNER_FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryInnerFormulaImpl <em>Primary Inner Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PrimaryInnerFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryInnerFormula()
   * @generated
   */
  int PRIMARY_INNER_FORMULA = 22;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA__LEFT = CONJUNCTION_INNER_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA__RIGHT = CONJUNCTION_INNER_FORMULA__RIGHT;

  /**
   * The feature id for the '<em><b>Atomic</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA__ATOMIC = CONJUNCTION_INNER_FORMULA_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern Inst</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA__PATTERN_INST = CONJUNCTION_INNER_FORMULA_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Nested Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA__NESTED_FORMULA = CONJUNCTION_INNER_FORMULA_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Primary Inner Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_INNER_FORMULA_FEATURE_COUNT = CONJUNCTION_INNER_FORMULA_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.NegationFormulaImpl <em>Negation Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.NegationFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNegationFormula()
   * @generated
   */
  int NEGATION_FORMULA = 23;

  /**
   * The feature id for the '<em><b>Neg</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_FORMULA__NEG = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_FORMULA__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Negation Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_FORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.AtomicFormulaImpl <em>Atomic Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.AtomicFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAtomicFormula()
   * @generated
   */
  int ATOMIC_FORMULA = 24;

  /**
   * The feature id for the '<em><b>Bool Literal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_FORMULA__BOOL_LITERAL = 0;

  /**
   * The feature id for the '<em><b>Bool Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_FORMULA__BOOL_TERM = 1;

  /**
   * The feature id for the '<em><b>Fm Param</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_FORMULA__FM_PARAM = 2;

  /**
   * The feature id for the '<em><b>States</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_FORMULA__STATES = 3;

  /**
   * The number of structural features of the '<em>Atomic Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ATOMIC_FORMULA_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternInstanceImpl <em>Basic Requirement Pattern Instance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternInstanceImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getBasicRequirementPatternInstance()
   * @generated
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE = 25;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE__PATTERN = 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE__CPARAMS = 1;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS = 2;

  /**
   * The feature id for the '<em><b>Fin State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE__FIN_STATE = 3;

  /**
   * The feature id for the '<em><b>Cur State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE__CUR_STATE = 4;

  /**
   * The number of structural features of the '<em>Basic Requirement Pattern Instance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BASIC_REQUIREMENT_PATTERN_INSTANCE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FutureRequirementPatternImpl <em>Future Requirement Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FutureRequirementPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureRequirementPattern()
   * @generated
   */
  int FUTURE_REQUIREMENT_PATTERN = 26;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Extra Inv Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Lessas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN__LESSAS = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Future Requirement Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_REQUIREMENT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PastRequirementPatternImpl <em>Past Requirement Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PastRequirementPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastRequirementPattern()
   * @generated
   */
  int PAST_REQUIREMENT_PATTERN = 27;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Extra Inv Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Lemmas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN__LEMMAS = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Past Requirement Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_REQUIREMENT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FutureExtraInvariantPatternImpl <em>Future Extra Invariant Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FutureExtraInvariantPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureExtraInvariantPattern()
   * @generated
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN = 28;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Fn Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN__FN_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Lemmas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN__LEMMAS = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Future Extra Invariant Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_EXTRA_INVARIANT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternImpl <em>Past Extra Invariant Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastExtraInvariantPattern()
   * @generated
   */
  int PAST_EXTRA_INVARIANT_PATTERN = 29;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Fn Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN__FN_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Lemmas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN__LEMMAS = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Past Extra Invariant Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl <em>Derived Extra Invariant Pattern</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedExtraInvariantPattern()
   * @generated
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN = 30;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Fn Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Simple Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS = ELEMENT_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Lemmas</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS = ELEMENT_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>Derived Extra Invariant Pattern</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_EXTRA_INVARIANT_PATTERN_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.TermImpl <em>Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.TermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getTerm()
   * @generated
   */
  int TERM = 31;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionTermImpl <em>Conjunction Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionTerm()
   * @generated
   */
  int CONJUNCTION_TERM = 32;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_TERM__LEFT = TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_TERM__RIGHT = TERM__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_TERM_FEATURE_COUNT = TERM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.NegationTermImpl <em>Negation Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.NegationTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNegationTerm()
   * @generated
   */
  int NEGATION_TERM = 33;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_TERM__LEFT = CONJUNCTION_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_TERM__RIGHT = CONJUNCTION_TERM__RIGHT;

  /**
   * The number of structural features of the '<em>Negation Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NEGATION_TERM_FEATURE_COUNT = CONJUNCTION_TERM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.EqTermImpl <em>Eq Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.EqTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getEqTerm()
   * @generated
   */
  int EQ_TERM = 34;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_TERM__LEFT = NEGATION_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_TERM__RIGHT = NEGATION_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_TERM__EQ_PRED = NEGATION_TERM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Eq Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQ_TERM_FEATURE_COUNT = NEGATION_TERM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.CompareTermImpl <em>Compare Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.CompareTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getCompareTerm()
   * @generated
   */
  int COMPARE_TERM = 35;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_TERM__LEFT = EQ_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_TERM__RIGHT = EQ_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_TERM__EQ_PRED = EQ_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_TERM__COMP_PRED = EQ_TERM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Compare Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARE_TERM_FEATURE_COUNT = EQ_TERM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.AddTermImpl <em>Add Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.AddTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAddTerm()
   * @generated
   */
  int ADD_TERM = 36;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM__LEFT = COMPARE_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM__RIGHT = COMPARE_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM__EQ_PRED = COMPARE_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM__COMP_PRED = COMPARE_TERM__COMP_PRED;

  /**
   * The feature id for the '<em><b>Add Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM__ADD_OP = COMPARE_TERM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Add Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_TERM_FEATURE_COUNT = COMPARE_TERM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.MulTermImpl <em>Mul Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.MulTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getMulTerm()
   * @generated
   */
  int MUL_TERM = 37;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__LEFT = ADD_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__RIGHT = ADD_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__EQ_PRED = ADD_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__COMP_PRED = ADD_TERM__COMP_PRED;

  /**
   * The feature id for the '<em><b>Add Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__ADD_OP = ADD_TERM__ADD_OP;

  /**
   * The feature id for the '<em><b>Mul Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM__MUL_OP = ADD_TERM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Mul Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_TERM_FEATURE_COUNT = ADD_TERM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PowerTermImpl <em>Power Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PowerTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPowerTerm()
   * @generated
   */
  int POWER_TERM = 38;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__LEFT = MUL_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__RIGHT = MUL_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__EQ_PRED = MUL_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__COMP_PRED = MUL_TERM__COMP_PRED;

  /**
   * The feature id for the '<em><b>Add Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__ADD_OP = MUL_TERM__ADD_OP;

  /**
   * The feature id for the '<em><b>Mul Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM__MUL_OP = MUL_TERM__MUL_OP;

  /**
   * The number of structural features of the '<em>Power Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_TERM_FEATURE_COUNT = MUL_TERM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.UnaryTermImpl <em>Unary Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.UnaryTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUnaryTerm()
   * @generated
   */
  int UNARY_TERM = 39;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__LEFT = POWER_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__RIGHT = POWER_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__EQ_PRED = POWER_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__COMP_PRED = POWER_TERM__COMP_PRED;

  /**
   * The feature id for the '<em><b>Add Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__ADD_OP = POWER_TERM__ADD_OP;

  /**
   * The feature id for the '<em><b>Mul Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__MUL_OP = POWER_TERM__MUL_OP;

  /**
   * The feature id for the '<em><b>Un Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM__UN_OP = POWER_TERM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Unary Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_TERM_FEATURE_COUNT = POWER_TERM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryTermImpl <em>Primary Term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PrimaryTermImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryTerm()
   * @generated
   */
  int PRIMARY_TERM = 40;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__LEFT = UNARY_TERM__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__RIGHT = UNARY_TERM__RIGHT;

  /**
   * The feature id for the '<em><b>Eq Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__EQ_PRED = UNARY_TERM__EQ_PRED;

  /**
   * The feature id for the '<em><b>Comp Pred</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__COMP_PRED = UNARY_TERM__COMP_PRED;

  /**
   * The feature id for the '<em><b>Add Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__ADD_OP = UNARY_TERM__ADD_OP;

  /**
   * The feature id for the '<em><b>Mul Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__MUL_OP = UNARY_TERM__MUL_OP;

  /**
   * The feature id for the '<em><b>Un Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__UN_OP = UNARY_TERM__UN_OP;

  /**
   * The feature id for the '<em><b>Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__CONST = UNARY_TERM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__VARIABLE = UNARY_TERM_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__STATE = UNARY_TERM_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Fun App</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__FUN_APP = UNARY_TERM_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Nested Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM__NESTED_TERM = UNARY_TERM_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>Primary Term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_TERM_FEATURE_COUNT = UNARY_TERM_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FunApplicationImpl <em>Fun Application</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FunApplicationImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFunApplication()
   * @generated
   */
  int FUN_APPLICATION = 41;

  /**
   * The feature id for the '<em><b>Fn Param</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_APPLICATION__FN_PARAM = 0;

  /**
   * The feature id for the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_APPLICATION__STATE = 1;

  /**
   * The number of structural features of the '<em>Fun Application</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUN_APPLICATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConstantImpl <em>Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConstantImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConstant()
   * @generated
   */
  int CONSTANT = 42;

  /**
   * The feature id for the '<em><b>Num</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__NUM = 0;

  /**
   * The feature id for the '<em><b>Bool</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__BOOL = 1;

  /**
   * The number of structural features of the '<em>Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.NumericLiteralImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNumericLiteral()
   * @generated
   */
  int NUMERIC_LITERAL = 43;

  /**
   * The feature id for the '<em><b>Sig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__SIG = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__VALUE = 1;

  /**
   * The number of structural features of the '<em>Numeric Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.IntegerLiteralImpl <em>Integer Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.IntegerLiteralImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getIntegerLiteral()
   * @generated
   */
  int INTEGER_LITERAL = 44;

  /**
   * The feature id for the '<em><b>Sig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_LITERAL__SIG = NUMERIC_LITERAL__SIG;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_LITERAL__VALUE = NUMERIC_LITERAL__VALUE;

  /**
   * The number of structural features of the '<em>Integer Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INTEGER_LITERAL_FEATURE_COUNT = NUMERIC_LITERAL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.RealLiteralImpl <em>Real Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.RealLiteralImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRealLiteral()
   * @generated
   */
  int REAL_LITERAL = 45;

  /**
   * The feature id for the '<em><b>Sig</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL__SIG = NUMERIC_LITERAL__SIG;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL__VALUE = NUMERIC_LITERAL__VALUE;

  /**
   * The number of structural features of the '<em>Real Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REAL_LITERAL_FEATURE_COUNT = NUMERIC_LITERAL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaImpl <em>Pattern Free Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPatternFreeFormula()
   * @generated
   */
  int PATTERN_FREE_FORMULA = 46;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Pattern Free Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionPatternFreeFormulaImpl <em>Conjunction Pattern Free Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionPatternFreeFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionPatternFreeFormula()
   * @generated
   */
  int CONJUNCTION_PATTERN_FREE_FORMULA = 47;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_PATTERN_FREE_FORMULA__LEFT = PATTERN_FREE_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_PATTERN_FREE_FORMULA__RIGHT = PATTERN_FREE_FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction Pattern Free Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_PATTERN_FREE_FORMULA_FEATURE_COUNT = PATTERN_FREE_FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryPatternFreeFormulaImpl <em>Primary Pattern Free Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PrimaryPatternFreeFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryPatternFreeFormula()
   * @generated
   */
  int PRIMARY_PATTERN_FREE_FORMULA = 48;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_PATTERN_FREE_FORMULA__LEFT = CONJUNCTION_PATTERN_FREE_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_PATTERN_FREE_FORMULA__RIGHT = CONJUNCTION_PATTERN_FREE_FORMULA__RIGHT;

  /**
   * The feature id for the '<em><b>Atomic</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_PATTERN_FREE_FORMULA__ATOMIC = CONJUNCTION_PATTERN_FREE_FORMULA_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Nested Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_PATTERN_FREE_FORMULA__NESTED_FORMULA = CONJUNCTION_PATTERN_FREE_FORMULA_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Primary Pattern Free Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_PATTERN_FREE_FORMULA_FEATURE_COUNT = CONJUNCTION_PATTERN_FREE_FORMULA_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.RequirementImpl <em>Requirement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.RequirementImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRequirement()
   * @generated
   */
  int REQUIREMENT = 49;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__PATTERN = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Extra Inv</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT__EXTRA_INV = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Requirement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REQUIREMENT_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ExtraInvariantImpl <em>Extra Invariant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ExtraInvariantImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getExtraInvariant()
   * @generated
   */
  int EXTRA_INVARIANT = 50;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRA_INVARIANT__NAME = ELEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRA_INVARIANT__PATTERN = ELEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Extra Invariant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXTRA_INVARIANT_FEATURE_COUNT = ELEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaParameterValueImpl <em>Pattern Free Formula Parameter Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaParameterValueImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPatternFreeFormulaParameterValue()
   * @generated
   */
  int PATTERN_FREE_FORMULA_PARAMETER_VALUE = 51;

  /**
   * The feature id for the '<em><b>States</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA_PARAMETER_VALUE__STATES = 0;

  /**
   * The feature id for the '<em><b>Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA_PARAMETER_VALUE__FORMULA = 1;

  /**
   * The number of structural features of the '<em>Pattern Free Formula Parameter Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATTERN_FREE_FORMULA_PARAMETER_VALUE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.FutureLemmasImpl <em>Future Lemmas</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.FutureLemmasImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureLemmas()
   * @generated
   */
  int FUTURE_LEMMAS = 52;

  /**
   * The feature id for the '<em><b>L1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_LEMMAS__L1 = 0;

  /**
   * The feature id for the '<em><b>L2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_LEMMAS__L2 = 1;

  /**
   * The feature id for the '<em><b>L3</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_LEMMAS__L3 = 2;

  /**
   * The number of structural features of the '<em>Future Lemmas</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_LEMMAS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PastLemmasImpl <em>Past Lemmas</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PastLemmasImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastLemmas()
   * @generated
   */
  int PAST_LEMMAS = 53;

  /**
   * The feature id for the '<em><b>L4</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_LEMMAS__L4 = 0;

  /**
   * The feature id for the '<em><b>L5</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_LEMMAS__L5 = 1;

  /**
   * The feature id for the '<em><b>L6</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_LEMMAS__L6 = 2;

  /**
   * The feature id for the '<em><b>L7</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_LEMMAS__L7 = 3;

  /**
   * The number of structural features of the '<em>Past Lemmas</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_LEMMAS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedLemmasImpl <em>Derived Lemmas</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.DerivedLemmasImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedLemmas()
   * @generated
   */
  int DERIVED_LEMMAS = 54;

  /**
   * The feature id for the '<em><b>L8</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_LEMMAS__L8 = 0;

  /**
   * The feature id for the '<em><b>L9</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_LEMMAS__L9 = 1;

  /**
   * The number of structural features of the '<em>Derived Lemmas</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DERIVED_LEMMAS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.LemmaImpl <em>Lemma</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.LemmaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getLemma()
   * @generated
   */
  int LEMMA = 55;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__NAME = 0;

  /**
   * The feature id for the '<em><b>CVars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__CVARS = 1;

  /**
   * The feature id for the '<em><b>Fn Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__FN_VARS = 2;

  /**
   * The feature id for the '<em><b>Simple Fm Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__SIMPLE_FM_VARS = 3;

  /**
   * The feature id for the '<em><b>Ifm Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__IFM_VARS = 4;

  /**
   * The feature id for the '<em><b>Rfm Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__RFM_VARS = 5;

  /**
   * The feature id for the '<em><b>Init State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__INIT_STATE = 6;

  /**
   * The feature id for the '<em><b>Final State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__FINAL_STATE = 7;

  /**
   * The feature id for the '<em><b>Prem</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA__PREM = 8;

  /**
   * The number of structural features of the '<em>Lemma</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.LemmaPremiseFormulaImpl <em>Lemma Premise Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.LemmaPremiseFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getLemmaPremiseFormula()
   * @generated
   */
  int LEMMA_PREMISE_FORMULA = 56;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA_PREMISE_FORMULA__LEFT = 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA_PREMISE_FORMULA__RIGHT = 1;

  /**
   * The number of structural features of the '<em>Lemma Premise Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LEMMA_PREMISE_FORMULA_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.DisjunctionLemmaPremiseFormulaImpl <em>Disjunction Lemma Premise Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.DisjunctionLemmaPremiseFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDisjunctionLemmaPremiseFormula()
   * @generated
   */
  int DISJUNCTION_LEMMA_PREMISE_FORMULA = 57;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DISJUNCTION_LEMMA_PREMISE_FORMULA__LEFT = LEMMA_PREMISE_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DISJUNCTION_LEMMA_PREMISE_FORMULA__RIGHT = LEMMA_PREMISE_FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Disjunction Lemma Premise Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DISJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT = LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionLemmaPremiseFormulaImpl <em>Conjunction Lemma Premise Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionLemmaPremiseFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionLemmaPremiseFormula()
   * @generated
   */
  int CONJUNCTION_LEMMA_PREMISE_FORMULA = 58;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_LEMMA_PREMISE_FORMULA__LEFT = DISJUNCTION_LEMMA_PREMISE_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_LEMMA_PREMISE_FORMULA__RIGHT = DISJUNCTION_LEMMA_PREMISE_FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction Lemma Premise Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT = DISJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryLemmaPremiseFormulaImpl <em>Primary Lemma Premise Formula</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PrimaryLemmaPremiseFormulaImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryLemmaPremiseFormula()
   * @generated
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA = 59;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__LEFT = CONJUNCTION_LEMMA_PREMISE_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__RIGHT = CONJUNCTION_LEMMA_PREMISE_FORMULA__RIGHT;

  /**
   * The feature id for the '<em><b>Atomic</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__ATOMIC = CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Always Imp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__ALWAYS_IMP = CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Inst</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__INST = CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Nested Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA__NESTED_FORMULA = CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Primary Lemma Premise Formula</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRIMARY_LEMMA_PREMISE_FORMULA_FEATURE_COUNT = CONJUNCTION_LEMMA_PREMISE_FORMULA_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.AlwaysImplicationImpl <em>Always Implication</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.AlwaysImplicationImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAlwaysImplication()
   * @generated
   */
  int ALWAYS_IMPLICATION = 60;

  /**
   * The feature id for the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION__STATE = 0;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION__LEFT = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Always Implication</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.AlwaysImplicationParameterValueImpl <em>Always Implication Parameter Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.AlwaysImplicationParameterValueImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAlwaysImplicationParameterValue()
   * @generated
   */
  int ALWAYS_IMPLICATION_PARAMETER_VALUE = 61;

  /**
   * The feature id for the '<em><b>State</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION_PARAMETER_VALUE__STATE = 0;

  /**
   * The feature id for the '<em><b>Formula</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION_PARAMETER_VALUE__FORMULA = 1;

  /**
   * The number of structural features of the '<em>Always Implication Parameter Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALWAYS_IMPLICATION_PARAMETER_VALUE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternInstanceImpl <em>Past Extra Invariant Pattern Instance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternInstanceImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastExtraInvariantPatternInstance()
   * @generated
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE = 62;

  /**
   * The feature id for the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__PATTERN = 0;

  /**
   * The feature id for the '<em><b>CParams</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__CPARAMS = 1;

  /**
   * The feature id for the '<em><b>Fn Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FN_PARAMS = 2;

  /**
   * The feature id for the '<em><b>Fm Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FM_PARAMS = 3;

  /**
   * The feature id for the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__STATE = 4;

  /**
   * The number of structural features of the '<em>Past Extra Invariant Pattern Instance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_EXTRA_INVARIANT_PATTERN_INSTANCE_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionImpl <em>Conjunction</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.impl.ConjunctionImpl
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunction()
   * @generated
   */
  int CONJUNCTION = 63;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION__LEFT = CONJUNCTION_FORMULA__LEFT;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION__RIGHT = CONJUNCTION_FORMULA__RIGHT;

  /**
   * The number of structural features of the '<em>Conjunction</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONJUNCTION_FEATURE_COUNT = CONJUNCTION_FORMULA_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.EqPredicate <em>Eq Predicate</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.EqPredicate
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getEqPredicate()
   * @generated
   */
  int EQ_PREDICATE = 64;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.CompPredicate <em>Comp Predicate</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.CompPredicate
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getCompPredicate()
   * @generated
   */
  int COMP_PREDICATE = 65;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.AddOperator <em>Add Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.AddOperator
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAddOperator()
   * @generated
   */
  int ADD_OPERATOR = 66;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.MulOperator <em>Mul Operator</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.MulOperator
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getMulOperator()
   * @generated
   */
  int MUL_OPERATOR = 67;

  /**
   * The meta object id for the '{@link su.nsk.iae.rpl.rPL.UnMinus <em>Un Minus</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see su.nsk.iae.rpl.rPL.UnMinus
   * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUnMinus()
   * @generated
   */
  int UN_MINUS = 68;


  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see su.nsk.iae.rpl.rPL.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Model#getImports <em>Imports</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Imports</em>'.
   * @see su.nsk.iae.rpl.rPL.Model#getImports()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Imports();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Model#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see su.nsk.iae.rpl.rPL.Model#getElements()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Elements();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Import <em>Import</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Import</em>'.
   * @see su.nsk.iae.rpl.rPL.Import
   * @generated
   */
  EClass getImport();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.Import#getImportURI <em>Import URI</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Import URI</em>'.
   * @see su.nsk.iae.rpl.rPL.Import#getImportURI()
   * @see #getImport()
   * @generated
   */
  EAttribute getImport_ImportURI();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Element <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Element</em>'.
   * @see su.nsk.iae.rpl.rPL.Element
   * @generated
   */
  EClass getElement();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.BasicRequirementPattern <em>Basic Requirement Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Basic Requirement Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPattern
   * @generated
   */
  EClass getBasicRequirementPattern();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern <em>Derived Requirement Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Derived Requirement Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern
   * @generated
   */
  EClass getDerivedRequirementPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getName()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EAttribute getDerivedRequirementPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getCParams()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getSimpleFmParams <em>Simple Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simple Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getSimpleFmParams()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_SimpleFmParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getFmParams()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_FmParams();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getDefinition <em>Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Definition</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getDefinition()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_Definition();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getExtraInvPattern <em>Extra Inv Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Extra Inv Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getExtraInvPattern()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_ExtraInvPattern();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getLemmas <em>Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedRequirementPattern#getLemmas()
   * @see #getDerivedRequirementPattern()
   * @generated
   */
  EReference getDerivedRequirementPattern_Lemmas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see su.nsk.iae.rpl.rPL.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see su.nsk.iae.rpl.rPL.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.VarDeclaration#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see su.nsk.iae.rpl.rPL.VarDeclaration#getVars()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Vars();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ProgramVariable <em>Program Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program Variable</em>'.
   * @see su.nsk.iae.rpl.rPL.ProgramVariable
   * @generated
   */
  EClass getProgramVariable();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.UpdateStateVariable <em>Update State Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Update State Variable</em>'.
   * @see su.nsk.iae.rpl.rPL.UpdateStateVariable
   * @generated
   */
  EClass getUpdateStateVariable();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.UpdateStateVariable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.UpdateStateVariable#getName()
   * @see #getUpdateStateVariable()
   * @generated
   */
  EAttribute getUpdateStateVariable_Name();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConstantParameter <em>Constant Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant Parameter</em>'.
   * @see su.nsk.iae.rpl.rPL.ConstantParameter
   * @generated
   */
  EClass getConstantParameter();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FormulaParameter <em>Formula Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Formula Parameter</em>'.
   * @see su.nsk.iae.rpl.rPL.FormulaParameter
   * @generated
   */
  EClass getFormulaParameter();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.FormulaParameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.FormulaParameter#getName()
   * @see #getFormulaParameter()
   * @generated
   */
  EAttribute getFormulaParameter_Name();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.SimpleFormulaParameter <em>Simple Formula Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Formula Parameter</em>'.
   * @see su.nsk.iae.rpl.rPL.SimpleFormulaParameter
   * @generated
   */
  EClass getSimpleFormulaParameter();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.SimpleFormulaParameter#getArity <em>Arity</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Arity</em>'.
   * @see su.nsk.iae.rpl.rPL.SimpleFormulaParameter#getArity()
   * @see #getSimpleFormulaParameter()
   * @generated
   */
  EAttribute getSimpleFormulaParameter_Arity();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.RegularFormulaParameter <em>Regular Formula Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Regular Formula Parameter</em>'.
   * @see su.nsk.iae.rpl.rPL.RegularFormulaParameter
   * @generated
   */
  EClass getRegularFormulaParameter();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FunctionalParameter <em>Functional Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Functional Parameter</em>'.
   * @see su.nsk.iae.rpl.rPL.FunctionalParameter
   * @generated
   */
  EClass getFunctionalParameter();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.FunctionalParameter#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.FunctionalParameter#getName()
   * @see #getFunctionalParameter()
   * @generated
   */
  EAttribute getFunctionalParameter_Name();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Formula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.Formula
   * @generated
   */
  EClass getFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Formula#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.Formula#getLeft()
   * @see #getFormula()
   * @generated
   */
  EReference getFormula_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Formula#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.Formula#getRight()
   * @see #getFormula()
   * @generated
   */
  EReference getFormula_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConjunctionFormula <em>Conjunction Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.ConjunctionFormula
   * @generated
   */
  EClass getConjunctionFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PrimaryFormula <em>Primary Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryFormula
   * @generated
   */
  EClass getPrimaryFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryFormula#getPatternInst <em>Pattern Inst</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern Inst</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryFormula#getPatternInst()
   * @see #getPrimaryFormula()
   * @generated
   */
  EReference getPrimaryFormula_PatternInst();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryFormula#getNestedFormula <em>Nested Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryFormula#getNestedFormula()
   * @see #getPrimaryFormula()
   * @generated
   */
  EReference getPrimaryFormula_NestedFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance <em>Outer Requirement Pattern Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Outer Requirement Pattern Instance</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance
   * @generated
   */
  EClass getOuterRequirementPatternInstance();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getPattern()
   * @see #getOuterRequirementPatternInstance()
   * @generated
   */
  EReference getOuterRequirementPatternInstance_Pattern();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getCParams()
   * @see #getOuterRequirementPatternInstance()
   * @generated
   */
  EReference getOuterRequirementPatternInstance_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getSimpleFmParams <em>Simple Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simple Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getSimpleFmParams()
   * @see #getOuterRequirementPatternInstance()
   * @generated
   */
  EReference getOuterRequirementPatternInstance_SimpleFmParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPatternInstance#getFmParams()
   * @see #getOuterRequirementPatternInstance()
   * @generated
   */
  EReference getOuterRequirementPatternInstance_FmParams();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.OuterRequirementPattern <em>Outer Requirement Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Outer Requirement Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.OuterRequirementPattern
   * @generated
   */
  EClass getOuterRequirementPattern();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FormulaParameterValue <em>Formula Parameter Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Formula Parameter Value</em>'.
   * @see su.nsk.iae.rpl.rPL.FormulaParameterValue
   * @generated
   */
  EClass getFormulaParameterValue();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FormulaParameterValue#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see su.nsk.iae.rpl.rPL.FormulaParameterValue#getStates()
   * @see #getFormulaParameterValue()
   * @generated
   */
  EReference getFormulaParameterValue_States();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FormulaParameterValue#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.FormulaParameterValue#getFormula()
   * @see #getFormulaParameterValue()
   * @generated
   */
  EReference getFormulaParameterValue_Formula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.InnerFormula <em>Inner Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inner Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.InnerFormula
   * @generated
   */
  EClass getInnerFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.InnerFormula#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.InnerFormula#getLeft()
   * @see #getInnerFormula()
   * @generated
   */
  EReference getInnerFormula_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.InnerFormula#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.InnerFormula#getRight()
   * @see #getInnerFormula()
   * @generated
   */
  EReference getInnerFormula_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConjunctionInnerFormula <em>Conjunction Inner Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction Inner Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.ConjunctionInnerFormula
   * @generated
   */
  EClass getConjunctionInnerFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PrimaryInnerFormula <em>Primary Inner Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Inner Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryInnerFormula
   * @generated
   */
  EClass getPrimaryInnerFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getAtomic <em>Atomic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atomic</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getAtomic()
   * @see #getPrimaryInnerFormula()
   * @generated
   */
  EReference getPrimaryInnerFormula_Atomic();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getPatternInst <em>Pattern Inst</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pattern Inst</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getPatternInst()
   * @see #getPrimaryInnerFormula()
   * @generated
   */
  EReference getPrimaryInnerFormula_PatternInst();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getNestedFormula <em>Nested Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryInnerFormula#getNestedFormula()
   * @see #getPrimaryInnerFormula()
   * @generated
   */
  EReference getPrimaryInnerFormula_NestedFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.NegationFormula <em>Negation Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Negation Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.NegationFormula
   * @generated
   */
  EClass getNegationFormula();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.NegationFormula#isNeg <em>Neg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Neg</em>'.
   * @see su.nsk.iae.rpl.rPL.NegationFormula#isNeg()
   * @see #getNegationFormula()
   * @generated
   */
  EAttribute getNegationFormula_Neg();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.NegationFormula#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.NegationFormula#getRight()
   * @see #getNegationFormula()
   * @generated
   */
  EReference getNegationFormula_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.AtomicFormula <em>Atomic Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Atomic Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.AtomicFormula
   * @generated
   */
  EClass getAtomicFormula();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.AtomicFormula#getBoolLiteral <em>Bool Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Literal</em>'.
   * @see su.nsk.iae.rpl.rPL.AtomicFormula#getBoolLiteral()
   * @see #getAtomicFormula()
   * @generated
   */
  EAttribute getAtomicFormula_BoolLiteral();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.AtomicFormula#getBoolTerm <em>Bool Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bool Term</em>'.
   * @see su.nsk.iae.rpl.rPL.AtomicFormula#getBoolTerm()
   * @see #getAtomicFormula()
   * @generated
   */
  EReference getAtomicFormula_BoolTerm();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.AtomicFormula#getFmParam <em>Fm Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fm Param</em>'.
   * @see su.nsk.iae.rpl.rPL.AtomicFormula#getFmParam()
   * @see #getAtomicFormula()
   * @generated
   */
  EReference getAtomicFormula_FmParam();

  /**
   * Returns the meta object for the reference list '{@link su.nsk.iae.rpl.rPL.AtomicFormula#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>States</em>'.
   * @see su.nsk.iae.rpl.rPL.AtomicFormula#getStates()
   * @see #getAtomicFormula()
   * @generated
   */
  EReference getAtomicFormula_States();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance <em>Basic Requirement Pattern Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Basic Requirement Pattern Instance</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance
   * @generated
   */
  EClass getBasicRequirementPatternInstance();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getPattern()
   * @see #getBasicRequirementPatternInstance()
   * @generated
   */
  EReference getBasicRequirementPatternInstance_Pattern();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getCParams()
   * @see #getBasicRequirementPatternInstance()
   * @generated
   */
  EReference getBasicRequirementPatternInstance_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getFmParams()
   * @see #getBasicRequirementPatternInstance()
   * @generated
   */
  EReference getBasicRequirementPatternInstance_FmParams();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getFinState <em>Fin State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fin State</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getFinState()
   * @see #getBasicRequirementPatternInstance()
   * @generated
   */
  EReference getBasicRequirementPatternInstance_FinState();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getCurState <em>Cur State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Cur State</em>'.
   * @see su.nsk.iae.rpl.rPL.BasicRequirementPatternInstance#getCurState()
   * @see #getBasicRequirementPatternInstance()
   * @generated
   */
  EReference getBasicRequirementPatternInstance_CurState();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern <em>Future Requirement Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Future Requirement Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern
   * @generated
   */
  EClass getFutureRequirementPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern#getName()
   * @see #getFutureRequirementPattern()
   * @generated
   */
  EAttribute getFutureRequirementPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern#getCParams()
   * @see #getFutureRequirementPattern()
   * @generated
   */
  EReference getFutureRequirementPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern#getFmParams()
   * @see #getFutureRequirementPattern()
   * @generated
   */
  EReference getFutureRequirementPattern_FmParams();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern#getExtraInvPattern <em>Extra Inv Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Extra Inv Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern#getExtraInvPattern()
   * @see #getFutureRequirementPattern()
   * @generated
   */
  EReference getFutureRequirementPattern_ExtraInvPattern();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FutureRequirementPattern#getLessas <em>Lessas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lessas</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureRequirementPattern#getLessas()
   * @see #getFutureRequirementPattern()
   * @generated
   */
  EReference getFutureRequirementPattern_Lessas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern <em>Past Requirement Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Past Requirement Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern
   * @generated
   */
  EClass getPastRequirementPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern#getName()
   * @see #getPastRequirementPattern()
   * @generated
   */
  EAttribute getPastRequirementPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern#getCParams()
   * @see #getPastRequirementPattern()
   * @generated
   */
  EReference getPastRequirementPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern#getFmParams()
   * @see #getPastRequirementPattern()
   * @generated
   */
  EReference getPastRequirementPattern_FmParams();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern#getExtraInvPattern <em>Extra Inv Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Extra Inv Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern#getExtraInvPattern()
   * @see #getPastRequirementPattern()
   * @generated
   */
  EReference getPastRequirementPattern_ExtraInvPattern();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastRequirementPattern#getLemmas <em>Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.PastRequirementPattern#getLemmas()
   * @see #getPastRequirementPattern()
   * @generated
   */
  EReference getPastRequirementPattern_Lemmas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern <em>Future Extra Invariant Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Future Extra Invariant Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern
   * @generated
   */
  EClass getFutureExtraInvariantPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getName()
   * @see #getFutureExtraInvariantPattern()
   * @generated
   */
  EAttribute getFutureExtraInvariantPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getCParams()
   * @see #getFutureExtraInvariantPattern()
   * @generated
   */
  EReference getFutureExtraInvariantPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getFnParams <em>Fn Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fn Params</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getFnParams()
   * @see #getFutureExtraInvariantPattern()
   * @generated
   */
  EReference getFutureExtraInvariantPattern_FnParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getFmParams()
   * @see #getFutureExtraInvariantPattern()
   * @generated
   */
  EReference getFutureExtraInvariantPattern_FmParams();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getLemmas <em>Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureExtraInvariantPattern#getLemmas()
   * @see #getFutureExtraInvariantPattern()
   * @generated
   */
  EReference getFutureExtraInvariantPattern_Lemmas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern <em>Past Extra Invariant Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Past Extra Invariant Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern
   * @generated
   */
  EClass getPastExtraInvariantPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getName()
   * @see #getPastExtraInvariantPattern()
   * @generated
   */
  EAttribute getPastExtraInvariantPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getCParams()
   * @see #getPastExtraInvariantPattern()
   * @generated
   */
  EReference getPastExtraInvariantPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getFnParams <em>Fn Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fn Params</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getFnParams()
   * @see #getPastExtraInvariantPattern()
   * @generated
   */
  EReference getPastExtraInvariantPattern_FnParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getFmParams()
   * @see #getPastExtraInvariantPattern()
   * @generated
   */
  EReference getPastExtraInvariantPattern_FmParams();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getLemmas <em>Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPattern#getLemmas()
   * @see #getPastExtraInvariantPattern()
   * @generated
   */
  EReference getPastExtraInvariantPattern_Lemmas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern <em>Derived Extra Invariant Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Derived Extra Invariant Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern
   * @generated
   */
  EClass getDerivedExtraInvariantPattern();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getName()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EAttribute getDerivedExtraInvariantPattern_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getCParams()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EReference getDerivedExtraInvariantPattern_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getFnParams <em>Fn Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fn Params</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getFnParams()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EReference getDerivedExtraInvariantPattern_FnParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getSimpleFmParams <em>Simple Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simple Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getSimpleFmParams()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EReference getDerivedExtraInvariantPattern_SimpleFmParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getFmParams()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EReference getDerivedExtraInvariantPattern_FmParams();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getLemmas <em>Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedExtraInvariantPattern#getLemmas()
   * @see #getDerivedExtraInvariantPattern()
   * @generated
   */
  EReference getDerivedExtraInvariantPattern_Lemmas();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Term <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Term</em>'.
   * @see su.nsk.iae.rpl.rPL.Term
   * @generated
   */
  EClass getTerm();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Term#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.Term#getLeft()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Term#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.Term#getRight()
   * @see #getTerm()
   * @generated
   */
  EReference getTerm_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConjunctionTerm <em>Conjunction Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction Term</em>'.
   * @see su.nsk.iae.rpl.rPL.ConjunctionTerm
   * @generated
   */
  EClass getConjunctionTerm();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.NegationTerm <em>Negation Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Negation Term</em>'.
   * @see su.nsk.iae.rpl.rPL.NegationTerm
   * @generated
   */
  EClass getNegationTerm();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.EqTerm <em>Eq Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Eq Term</em>'.
   * @see su.nsk.iae.rpl.rPL.EqTerm
   * @generated
   */
  EClass getEqTerm();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.EqTerm#getEqPred <em>Eq Pred</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Eq Pred</em>'.
   * @see su.nsk.iae.rpl.rPL.EqTerm#getEqPred()
   * @see #getEqTerm()
   * @generated
   */
  EAttribute getEqTerm_EqPred();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.CompareTerm <em>Compare Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Compare Term</em>'.
   * @see su.nsk.iae.rpl.rPL.CompareTerm
   * @generated
   */
  EClass getCompareTerm();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.CompareTerm#getCompPred <em>Comp Pred</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Comp Pred</em>'.
   * @see su.nsk.iae.rpl.rPL.CompareTerm#getCompPred()
   * @see #getCompareTerm()
   * @generated
   */
  EAttribute getCompareTerm_CompPred();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.AddTerm <em>Add Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Term</em>'.
   * @see su.nsk.iae.rpl.rPL.AddTerm
   * @generated
   */
  EClass getAddTerm();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.AddTerm#getAddOp <em>Add Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Add Op</em>'.
   * @see su.nsk.iae.rpl.rPL.AddTerm#getAddOp()
   * @see #getAddTerm()
   * @generated
   */
  EAttribute getAddTerm_AddOp();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.MulTerm <em>Mul Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mul Term</em>'.
   * @see su.nsk.iae.rpl.rPL.MulTerm
   * @generated
   */
  EClass getMulTerm();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.MulTerm#getMulOp <em>Mul Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Mul Op</em>'.
   * @see su.nsk.iae.rpl.rPL.MulTerm#getMulOp()
   * @see #getMulTerm()
   * @generated
   */
  EAttribute getMulTerm_MulOp();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PowerTerm <em>Power Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Power Term</em>'.
   * @see su.nsk.iae.rpl.rPL.PowerTerm
   * @generated
   */
  EClass getPowerTerm();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.UnaryTerm <em>Unary Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Term</em>'.
   * @see su.nsk.iae.rpl.rPL.UnaryTerm
   * @generated
   */
  EClass getUnaryTerm();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.UnaryTerm#getUnOp <em>Un Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Un Op</em>'.
   * @see su.nsk.iae.rpl.rPL.UnaryTerm#getUnOp()
   * @see #getUnaryTerm()
   * @generated
   */
  EAttribute getUnaryTerm_UnOp();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PrimaryTerm <em>Primary Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Term</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm
   * @generated
   */
  EClass getPrimaryTerm();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryTerm#getConst <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Const</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm#getConst()
   * @see #getPrimaryTerm()
   * @generated
   */
  EReference getPrimaryTerm_Const();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.PrimaryTerm#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm#getVariable()
   * @see #getPrimaryTerm()
   * @generated
   */
  EReference getPrimaryTerm_Variable();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.PrimaryTerm#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>State</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm#getState()
   * @see #getPrimaryTerm()
   * @generated
   */
  EReference getPrimaryTerm_State();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryTerm#getFunApp <em>Fun App</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fun App</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm#getFunApp()
   * @see #getPrimaryTerm()
   * @generated
   */
  EReference getPrimaryTerm_FunApp();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryTerm#getNestedTerm <em>Nested Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Term</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryTerm#getNestedTerm()
   * @see #getPrimaryTerm()
   * @generated
   */
  EReference getPrimaryTerm_NestedTerm();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FunApplication <em>Fun Application</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fun Application</em>'.
   * @see su.nsk.iae.rpl.rPL.FunApplication
   * @generated
   */
  EClass getFunApplication();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.FunApplication#getFnParam <em>Fn Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fn Param</em>'.
   * @see su.nsk.iae.rpl.rPL.FunApplication#getFnParam()
   * @see #getFunApplication()
   * @generated
   */
  EReference getFunApplication_FnParam();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.FunApplication#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>State</em>'.
   * @see su.nsk.iae.rpl.rPL.FunApplication#getState()
   * @see #getFunApplication()
   * @generated
   */
  EReference getFunApplication_State();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Constant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant</em>'.
   * @see su.nsk.iae.rpl.rPL.Constant
   * @generated
   */
  EClass getConstant();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Constant#getNum <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Num</em>'.
   * @see su.nsk.iae.rpl.rPL.Constant#getNum()
   * @see #getConstant()
   * @generated
   */
  EReference getConstant_Num();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.Constant#getBool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool</em>'.
   * @see su.nsk.iae.rpl.rPL.Constant#getBool()
   * @see #getConstant()
   * @generated
   */
  EAttribute getConstant_Bool();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.NumericLiteral <em>Numeric Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Numeric Literal</em>'.
   * @see su.nsk.iae.rpl.rPL.NumericLiteral
   * @generated
   */
  EClass getNumericLiteral();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.NumericLiteral#isSig <em>Sig</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sig</em>'.
   * @see su.nsk.iae.rpl.rPL.NumericLiteral#isSig()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_Sig();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.NumericLiteral#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see su.nsk.iae.rpl.rPL.NumericLiteral#getValue()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_Value();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.IntegerLiteral <em>Integer Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Integer Literal</em>'.
   * @see su.nsk.iae.rpl.rPL.IntegerLiteral
   * @generated
   */
  EClass getIntegerLiteral();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.RealLiteral <em>Real Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Real Literal</em>'.
   * @see su.nsk.iae.rpl.rPL.RealLiteral
   * @generated
   */
  EClass getRealLiteral();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PatternFreeFormula <em>Pattern Free Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Free Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormula
   * @generated
   */
  EClass getPatternFreeFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PatternFreeFormula#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormula#getLeft()
   * @see #getPatternFreeFormula()
   * @generated
   */
  EReference getPatternFreeFormula_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PatternFreeFormula#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormula#getRight()
   * @see #getPatternFreeFormula()
   * @generated
   */
  EReference getPatternFreeFormula_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConjunctionPatternFreeFormula <em>Conjunction Pattern Free Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction Pattern Free Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.ConjunctionPatternFreeFormula
   * @generated
   */
  EClass getConjunctionPatternFreeFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula <em>Primary Pattern Free Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Pattern Free Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula
   * @generated
   */
  EClass getPrimaryPatternFreeFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula#getAtomic <em>Atomic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atomic</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula#getAtomic()
   * @see #getPrimaryPatternFreeFormula()
   * @generated
   */
  EReference getPrimaryPatternFreeFormula_Atomic();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula#getNestedFormula <em>Nested Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryPatternFreeFormula#getNestedFormula()
   * @see #getPrimaryPatternFreeFormula()
   * @generated
   */
  EReference getPrimaryPatternFreeFormula_NestedFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Requirement <em>Requirement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Requirement</em>'.
   * @see su.nsk.iae.rpl.rPL.Requirement
   * @generated
   */
  EClass getRequirement();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.Requirement#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.Requirement#getName()
   * @see #getRequirement()
   * @generated
   */
  EAttribute getRequirement_Name();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.Requirement#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.Requirement#getPattern()
   * @see #getRequirement()
   * @generated
   */
  EReference getRequirement_Pattern();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Requirement#getExtraInv <em>Extra Inv</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Extra Inv</em>'.
   * @see su.nsk.iae.rpl.rPL.Requirement#getExtraInv()
   * @see #getRequirement()
   * @generated
   */
  EReference getRequirement_ExtraInv();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ExtraInvariant <em>Extra Invariant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Extra Invariant</em>'.
   * @see su.nsk.iae.rpl.rPL.ExtraInvariant
   * @generated
   */
  EClass getExtraInvariant();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.ExtraInvariant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.ExtraInvariant#getName()
   * @see #getExtraInvariant()
   * @generated
   */
  EAttribute getExtraInvariant_Name();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.ExtraInvariant#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.ExtraInvariant#getPattern()
   * @see #getExtraInvariant()
   * @generated
   */
  EReference getExtraInvariant_Pattern();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue <em>Pattern Free Formula Parameter Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pattern Free Formula Parameter Value</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue
   * @generated
   */
  EClass getPatternFreeFormulaParameterValue();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue#getStates <em>States</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>States</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue#getStates()
   * @see #getPatternFreeFormulaParameterValue()
   * @generated
   */
  EReference getPatternFreeFormulaParameterValue_States();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PatternFreeFormulaParameterValue#getFormula()
   * @see #getPatternFreeFormulaParameterValue()
   * @generated
   */
  EReference getPatternFreeFormulaParameterValue_Formula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.FutureLemmas <em>Future Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Future Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureLemmas
   * @generated
   */
  EClass getFutureLemmas();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FutureLemmas#getL1 <em>L1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L1</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureLemmas#getL1()
   * @see #getFutureLemmas()
   * @generated
   */
  EReference getFutureLemmas_L1();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FutureLemmas#getL2 <em>L2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L2</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureLemmas#getL2()
   * @see #getFutureLemmas()
   * @generated
   */
  EReference getFutureLemmas_L2();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.FutureLemmas#getL3 <em>L3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L3</em>'.
   * @see su.nsk.iae.rpl.rPL.FutureLemmas#getL3()
   * @see #getFutureLemmas()
   * @generated
   */
  EReference getFutureLemmas_L3();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PastLemmas <em>Past Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Past Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.PastLemmas
   * @generated
   */
  EClass getPastLemmas();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastLemmas#getL4 <em>L4</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L4</em>'.
   * @see su.nsk.iae.rpl.rPL.PastLemmas#getL4()
   * @see #getPastLemmas()
   * @generated
   */
  EReference getPastLemmas_L4();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastLemmas#getL5 <em>L5</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L5</em>'.
   * @see su.nsk.iae.rpl.rPL.PastLemmas#getL5()
   * @see #getPastLemmas()
   * @generated
   */
  EReference getPastLemmas_L5();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastLemmas#getL6 <em>L6</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L6</em>'.
   * @see su.nsk.iae.rpl.rPL.PastLemmas#getL6()
   * @see #getPastLemmas()
   * @generated
   */
  EReference getPastLemmas_L6();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PastLemmas#getL7 <em>L7</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L7</em>'.
   * @see su.nsk.iae.rpl.rPL.PastLemmas#getL7()
   * @see #getPastLemmas()
   * @generated
   */
  EReference getPastLemmas_L7();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.DerivedLemmas <em>Derived Lemmas</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Derived Lemmas</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedLemmas
   * @generated
   */
  EClass getDerivedLemmas();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.DerivedLemmas#getL8 <em>L8</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L8</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedLemmas#getL8()
   * @see #getDerivedLemmas()
   * @generated
   */
  EReference getDerivedLemmas_L8();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.DerivedLemmas#getL9 <em>L9</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>L9</em>'.
   * @see su.nsk.iae.rpl.rPL.DerivedLemmas#getL9()
   * @see #getDerivedLemmas()
   * @generated
   */
  EReference getDerivedLemmas_L9();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Lemma <em>Lemma</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lemma</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma
   * @generated
   */
  EClass getLemma();

  /**
   * Returns the meta object for the attribute '{@link su.nsk.iae.rpl.rPL.Lemma#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getName()
   * @see #getLemma()
   * @generated
   */
  EAttribute getLemma_Name();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Lemma#getCVars <em>CVars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CVars</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getCVars()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_CVars();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Lemma#getFnVars <em>Fn Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fn Vars</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getFnVars()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_FnVars();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Lemma#getSimpleFmVars <em>Simple Fm Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Simple Fm Vars</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getSimpleFmVars()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_SimpleFmVars();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Lemma#getIfmVars <em>Ifm Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ifm Vars</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getIfmVars()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_IfmVars();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.Lemma#getRfmVars <em>Rfm Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rfm Vars</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getRfmVars()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_RfmVars();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Lemma#getInitState <em>Init State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Init State</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getInitState()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_InitState();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Lemma#getFinalState <em>Final State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Final State</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getFinalState()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_FinalState();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.Lemma#getPrem <em>Prem</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Prem</em>'.
   * @see su.nsk.iae.rpl.rPL.Lemma#getPrem()
   * @see #getLemma()
   * @generated
   */
  EReference getLemma_Prem();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.LemmaPremiseFormula <em>Lemma Premise Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Lemma Premise Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.LemmaPremiseFormula
   * @generated
   */
  EClass getLemmaPremiseFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.LemmaPremiseFormula#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.LemmaPremiseFormula#getLeft()
   * @see #getLemmaPremiseFormula()
   * @generated
   */
  EReference getLemmaPremiseFormula_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.LemmaPremiseFormula#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.LemmaPremiseFormula#getRight()
   * @see #getLemmaPremiseFormula()
   * @generated
   */
  EReference getLemmaPremiseFormula_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.DisjunctionLemmaPremiseFormula <em>Disjunction Lemma Premise Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Disjunction Lemma Premise Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.DisjunctionLemmaPremiseFormula
   * @generated
   */
  EClass getDisjunctionLemmaPremiseFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.ConjunctionLemmaPremiseFormula <em>Conjunction Lemma Premise Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction Lemma Premise Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.ConjunctionLemmaPremiseFormula
   * @generated
   */
  EClass getConjunctionLemmaPremiseFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula <em>Primary Lemma Premise Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Primary Lemma Premise Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula
   * @generated
   */
  EClass getPrimaryLemmaPremiseFormula();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getAtomic <em>Atomic</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atomic</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getAtomic()
   * @see #getPrimaryLemmaPremiseFormula()
   * @generated
   */
  EReference getPrimaryLemmaPremiseFormula_Atomic();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getAlwaysImp <em>Always Imp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Always Imp</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getAlwaysImp()
   * @see #getPrimaryLemmaPremiseFormula()
   * @generated
   */
  EReference getPrimaryLemmaPremiseFormula_AlwaysImp();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getInst <em>Inst</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Inst</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getInst()
   * @see #getPrimaryLemmaPremiseFormula()
   * @generated
   */
  EReference getPrimaryLemmaPremiseFormula_Inst();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getNestedFormula <em>Nested Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Nested Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.PrimaryLemmaPremiseFormula#getNestedFormula()
   * @see #getPrimaryLemmaPremiseFormula()
   * @generated
   */
  EReference getPrimaryLemmaPremiseFormula_NestedFormula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.AlwaysImplication <em>Always Implication</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Always Implication</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplication
   * @generated
   */
  EClass getAlwaysImplication();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.AlwaysImplication#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>State</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplication#getState()
   * @see #getAlwaysImplication()
   * @generated
   */
  EReference getAlwaysImplication_State();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.AlwaysImplication#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplication#getLeft()
   * @see #getAlwaysImplication()
   * @generated
   */
  EReference getAlwaysImplication_Left();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.AlwaysImplication#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplication#getRight()
   * @see #getAlwaysImplication()
   * @generated
   */
  EReference getAlwaysImplication_Right();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue <em>Always Implication Parameter Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Always Implication Parameter Value</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue
   * @generated
   */
  EClass getAlwaysImplicationParameterValue();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>State</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue#getState()
   * @see #getAlwaysImplicationParameterValue()
   * @generated
   */
  EReference getAlwaysImplicationParameterValue_State();

  /**
   * Returns the meta object for the containment reference '{@link su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue#getFormula <em>Formula</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formula</em>'.
   * @see su.nsk.iae.rpl.rPL.AlwaysImplicationParameterValue#getFormula()
   * @see #getAlwaysImplicationParameterValue()
   * @generated
   */
  EReference getAlwaysImplicationParameterValue_Formula();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance <em>Past Extra Invariant Pattern Instance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Past Extra Invariant Pattern Instance</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance
   * @generated
   */
  EClass getPastExtraInvariantPatternInstance();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getPattern <em>Pattern</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Pattern</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getPattern()
   * @see #getPastExtraInvariantPatternInstance()
   * @generated
   */
  EReference getPastExtraInvariantPatternInstance_Pattern();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getCParams <em>CParams</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>CParams</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getCParams()
   * @see #getPastExtraInvariantPatternInstance()
   * @generated
   */
  EReference getPastExtraInvariantPatternInstance_CParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFnParams <em>Fn Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fn Params</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFnParams()
   * @see #getPastExtraInvariantPatternInstance()
   * @generated
   */
  EReference getPastExtraInvariantPatternInstance_FnParams();

  /**
   * Returns the meta object for the containment reference list '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFmParams <em>Fm Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fm Params</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFmParams()
   * @see #getPastExtraInvariantPatternInstance()
   * @generated
   */
  EReference getPastExtraInvariantPatternInstance_FmParams();

  /**
   * Returns the meta object for the reference '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getState <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>State</em>'.
   * @see su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getState()
   * @see #getPastExtraInvariantPatternInstance()
   * @generated
   */
  EReference getPastExtraInvariantPatternInstance_State();

  /**
   * Returns the meta object for class '{@link su.nsk.iae.rpl.rPL.Conjunction <em>Conjunction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conjunction</em>'.
   * @see su.nsk.iae.rpl.rPL.Conjunction
   * @generated
   */
  EClass getConjunction();

  /**
   * Returns the meta object for enum '{@link su.nsk.iae.rpl.rPL.EqPredicate <em>Eq Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Eq Predicate</em>'.
   * @see su.nsk.iae.rpl.rPL.EqPredicate
   * @generated
   */
  EEnum getEqPredicate();

  /**
   * Returns the meta object for enum '{@link su.nsk.iae.rpl.rPL.CompPredicate <em>Comp Predicate</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Comp Predicate</em>'.
   * @see su.nsk.iae.rpl.rPL.CompPredicate
   * @generated
   */
  EEnum getCompPredicate();

  /**
   * Returns the meta object for enum '{@link su.nsk.iae.rpl.rPL.AddOperator <em>Add Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Add Operator</em>'.
   * @see su.nsk.iae.rpl.rPL.AddOperator
   * @generated
   */
  EEnum getAddOperator();

  /**
   * Returns the meta object for enum '{@link su.nsk.iae.rpl.rPL.MulOperator <em>Mul Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Mul Operator</em>'.
   * @see su.nsk.iae.rpl.rPL.MulOperator
   * @generated
   */
  EEnum getMulOperator();

  /**
   * Returns the meta object for enum '{@link su.nsk.iae.rpl.rPL.UnMinus <em>Un Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Un Minus</em>'.
   * @see su.nsk.iae.rpl.rPL.UnMinus
   * @generated
   */
  EEnum getUnMinus();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  RPLFactory getRPLFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ModelImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Imports</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__IMPORTS = eINSTANCE.getModel_Imports();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ELEMENTS = eINSTANCE.getModel_Elements();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ImportImpl <em>Import</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ImportImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getImport()
     * @generated
     */
    EClass IMPORT = eINSTANCE.getImport();

    /**
     * The meta object literal for the '<em><b>Import URI</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IMPORT__IMPORT_URI = eINSTANCE.getImport_ImportURI();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ElementImpl <em>Element</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ElementImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getElement()
     * @generated
     */
    EClass ELEMENT = eINSTANCE.getElement();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternImpl <em>Basic Requirement Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getBasicRequirementPattern()
     * @generated
     */
    EClass BASIC_REQUIREMENT_PATTERN = eINSTANCE.getBasicRequirementPattern();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl <em>Derived Requirement Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.DerivedRequirementPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedRequirementPattern()
     * @generated
     */
    EClass DERIVED_REQUIREMENT_PATTERN = eINSTANCE.getDerivedRequirementPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DERIVED_REQUIREMENT_PATTERN__NAME = eINSTANCE.getDerivedRequirementPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__CPARAMS = eINSTANCE.getDerivedRequirementPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Simple Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__SIMPLE_FM_PARAMS = eINSTANCE.getDerivedRequirementPattern_SimpleFmParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__FM_PARAMS = eINSTANCE.getDerivedRequirementPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Definition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__DEFINITION = eINSTANCE.getDerivedRequirementPattern_Definition();

    /**
     * The meta object literal for the '<em><b>Extra Inv Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = eINSTANCE.getDerivedRequirementPattern_ExtraInvPattern();

    /**
     * The meta object literal for the '<em><b>Lemmas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_REQUIREMENT_PATTERN__LEMMAS = eINSTANCE.getDerivedRequirementPattern_Lemmas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.VariableImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.VarDeclarationImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VARS = eINSTANCE.getVarDeclaration_Vars();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ProgramVariableImpl <em>Program Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ProgramVariableImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getProgramVariable()
     * @generated
     */
    EClass PROGRAM_VARIABLE = eINSTANCE.getProgramVariable();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.UpdateStateVariableImpl <em>Update State Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.UpdateStateVariableImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUpdateStateVariable()
     * @generated
     */
    EClass UPDATE_STATE_VARIABLE = eINSTANCE.getUpdateStateVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UPDATE_STATE_VARIABLE__NAME = eINSTANCE.getUpdateStateVariable_Name();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConstantParameterImpl <em>Constant Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConstantParameterImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConstantParameter()
     * @generated
     */
    EClass CONSTANT_PARAMETER = eINSTANCE.getConstantParameter();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaParameterImpl <em>Formula Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FormulaParameterImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormulaParameter()
     * @generated
     */
    EClass FORMULA_PARAMETER = eINSTANCE.getFormulaParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FORMULA_PARAMETER__NAME = eINSTANCE.getFormulaParameter_Name();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.SimpleFormulaParameterImpl <em>Simple Formula Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.SimpleFormulaParameterImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getSimpleFormulaParameter()
     * @generated
     */
    EClass SIMPLE_FORMULA_PARAMETER = eINSTANCE.getSimpleFormulaParameter();

    /**
     * The meta object literal for the '<em><b>Arity</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_FORMULA_PARAMETER__ARITY = eINSTANCE.getSimpleFormulaParameter_Arity();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.RegularFormulaParameterImpl <em>Regular Formula Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.RegularFormulaParameterImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRegularFormulaParameter()
     * @generated
     */
    EClass REGULAR_FORMULA_PARAMETER = eINSTANCE.getRegularFormulaParameter();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FunctionalParameterImpl <em>Functional Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FunctionalParameterImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFunctionalParameter()
     * @generated
     */
    EClass FUNCTIONAL_PARAMETER = eINSTANCE.getFunctionalParameter();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTIONAL_PARAMETER__NAME = eINSTANCE.getFunctionalParameter_Name();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaImpl <em>Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormula()
     * @generated
     */
    EClass FORMULA = eINSTANCE.getFormula();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULA__LEFT = eINSTANCE.getFormula_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULA__RIGHT = eINSTANCE.getFormula_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionFormulaImpl <em>Conjunction Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionFormula()
     * @generated
     */
    EClass CONJUNCTION_FORMULA = eINSTANCE.getConjunctionFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryFormulaImpl <em>Primary Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PrimaryFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryFormula()
     * @generated
     */
    EClass PRIMARY_FORMULA = eINSTANCE.getPrimaryFormula();

    /**
     * The meta object literal for the '<em><b>Pattern Inst</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_FORMULA__PATTERN_INST = eINSTANCE.getPrimaryFormula_PatternInst();

    /**
     * The meta object literal for the '<em><b>Nested Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_FORMULA__NESTED_FORMULA = eINSTANCE.getPrimaryFormula_NestedFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternInstanceImpl <em>Outer Requirement Pattern Instance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternInstanceImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getOuterRequirementPatternInstance()
     * @generated
     */
    EClass OUTER_REQUIREMENT_PATTERN_INSTANCE = eINSTANCE.getOuterRequirementPatternInstance();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTER_REQUIREMENT_PATTERN_INSTANCE__PATTERN = eINSTANCE.getOuterRequirementPatternInstance_Pattern();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTER_REQUIREMENT_PATTERN_INSTANCE__CPARAMS = eINSTANCE.getOuterRequirementPatternInstance_CParams();

    /**
     * The meta object literal for the '<em><b>Simple Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTER_REQUIREMENT_PATTERN_INSTANCE__SIMPLE_FM_PARAMS = eINSTANCE.getOuterRequirementPatternInstance_SimpleFmParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OUTER_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS = eINSTANCE.getOuterRequirementPatternInstance_FmParams();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternImpl <em>Outer Requirement Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.OuterRequirementPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getOuterRequirementPattern()
     * @generated
     */
    EClass OUTER_REQUIREMENT_PATTERN = eINSTANCE.getOuterRequirementPattern();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FormulaParameterValueImpl <em>Formula Parameter Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FormulaParameterValueImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFormulaParameterValue()
     * @generated
     */
    EClass FORMULA_PARAMETER_VALUE = eINSTANCE.getFormulaParameterValue();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULA_PARAMETER_VALUE__STATES = eINSTANCE.getFormulaParameterValue_States();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMULA_PARAMETER_VALUE__FORMULA = eINSTANCE.getFormulaParameterValue_Formula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.InnerFormulaImpl <em>Inner Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.InnerFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getInnerFormula()
     * @generated
     */
    EClass INNER_FORMULA = eINSTANCE.getInnerFormula();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INNER_FORMULA__LEFT = eINSTANCE.getInnerFormula_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INNER_FORMULA__RIGHT = eINSTANCE.getInnerFormula_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionInnerFormulaImpl <em>Conjunction Inner Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionInnerFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionInnerFormula()
     * @generated
     */
    EClass CONJUNCTION_INNER_FORMULA = eINSTANCE.getConjunctionInnerFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryInnerFormulaImpl <em>Primary Inner Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PrimaryInnerFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryInnerFormula()
     * @generated
     */
    EClass PRIMARY_INNER_FORMULA = eINSTANCE.getPrimaryInnerFormula();

    /**
     * The meta object literal for the '<em><b>Atomic</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_INNER_FORMULA__ATOMIC = eINSTANCE.getPrimaryInnerFormula_Atomic();

    /**
     * The meta object literal for the '<em><b>Pattern Inst</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_INNER_FORMULA__PATTERN_INST = eINSTANCE.getPrimaryInnerFormula_PatternInst();

    /**
     * The meta object literal for the '<em><b>Nested Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_INNER_FORMULA__NESTED_FORMULA = eINSTANCE.getPrimaryInnerFormula_NestedFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.NegationFormulaImpl <em>Negation Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.NegationFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNegationFormula()
     * @generated
     */
    EClass NEGATION_FORMULA = eINSTANCE.getNegationFormula();

    /**
     * The meta object literal for the '<em><b>Neg</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NEGATION_FORMULA__NEG = eINSTANCE.getNegationFormula_Neg();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NEGATION_FORMULA__RIGHT = eINSTANCE.getNegationFormula_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.AtomicFormulaImpl <em>Atomic Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.AtomicFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAtomicFormula()
     * @generated
     */
    EClass ATOMIC_FORMULA = eINSTANCE.getAtomicFormula();

    /**
     * The meta object literal for the '<em><b>Bool Literal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ATOMIC_FORMULA__BOOL_LITERAL = eINSTANCE.getAtomicFormula_BoolLiteral();

    /**
     * The meta object literal for the '<em><b>Bool Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOMIC_FORMULA__BOOL_TERM = eINSTANCE.getAtomicFormula_BoolTerm();

    /**
     * The meta object literal for the '<em><b>Fm Param</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOMIC_FORMULA__FM_PARAM = eINSTANCE.getAtomicFormula_FmParam();

    /**
     * The meta object literal for the '<em><b>States</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ATOMIC_FORMULA__STATES = eINSTANCE.getAtomicFormula_States();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternInstanceImpl <em>Basic Requirement Pattern Instance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.BasicRequirementPatternInstanceImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getBasicRequirementPatternInstance()
     * @generated
     */
    EClass BASIC_REQUIREMENT_PATTERN_INSTANCE = eINSTANCE.getBasicRequirementPatternInstance();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASIC_REQUIREMENT_PATTERN_INSTANCE__PATTERN = eINSTANCE.getBasicRequirementPatternInstance_Pattern();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASIC_REQUIREMENT_PATTERN_INSTANCE__CPARAMS = eINSTANCE.getBasicRequirementPatternInstance_CParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASIC_REQUIREMENT_PATTERN_INSTANCE__FM_PARAMS = eINSTANCE.getBasicRequirementPatternInstance_FmParams();

    /**
     * The meta object literal for the '<em><b>Fin State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASIC_REQUIREMENT_PATTERN_INSTANCE__FIN_STATE = eINSTANCE.getBasicRequirementPatternInstance_FinState();

    /**
     * The meta object literal for the '<em><b>Cur State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BASIC_REQUIREMENT_PATTERN_INSTANCE__CUR_STATE = eINSTANCE.getBasicRequirementPatternInstance_CurState();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FutureRequirementPatternImpl <em>Future Requirement Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FutureRequirementPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureRequirementPattern()
     * @generated
     */
    EClass FUTURE_REQUIREMENT_PATTERN = eINSTANCE.getFutureRequirementPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUTURE_REQUIREMENT_PATTERN__NAME = eINSTANCE.getFutureRequirementPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_REQUIREMENT_PATTERN__CPARAMS = eINSTANCE.getFutureRequirementPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_REQUIREMENT_PATTERN__FM_PARAMS = eINSTANCE.getFutureRequirementPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Extra Inv Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = eINSTANCE.getFutureRequirementPattern_ExtraInvPattern();

    /**
     * The meta object literal for the '<em><b>Lessas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_REQUIREMENT_PATTERN__LESSAS = eINSTANCE.getFutureRequirementPattern_Lessas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PastRequirementPatternImpl <em>Past Requirement Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PastRequirementPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastRequirementPattern()
     * @generated
     */
    EClass PAST_REQUIREMENT_PATTERN = eINSTANCE.getPastRequirementPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PAST_REQUIREMENT_PATTERN__NAME = eINSTANCE.getPastRequirementPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_REQUIREMENT_PATTERN__CPARAMS = eINSTANCE.getPastRequirementPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_REQUIREMENT_PATTERN__FM_PARAMS = eINSTANCE.getPastRequirementPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Extra Inv Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_REQUIREMENT_PATTERN__EXTRA_INV_PATTERN = eINSTANCE.getPastRequirementPattern_ExtraInvPattern();

    /**
     * The meta object literal for the '<em><b>Lemmas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_REQUIREMENT_PATTERN__LEMMAS = eINSTANCE.getPastRequirementPattern_Lemmas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FutureExtraInvariantPatternImpl <em>Future Extra Invariant Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FutureExtraInvariantPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureExtraInvariantPattern()
     * @generated
     */
    EClass FUTURE_EXTRA_INVARIANT_PATTERN = eINSTANCE.getFutureExtraInvariantPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUTURE_EXTRA_INVARIANT_PATTERN__NAME = eINSTANCE.getFutureExtraInvariantPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_EXTRA_INVARIANT_PATTERN__CPARAMS = eINSTANCE.getFutureExtraInvariantPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Fn Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_EXTRA_INVARIANT_PATTERN__FN_PARAMS = eINSTANCE.getFutureExtraInvariantPattern_FnParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_EXTRA_INVARIANT_PATTERN__FM_PARAMS = eINSTANCE.getFutureExtraInvariantPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Lemmas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_EXTRA_INVARIANT_PATTERN__LEMMAS = eINSTANCE.getFutureExtraInvariantPattern_Lemmas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternImpl <em>Past Extra Invariant Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastExtraInvariantPattern()
     * @generated
     */
    EClass PAST_EXTRA_INVARIANT_PATTERN = eINSTANCE.getPastExtraInvariantPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PAST_EXTRA_INVARIANT_PATTERN__NAME = eINSTANCE.getPastExtraInvariantPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN__CPARAMS = eINSTANCE.getPastExtraInvariantPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Fn Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN__FN_PARAMS = eINSTANCE.getPastExtraInvariantPattern_FnParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN__FM_PARAMS = eINSTANCE.getPastExtraInvariantPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Lemmas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN__LEMMAS = eINSTANCE.getPastExtraInvariantPattern_Lemmas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl <em>Derived Extra Invariant Pattern</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.DerivedExtraInvariantPatternImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedExtraInvariantPattern()
     * @generated
     */
    EClass DERIVED_EXTRA_INVARIANT_PATTERN = eINSTANCE.getDerivedExtraInvariantPattern();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DERIVED_EXTRA_INVARIANT_PATTERN__NAME = eINSTANCE.getDerivedExtraInvariantPattern_Name();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_EXTRA_INVARIANT_PATTERN__CPARAMS = eINSTANCE.getDerivedExtraInvariantPattern_CParams();

    /**
     * The meta object literal for the '<em><b>Fn Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_EXTRA_INVARIANT_PATTERN__FN_PARAMS = eINSTANCE.getDerivedExtraInvariantPattern_FnParams();

    /**
     * The meta object literal for the '<em><b>Simple Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_EXTRA_INVARIANT_PATTERN__SIMPLE_FM_PARAMS = eINSTANCE.getDerivedExtraInvariantPattern_SimpleFmParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_EXTRA_INVARIANT_PATTERN__FM_PARAMS = eINSTANCE.getDerivedExtraInvariantPattern_FmParams();

    /**
     * The meta object literal for the '<em><b>Lemmas</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_EXTRA_INVARIANT_PATTERN__LEMMAS = eINSTANCE.getDerivedExtraInvariantPattern_Lemmas();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.TermImpl <em>Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.TermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getTerm()
     * @generated
     */
    EClass TERM = eINSTANCE.getTerm();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__LEFT = eINSTANCE.getTerm_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__RIGHT = eINSTANCE.getTerm_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionTermImpl <em>Conjunction Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionTerm()
     * @generated
     */
    EClass CONJUNCTION_TERM = eINSTANCE.getConjunctionTerm();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.NegationTermImpl <em>Negation Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.NegationTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNegationTerm()
     * @generated
     */
    EClass NEGATION_TERM = eINSTANCE.getNegationTerm();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.EqTermImpl <em>Eq Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.EqTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getEqTerm()
     * @generated
     */
    EClass EQ_TERM = eINSTANCE.getEqTerm();

    /**
     * The meta object literal for the '<em><b>Eq Pred</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQ_TERM__EQ_PRED = eINSTANCE.getEqTerm_EqPred();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.CompareTermImpl <em>Compare Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.CompareTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getCompareTerm()
     * @generated
     */
    EClass COMPARE_TERM = eINSTANCE.getCompareTerm();

    /**
     * The meta object literal for the '<em><b>Comp Pred</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARE_TERM__COMP_PRED = eINSTANCE.getCompareTerm_CompPred();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.AddTermImpl <em>Add Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.AddTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAddTerm()
     * @generated
     */
    EClass ADD_TERM = eINSTANCE.getAddTerm();

    /**
     * The meta object literal for the '<em><b>Add Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADD_TERM__ADD_OP = eINSTANCE.getAddTerm_AddOp();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.MulTermImpl <em>Mul Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.MulTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getMulTerm()
     * @generated
     */
    EClass MUL_TERM = eINSTANCE.getMulTerm();

    /**
     * The meta object literal for the '<em><b>Mul Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MUL_TERM__MUL_OP = eINSTANCE.getMulTerm_MulOp();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PowerTermImpl <em>Power Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PowerTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPowerTerm()
     * @generated
     */
    EClass POWER_TERM = eINSTANCE.getPowerTerm();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.UnaryTermImpl <em>Unary Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.UnaryTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUnaryTerm()
     * @generated
     */
    EClass UNARY_TERM = eINSTANCE.getUnaryTerm();

    /**
     * The meta object literal for the '<em><b>Un Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_TERM__UN_OP = eINSTANCE.getUnaryTerm_UnOp();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryTermImpl <em>Primary Term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PrimaryTermImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryTerm()
     * @generated
     */
    EClass PRIMARY_TERM = eINSTANCE.getPrimaryTerm();

    /**
     * The meta object literal for the '<em><b>Const</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_TERM__CONST = eINSTANCE.getPrimaryTerm_Const();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_TERM__VARIABLE = eINSTANCE.getPrimaryTerm_Variable();

    /**
     * The meta object literal for the '<em><b>State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_TERM__STATE = eINSTANCE.getPrimaryTerm_State();

    /**
     * The meta object literal for the '<em><b>Fun App</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_TERM__FUN_APP = eINSTANCE.getPrimaryTerm_FunApp();

    /**
     * The meta object literal for the '<em><b>Nested Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_TERM__NESTED_TERM = eINSTANCE.getPrimaryTerm_NestedTerm();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FunApplicationImpl <em>Fun Application</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FunApplicationImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFunApplication()
     * @generated
     */
    EClass FUN_APPLICATION = eINSTANCE.getFunApplication();

    /**
     * The meta object literal for the '<em><b>Fn Param</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_APPLICATION__FN_PARAM = eINSTANCE.getFunApplication_FnParam();

    /**
     * The meta object literal for the '<em><b>State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUN_APPLICATION__STATE = eINSTANCE.getFunApplication_State();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConstantImpl <em>Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConstantImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getConstant();

    /**
     * The meta object literal for the '<em><b>Num</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__NUM = eINSTANCE.getConstant_Num();

    /**
     * The meta object literal for the '<em><b>Bool</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__BOOL = eINSTANCE.getConstant_Bool();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.NumericLiteralImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getNumericLiteral()
     * @generated
     */
    EClass NUMERIC_LITERAL = eINSTANCE.getNumericLiteral();

    /**
     * The meta object literal for the '<em><b>Sig</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__SIG = eINSTANCE.getNumericLiteral_Sig();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__VALUE = eINSTANCE.getNumericLiteral_Value();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.IntegerLiteralImpl <em>Integer Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.IntegerLiteralImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getIntegerLiteral()
     * @generated
     */
    EClass INTEGER_LITERAL = eINSTANCE.getIntegerLiteral();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.RealLiteralImpl <em>Real Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.RealLiteralImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRealLiteral()
     * @generated
     */
    EClass REAL_LITERAL = eINSTANCE.getRealLiteral();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaImpl <em>Pattern Free Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPatternFreeFormula()
     * @generated
     */
    EClass PATTERN_FREE_FORMULA = eINSTANCE.getPatternFreeFormula();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_FREE_FORMULA__LEFT = eINSTANCE.getPatternFreeFormula_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_FREE_FORMULA__RIGHT = eINSTANCE.getPatternFreeFormula_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionPatternFreeFormulaImpl <em>Conjunction Pattern Free Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionPatternFreeFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionPatternFreeFormula()
     * @generated
     */
    EClass CONJUNCTION_PATTERN_FREE_FORMULA = eINSTANCE.getConjunctionPatternFreeFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryPatternFreeFormulaImpl <em>Primary Pattern Free Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PrimaryPatternFreeFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryPatternFreeFormula()
     * @generated
     */
    EClass PRIMARY_PATTERN_FREE_FORMULA = eINSTANCE.getPrimaryPatternFreeFormula();

    /**
     * The meta object literal for the '<em><b>Atomic</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_PATTERN_FREE_FORMULA__ATOMIC = eINSTANCE.getPrimaryPatternFreeFormula_Atomic();

    /**
     * The meta object literal for the '<em><b>Nested Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_PATTERN_FREE_FORMULA__NESTED_FORMULA = eINSTANCE.getPrimaryPatternFreeFormula_NestedFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.RequirementImpl <em>Requirement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.RequirementImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getRequirement()
     * @generated
     */
    EClass REQUIREMENT = eINSTANCE.getRequirement();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REQUIREMENT__NAME = eINSTANCE.getRequirement_Name();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQUIREMENT__PATTERN = eINSTANCE.getRequirement_Pattern();

    /**
     * The meta object literal for the '<em><b>Extra Inv</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REQUIREMENT__EXTRA_INV = eINSTANCE.getRequirement_ExtraInv();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ExtraInvariantImpl <em>Extra Invariant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ExtraInvariantImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getExtraInvariant()
     * @generated
     */
    EClass EXTRA_INVARIANT = eINSTANCE.getExtraInvariant();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXTRA_INVARIANT__NAME = eINSTANCE.getExtraInvariant_Name();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXTRA_INVARIANT__PATTERN = eINSTANCE.getExtraInvariant_Pattern();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaParameterValueImpl <em>Pattern Free Formula Parameter Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PatternFreeFormulaParameterValueImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPatternFreeFormulaParameterValue()
     * @generated
     */
    EClass PATTERN_FREE_FORMULA_PARAMETER_VALUE = eINSTANCE.getPatternFreeFormulaParameterValue();

    /**
     * The meta object literal for the '<em><b>States</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_FREE_FORMULA_PARAMETER_VALUE__STATES = eINSTANCE.getPatternFreeFormulaParameterValue_States();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PATTERN_FREE_FORMULA_PARAMETER_VALUE__FORMULA = eINSTANCE.getPatternFreeFormulaParameterValue_Formula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.FutureLemmasImpl <em>Future Lemmas</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.FutureLemmasImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getFutureLemmas()
     * @generated
     */
    EClass FUTURE_LEMMAS = eINSTANCE.getFutureLemmas();

    /**
     * The meta object literal for the '<em><b>L1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_LEMMAS__L1 = eINSTANCE.getFutureLemmas_L1();

    /**
     * The meta object literal for the '<em><b>L2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_LEMMAS__L2 = eINSTANCE.getFutureLemmas_L2();

    /**
     * The meta object literal for the '<em><b>L3</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE_LEMMAS__L3 = eINSTANCE.getFutureLemmas_L3();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PastLemmasImpl <em>Past Lemmas</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PastLemmasImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastLemmas()
     * @generated
     */
    EClass PAST_LEMMAS = eINSTANCE.getPastLemmas();

    /**
     * The meta object literal for the '<em><b>L4</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_LEMMAS__L4 = eINSTANCE.getPastLemmas_L4();

    /**
     * The meta object literal for the '<em><b>L5</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_LEMMAS__L5 = eINSTANCE.getPastLemmas_L5();

    /**
     * The meta object literal for the '<em><b>L6</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_LEMMAS__L6 = eINSTANCE.getPastLemmas_L6();

    /**
     * The meta object literal for the '<em><b>L7</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_LEMMAS__L7 = eINSTANCE.getPastLemmas_L7();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.DerivedLemmasImpl <em>Derived Lemmas</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.DerivedLemmasImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDerivedLemmas()
     * @generated
     */
    EClass DERIVED_LEMMAS = eINSTANCE.getDerivedLemmas();

    /**
     * The meta object literal for the '<em><b>L8</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_LEMMAS__L8 = eINSTANCE.getDerivedLemmas_L8();

    /**
     * The meta object literal for the '<em><b>L9</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DERIVED_LEMMAS__L9 = eINSTANCE.getDerivedLemmas_L9();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.LemmaImpl <em>Lemma</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.LemmaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getLemma()
     * @generated
     */
    EClass LEMMA = eINSTANCE.getLemma();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LEMMA__NAME = eINSTANCE.getLemma_Name();

    /**
     * The meta object literal for the '<em><b>CVars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__CVARS = eINSTANCE.getLemma_CVars();

    /**
     * The meta object literal for the '<em><b>Fn Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__FN_VARS = eINSTANCE.getLemma_FnVars();

    /**
     * The meta object literal for the '<em><b>Simple Fm Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__SIMPLE_FM_VARS = eINSTANCE.getLemma_SimpleFmVars();

    /**
     * The meta object literal for the '<em><b>Ifm Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__IFM_VARS = eINSTANCE.getLemma_IfmVars();

    /**
     * The meta object literal for the '<em><b>Rfm Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__RFM_VARS = eINSTANCE.getLemma_RfmVars();

    /**
     * The meta object literal for the '<em><b>Init State</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__INIT_STATE = eINSTANCE.getLemma_InitState();

    /**
     * The meta object literal for the '<em><b>Final State</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__FINAL_STATE = eINSTANCE.getLemma_FinalState();

    /**
     * The meta object literal for the '<em><b>Prem</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA__PREM = eINSTANCE.getLemma_Prem();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.LemmaPremiseFormulaImpl <em>Lemma Premise Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.LemmaPremiseFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getLemmaPremiseFormula()
     * @generated
     */
    EClass LEMMA_PREMISE_FORMULA = eINSTANCE.getLemmaPremiseFormula();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA_PREMISE_FORMULA__LEFT = eINSTANCE.getLemmaPremiseFormula_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LEMMA_PREMISE_FORMULA__RIGHT = eINSTANCE.getLemmaPremiseFormula_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.DisjunctionLemmaPremiseFormulaImpl <em>Disjunction Lemma Premise Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.DisjunctionLemmaPremiseFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getDisjunctionLemmaPremiseFormula()
     * @generated
     */
    EClass DISJUNCTION_LEMMA_PREMISE_FORMULA = eINSTANCE.getDisjunctionLemmaPremiseFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionLemmaPremiseFormulaImpl <em>Conjunction Lemma Premise Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionLemmaPremiseFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunctionLemmaPremiseFormula()
     * @generated
     */
    EClass CONJUNCTION_LEMMA_PREMISE_FORMULA = eINSTANCE.getConjunctionLemmaPremiseFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PrimaryLemmaPremiseFormulaImpl <em>Primary Lemma Premise Formula</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PrimaryLemmaPremiseFormulaImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPrimaryLemmaPremiseFormula()
     * @generated
     */
    EClass PRIMARY_LEMMA_PREMISE_FORMULA = eINSTANCE.getPrimaryLemmaPremiseFormula();

    /**
     * The meta object literal for the '<em><b>Atomic</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_LEMMA_PREMISE_FORMULA__ATOMIC = eINSTANCE.getPrimaryLemmaPremiseFormula_Atomic();

    /**
     * The meta object literal for the '<em><b>Always Imp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_LEMMA_PREMISE_FORMULA__ALWAYS_IMP = eINSTANCE.getPrimaryLemmaPremiseFormula_AlwaysImp();

    /**
     * The meta object literal for the '<em><b>Inst</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_LEMMA_PREMISE_FORMULA__INST = eINSTANCE.getPrimaryLemmaPremiseFormula_Inst();

    /**
     * The meta object literal for the '<em><b>Nested Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRIMARY_LEMMA_PREMISE_FORMULA__NESTED_FORMULA = eINSTANCE.getPrimaryLemmaPremiseFormula_NestedFormula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.AlwaysImplicationImpl <em>Always Implication</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.AlwaysImplicationImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAlwaysImplication()
     * @generated
     */
    EClass ALWAYS_IMPLICATION = eINSTANCE.getAlwaysImplication();

    /**
     * The meta object literal for the '<em><b>State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALWAYS_IMPLICATION__STATE = eINSTANCE.getAlwaysImplication_State();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALWAYS_IMPLICATION__LEFT = eINSTANCE.getAlwaysImplication_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALWAYS_IMPLICATION__RIGHT = eINSTANCE.getAlwaysImplication_Right();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.AlwaysImplicationParameterValueImpl <em>Always Implication Parameter Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.AlwaysImplicationParameterValueImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAlwaysImplicationParameterValue()
     * @generated
     */
    EClass ALWAYS_IMPLICATION_PARAMETER_VALUE = eINSTANCE.getAlwaysImplicationParameterValue();

    /**
     * The meta object literal for the '<em><b>State</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALWAYS_IMPLICATION_PARAMETER_VALUE__STATE = eINSTANCE.getAlwaysImplicationParameterValue_State();

    /**
     * The meta object literal for the '<em><b>Formula</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALWAYS_IMPLICATION_PARAMETER_VALUE__FORMULA = eINSTANCE.getAlwaysImplicationParameterValue_Formula();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternInstanceImpl <em>Past Extra Invariant Pattern Instance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.PastExtraInvariantPatternInstanceImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getPastExtraInvariantPatternInstance()
     * @generated
     */
    EClass PAST_EXTRA_INVARIANT_PATTERN_INSTANCE = eINSTANCE.getPastExtraInvariantPatternInstance();

    /**
     * The meta object literal for the '<em><b>Pattern</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__PATTERN = eINSTANCE.getPastExtraInvariantPatternInstance_Pattern();

    /**
     * The meta object literal for the '<em><b>CParams</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__CPARAMS = eINSTANCE.getPastExtraInvariantPatternInstance_CParams();

    /**
     * The meta object literal for the '<em><b>Fn Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FN_PARAMS = eINSTANCE.getPastExtraInvariantPatternInstance_FnParams();

    /**
     * The meta object literal for the '<em><b>Fm Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__FM_PARAMS = eINSTANCE.getPastExtraInvariantPatternInstance_FmParams();

    /**
     * The meta object literal for the '<em><b>State</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST_EXTRA_INVARIANT_PATTERN_INSTANCE__STATE = eINSTANCE.getPastExtraInvariantPatternInstance_State();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.impl.ConjunctionImpl <em>Conjunction</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.impl.ConjunctionImpl
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getConjunction()
     * @generated
     */
    EClass CONJUNCTION = eINSTANCE.getConjunction();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.EqPredicate <em>Eq Predicate</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.EqPredicate
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getEqPredicate()
     * @generated
     */
    EEnum EQ_PREDICATE = eINSTANCE.getEqPredicate();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.CompPredicate <em>Comp Predicate</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.CompPredicate
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getCompPredicate()
     * @generated
     */
    EEnum COMP_PREDICATE = eINSTANCE.getCompPredicate();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.AddOperator <em>Add Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.AddOperator
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getAddOperator()
     * @generated
     */
    EEnum ADD_OPERATOR = eINSTANCE.getAddOperator();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.MulOperator <em>Mul Operator</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.MulOperator
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getMulOperator()
     * @generated
     */
    EEnum MUL_OPERATOR = eINSTANCE.getMulOperator();

    /**
     * The meta object literal for the '{@link su.nsk.iae.rpl.rPL.UnMinus <em>Un Minus</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see su.nsk.iae.rpl.rPL.UnMinus
     * @see su.nsk.iae.rpl.rPL.impl.RPLPackageImpl#getUnMinus()
     * @generated
     */
    EEnum UN_MINUS = eINSTANCE.getUnMinus();

  }

} //RPLPackage
