/**
 * generated by Xtext 2.36.0
 */
package su.nsk.iae.rpl.rPL;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Past Extra Invariant Pattern Instance</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getPattern <em>Pattern</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getCParams <em>CParams</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFnParams <em>Fn Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getFmParams <em>Fm Params</em>}</li>
 *   <li>{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getState <em>State</em>}</li>
 * </ul>
 *
 * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance()
 * @model
 * @generated
 */
public interface PastExtraInvariantPatternInstance extends EObject
{
  /**
   * Returns the value of the '<em><b>Pattern</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Pattern</em>' reference.
   * @see #setPattern(PastExtraInvariantPattern)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance_Pattern()
   * @model
   * @generated
   */
  PastExtraInvariantPattern getPattern();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getPattern <em>Pattern</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Pattern</em>' reference.
   * @see #getPattern()
   * @generated
   */
  void setPattern(PastExtraInvariantPattern value);

  /**
   * Returns the value of the '<em><b>CParams</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.ConstantParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>CParams</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance_CParams()
   * @model containment="true"
   * @generated
   */
  EList<ConstantParameter> getCParams();

  /**
   * Returns the value of the '<em><b>Fn Params</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.FunctionalParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Fn Params</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance_FnParams()
   * @model containment="true"
   * @generated
   */
  EList<FunctionalParameter> getFnParams();

  /**
   * Returns the value of the '<em><b>Fm Params</b></em>' containment reference list.
   * The list contents are of type {@link su.nsk.iae.rpl.rPL.FormulaParameter}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Fm Params</em>' containment reference list.
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance_FmParams()
   * @model containment="true"
   * @generated
   */
  EList<FormulaParameter> getFmParams();

  /**
   * Returns the value of the '<em><b>State</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>State</em>' reference.
   * @see #setState(UpdateStateVariable)
   * @see su.nsk.iae.rpl.rPL.RPLPackage#getPastExtraInvariantPatternInstance_State()
   * @model
   * @generated
   */
  UpdateStateVariable getState();

  /**
   * Sets the value of the '{@link su.nsk.iae.rpl.rPL.PastExtraInvariantPatternInstance#getState <em>State</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>State</em>' reference.
   * @see #getState()
   * @generated
   */
  void setState(UpdateStateVariable value);

} // PastExtraInvariantPatternInstance
