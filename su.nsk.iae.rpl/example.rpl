import "Lib.rpl";

derivedreq pattern always2(simple formulas: A11, A12 formulas: A2) = 
always(formulas: lambda r2 r1. weak_previous(formulas: lambda r4 r3. ~A11(r3) final: r2 current: r1) \/ ~A12(r1) \/ A2(r2, r1));

derivedreq pattern P1_1(const : t simple formulas : A1 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	~A1(r1) \/ constrained_until(const : t formulas : A2, A3 final : r2 current : r1)
);

derivedreq pattern P1_2(const : t simple formulas : A11, A12 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	weak_previous(formulas: lambda r4 r3. ~ A11(r3) final: r2 current: r1) \/ ~ A12(r1) \/ constrained_until(const : t formulas : A2, A3 final : r2 current : r1)
);

derivedreq pattern P2_1(const : t simple formulas : A1 formulas : A2) = always(formulas : lambda r2 r1. 
	~A1(r1) \/ constrained_always(const : t formulas : A2 final : r2 current : r1)
);

derivedreq pattern P2_2(const : t simple formulas : A11, A12 formulas : A2) = always(formulas : lambda r2 r1. 
	weak_previous(formulas: lambda r4 r3. ~ A11(r3) final: r2 current: r1) \/ ~ A12(r1) \/
	 constrained_always(const : t formulas : A2 final : r2 current : r1)
);

derivedreq pattern P3_1(simple formulas : A1 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	~A1(r1) \/weak_until(formulas : A2, A3 final : r2 current : r1)
);

derivedreq pattern P3_2(simple formulas : A11, A12 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	weak_previous(formulas: lambda r4 r3. ~ A11(r3) final: r2 current: r1) \/ ~ A12(r1) \/ 
	weak_until(formulas : A2, A3 final : r2 current : r1)
);

derivedreq pattern P4_1(const: t simple formulas : A1 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	~A1(r1) \/ constrained_weak_until(const: t formulas : A2, A3 final : r2 current : r1)
);

derivedreq pattern P4_2(const: t simple formulas : A11, A12 formulas : A2, A3) = always(formulas : lambda r2 r1. 
	weak_previous(formulas: lambda r4 r3. ~ A11(r3) final: r2 current: r1) \/ ~ A12(r1) \/ 
	constrained_weak_until(const : t formulas : A2, A3 final : r2 current : r1)
);