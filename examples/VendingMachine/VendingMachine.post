PROGRAM VendingMachine
  VAR_INPUT
    button1, button2: BOOL;
    deposited: INT;
    given1, given2: BOOL;
    paidOut: BOOL;
    cancel: BOOL;
  END_VAR
  
  VAR_OUTPUT
    product1, product2: BOOL;
    lockChanger: BOOL;
    change: INT;
    mode: INT;
    credit: INT;
    dispense: BOOL;
  END_VAR
  
  VAR CONSTANT
    PRESSED: BOOL := TRUE;
    IDLE: INT := 0;
    CHOICE: INT := 1;
    ADD_MONEY: INT := 2;
    DELIVERY: INT := 3;
    PAYING_OUT: INT := 4;
    PRICE1: INT := 10;
    PRICE2: INT := 50;
    DELIVERY_TIME_LIMIT: TIME := T#3s;
  END_VAR
  
  PROCESS Controller
    STATE waiting
      credit := credit + deposited;
      IF credit > 0 THEN
        lockChanger := TRUE;
        IF cancel THEN
          mode := PAYING_OUT;
          SET STATE payOut;
        ELSE
          mode := CHOICE;
          SET NEXT;
        END_IF
      END_IF
    END_STATE
    
    STATE choice
      IF cancel THEN
        mode := PAYING_OUT;
        SET STATE payOut;
      ELSIF button1 = PRESSED THEN
        START PROCESS Sale1;
        SET STATE sale;
      ELSIF button2 = PRESSED THEN
        START PROCESS Sale2;
        SET STATE sale;
      END_IF
    END_STATE
    
    STATE sale
      IF PROCESS Sale1 IN STATE INACTIVE AND PROCESS Sale2 IN STATE INACTIVE THEN
        IF PROCESS Sale1 IN STATE STOP AND PROCESS Sale2 IN STATE STOP THEN
          mode := PAYING_OUT;
          SET NEXT;
        ELSE
          STOP PROCESS Sale1;
          STOP PROCESS Sale2;
          mode := CHOICE;
          SET STATE choice;
        END_IF
      END_IF
    END_STATE
    
    STATE payOut
      dispense := TRUE;
      change := credit;
      IF paidOut THEN
        dispense := FALSE;
        change := 0;
        credit := 0;
        mode := IDLE;
        lockChanger := FALSE;
        SET STATE waiting;
      END_IF
    END_STATE
  END_PROCESS
  
  PROCESS Sale1
    STATE addMoney
      lockChanger := FALSE;
      mode := ADD_MONEY;
      credit := credit + deposited;
      IF cancel OR credit >= PRICE1 THEN
        lockChanger := TRUE;
        IF cancel THEN
          STOP;
        ELSE
          mode := DELIVERY;
          product1 := TRUE;
          SET NEXT;
        END_IF
      END_IF
    END_STATE
    
    STATE delivery
      IF given1 THEN
        product1 := FALSE;
        credit := credit - PRICE1;
        STOP;
      END_IF
      TIMEOUT DELIVERY_TIME_LIMIT THEN
        product1 := FALSE;
        ERROR;
      END_TIMEOUT
    END_STATE
  END_PROCESS
  
  PROCESS Sale2
    STATE addMoney
      lockChanger := FALSE;
      mode := ADD_MONEY;
      credit := credit + deposited;
      IF cancel OR credit >= PRICE2 THEN
        lockChanger := TRUE;
        IF cancel THEN
          STOP;
        ELSE
          mode := DELIVERY;
          product2 := TRUE;
          SET NEXT;
        END_IF
      END_IF
    END_STATE
    
    STATE delivery
      IF given2 THEN
        product2 := FALSE;
        credit := credit - PRICE2;
        STOP;
      END_IF
      TIMEOUT DELIVERY_TIME_LIMIT THEN
        product2 := FALSE;
        ERROR;
      END_TIMEOUT
    END_STATE
  END_PROCESS
END_PROGRAM       
        
        